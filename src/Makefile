# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/bitcoinair
pkgincludedir = $(includedir)/bitcoinair
pkglibdir = $(libdir)/bitcoinair
pkglibexecdir = $(libexecdir)/bitcoinair
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
am__append_1 =  \
	-I$(top_srcdir)/src/leveldb/include \
	-I$(top_srcdir)/src/leveldb/helpers/memenv
am__append_2 = $(top_builddir)/src/leveldb/libleveldb.a
am__append_3 = $(top_builddir)/src/leveldb/libmemenv.a
am__append_4 = libBitcoinAir_wallet.a
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5)
TESTS = $(am__EXEEXT_3) $(am__EXEEXT_5)
am__append_5 = BitcoinAird
am__append_6 = BitcoinAir-cli
am__append_7 = libBitcoinAir_wallet.a
#am__append_8 = bitcoind-res.rc
#am__append_9 = bitcoin-cli-res.rc
am__append_10 = -I$(top_srcdir)/src/test/
am__append_11 = test/test_BitcoinAir
am__append_12 = test/test_BitcoinAir
am__append_13 = \
  test/accounting_tests.cpp \
  test/wallet_tests.cpp

am__append_14 = $(LIBBITCOINAIR_WALLET)
am__append_15 = *.gcda *.gcno
am__append_16 = -std=c++11 \
  -I$(top_srcdir)/src \
  -I$(top_builddir)/src/qt \
  -I$(top_builddir)/src/qt/forms \
  $(PROTOBUF_CFLAGS) \
  $(QR_CFLAGS)

am__append_17 = qt/BitcoinAir-qt
am__append_18 = qt/libBitcoinAirqt.a
am__append_19 = \
  qt/aboutdialog.cpp \
  qt/addressbookpage.cpp \
  qt/addresstablemodel.cpp \
  qt/askpassphrasedialog.cpp \
  qt/coincontroldialog.cpp \
  qt/coincontroltreewidget.cpp \
  qt/editaddressdialog.cpp \
  qt/overviewpage.cpp \
  qt/paymentserver.cpp \
  qt/mintingview.cpp \
  qt/mintingtablemodel.cpp \
  qt/mintingfilterproxy.cpp \
  qt/multisigaddressentry.cpp \
  qt/multisiginputentry.cpp \
  qt/multisigdialog.cpp \
  qt/sendcoinsdialog.cpp \
  qt/sendcoinsentry.cpp \
  qt/signverifymessagedialog.cpp \
  qt/transactiondesc.cpp \
  qt/transactiondescdialog.cpp \
  qt/transactionfilterproxy.cpp \
  qt/transactionrecord.cpp \
  qt/transactiontablemodel.cpp \
  qt/transactionview.cpp \
  qt/walletframe.cpp \
  qt/walletmodel.cpp \
  qt/walletstack.cpp \
  qt/walletview.cpp

#am__append_20 = $(BITCOINAIR_MM)
#am__append_21 = $(BITCOINAIR_RC)
am__append_22 = qt/qrcodedialog.cpp
am__append_23 = $(LIBBITCOINAIR_WALLET) 
am__append_24 = $(CLEAN_QT)
am__append_25 = -I$(top_srcdir)/src \
  -I$(top_srcdir)/src/qt \
  -I$(top_builddir)/src/qt \
  $(PROTOBUF_CFLAGS) \
    $(QR_CFLAGS)

am__append_26 = qt/test/test_BitcoinAir-qt
am__append_27 = qt/test/test_BitcoinAir-qt
am__append_28 = $(LIBBITCOINAIR_WALLET) 
am__append_29 = $(CLEAN_BITCOINAIR_QT_TEST)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_chrono.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_pthread.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_find_bdb48.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_qt.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_subdir_to_include.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 $(top_srcdir)/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = bitcoin-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = BitcoinAird$(EXEEXT)
am__EXEEXT_2 = BitcoinAir-cli$(EXEEXT)
am__EXEEXT_3 = test/test_BitcoinAir$(EXEEXT)
am__EXEEXT_4 = qt/BitcoinAir-qt$(EXEEXT)
am__EXEEXT_5 =  \
	qt/test/test_BitcoinAir-qt$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libBitcoinAir_cli_a_AR = $(AR) $(ARFLAGS)
libBitcoinAir_cli_a_LIBADD =
am__objects_1 =
am_libBitcoinAir_cli_a_OBJECTS = rpcclient.$(OBJEXT) $(am__objects_1)
libBitcoinAir_cli_a_OBJECTS = $(am_libBitcoinAir_cli_a_OBJECTS)
libBitcoinAir_common_a_AR = $(AR) $(ARFLAGS)
libBitcoinAir_common_a_LIBADD =
am_libBitcoinAir_common_a_OBJECTS = hash.$(OBJEXT) key.$(OBJEXT) \
	netbase.$(OBJEXT) protocol.$(OBJEXT) rpcprotocol.$(OBJEXT) \
	sync.$(OBJEXT) util.$(OBJEXT) version.$(OBJEXT) \
	$(am__objects_1)
nodist_libBitcoinAir_common_a_OBJECTS =
libBitcoinAir_common_a_OBJECTS = $(am_libBitcoinAir_common_a_OBJECTS) \
	$(nodist_libBitcoinAir_common_a_OBJECTS)
libBitcoinAir_server_a_AR = $(AR) $(ARFLAGS)
libBitcoinAir_server_a_LIBADD =
am_libBitcoinAir_server_a_OBJECTS = addrman.$(OBJEXT) alert.$(OBJEXT) \
	rpcserver.$(OBJEXT) bloom.$(OBJEXT) checkpoints.$(OBJEXT) \
	checkpointsync.$(OBJEXT) crypter.$(OBJEXT) init.$(OBJEXT) \
	kernel.$(OBJEXT) keystore.$(OBJEXT) leveldbwrapper.$(OBJEXT) \
	main.$(OBJEXT) net.$(OBJEXT) noui.$(OBJEXT) \
	rpcblockchain.$(OBJEXT) rpcnet.$(OBJEXT) \
	rpcrawtransaction.$(OBJEXT) rpcserver.$(OBJEXT) txdb.$(OBJEXT) \
	$(am__objects_1) $(am__objects_1)
libBitcoinAir_server_a_OBJECTS = $(am_libBitcoinAir_server_a_OBJECTS)
libBitcoinAir_wallet_a_AR = $(AR) $(ARFLAGS)
libBitcoinAir_wallet_a_LIBADD =
am_libBitcoinAir_wallet_a_OBJECTS = db.$(OBJEXT) rpcdump.$(OBJEXT) \
	rpcmining.$(OBJEXT) rpcminting.$(OBJEXT) script.$(OBJEXT) \
	kernelrecord.$(OBJEXT) wallet.$(OBJEXT) walletdb.$(OBJEXT) \
	rpcwallet.$(OBJEXT) $(am__objects_1)
libBitcoinAir_wallet_a_OBJECTS = $(am_libBitcoinAir_wallet_a_OBJECTS)
qt_libBitcoinAirqt_a_AR = $(AR) $(ARFLAGS)
qt_libBitcoinAirqt_a_LIBADD =
am__qt_libBitcoinAirqt_a_SOURCES_DIST = qt/bitcoin.cpp \
	qt/bitcoinaddressvalidator.cpp qt/bitcoinamountfield.cpp \
	qt/bitcoingui.cpp qt/bitcoinstrings.cpp qt/bitcoinunits.cpp \
	qt/clientmodel.cpp qt/csvmodelwriter.cpp qt/guiutil.cpp \
	qt/monitoreddatamapper.cpp qt/notificator.cpp \
	qt/optionsdialog.cpp qt/optionsmodel.cpp \
	qt/qvalidatedlineedit.cpp qt/qvaluecombobox.cpp \
	qt/rpcconsole.cpp qt/splashscreen.cpp qt/aboutdialog.cpp \
	qt/addressbookpage.cpp qt/addresstablemodel.cpp \
	qt/askpassphrasedialog.cpp qt/coincontroldialog.cpp \
	qt/coincontroltreewidget.cpp qt/editaddressdialog.cpp \
	qt/overviewpage.cpp qt/paymentserver.cpp qt/mintingview.cpp \
	qt/mintingtablemodel.cpp qt/mintingfilterproxy.cpp \
	qt/multisigaddressentry.cpp qt/multisiginputentry.cpp \
	qt/multisigdialog.cpp qt/sendcoinsdialog.cpp \
	qt/sendcoinsentry.cpp qt/signverifymessagedialog.cpp \
	qt/transactiondesc.cpp qt/transactiondescdialog.cpp \
	qt/transactionfilterproxy.cpp qt/transactionrecord.cpp \
	qt/transactiontablemodel.cpp qt/transactionview.cpp \
	qt/walletframe.cpp qt/walletmodel.cpp qt/walletstack.cpp \
	qt/walletview.cpp qt/aboutdialog.h qt/addressbookpage.h \
	qt/addresstablemodel.h qt/askpassphrasedialog.h \
	qt/bitcoinaddressvalidator.h qt/bitcoinamountfield.h \
	qt/bitcoingui.h qt/bitcoinunits.h qt/clientmodel.h \
	qt/coincontroldialog.h qt/coincontroltreewidget.h \
	qt/csvmodelwriter.h qt/editaddressdialog.h qt/guiconstants.h \
	qt/guiutil.h qt/macdockiconhandler.h \
	qt/macnotificationhandler.h qt/mintingview.h \
	qt/mintingtablemodel.h qt/mintingfilterproxy.h \
	qt/multisigaddressentry.h qt/multisiginputentry.h \
	qt/multisigdialog.h qt/monitoreddatamapper.h qt/notificator.h \
	qt/optionsdialog.h qt/optionsmodel.h qt/overviewpage.h \
	qt/paymentserver.h qt/qrcodedialog.h qt/qvalidatedlineedit.h \
	qt/qvaluecombobox.h qt/rpcconsole.h qt/sendcoinsdialog.h \
	qt/sendcoinsentry.h qt/signverifymessagedialog.h \
	qt/splashscreen.h qt/transactiondescdialog.h \
	qt/transactiondesc.h qt/transactionfilterproxy.h \
	qt/transactionrecord.h qt/transactiontablemodel.h \
	qt/transactionview.h qt/walletframe.h qt/walletmodel.h \
	qt/walletstack.h qt/walletview.h qt/forms/aboutdialog.ui \
	qt/forms/addressbookpage.ui qt/forms/askpassphrasedialog.ui \
	qt/forms/editaddressdialog.ui qt/forms/coincontroldialog.ui \
	qt/forms/multisigaddressentry.ui qt/forms/multisigdialog.ui \
	qt/forms/multisiginputentry.ui qt/forms/optionsdialog.ui \
	qt/forms/overviewpage.ui qt/forms/qrcodedialog.ui \
	qt/forms/rpcconsole.ui qt/forms/sendcoinsdialog.ui \
	qt/forms/sendcoinsentry.ui qt/forms/signverifymessagedialog.ui \
	qt/forms/transactiondescdialog.ui qt/bitcoin.qrc \
	qt/locale/bitcoin_af_ZA.ts qt/locale/bitcoin_ar.ts \
	qt/locale/bitcoin_bg.ts qt/locale/bitcoin_bs.ts \
	qt/locale/bitcoin_ca.ts qt/locale/bitcoin_ca_ES.ts \
	qt/locale/bitcoin_cs.ts qt/locale/bitcoin_cy.ts \
	qt/locale/bitcoin_da.ts qt/locale/bitcoin_de.ts \
	qt/locale/bitcoin_el_GR.ts qt/locale/bitcoin_en.ts \
	qt/locale/bitcoin_eo.ts qt/locale/bitcoin_es.ts \
	qt/locale/bitcoin_es_CL.ts qt/locale/bitcoin_et.ts \
	qt/locale/bitcoin_eu_ES.ts qt/locale/bitcoin_fa.ts \
	qt/locale/bitcoin_fa_IR.ts qt/locale/bitcoin_fi.ts \
	qt/locale/bitcoin_fr.ts qt/locale/bitcoin_fr_CA.ts \
	qt/locale/bitcoin_gu_IN.ts qt/locale/bitcoin_he.ts \
	qt/locale/bitcoin_hi_IN.ts qt/locale/bitcoin_hr.ts \
	qt/locale/bitcoin_hu.ts qt/locale/bitcoin_it.ts \
	qt/locale/bitcoin_ja.ts qt/locale/bitcoin_la.ts \
	qt/locale/bitcoin_lt.ts qt/locale/bitcoin_lv_LV.ts \
	qt/locale/bitcoin_nb.ts qt/locale/bitcoin_nl.ts \
	qt/locale/bitcoin_pl.ts qt/locale/bitcoin_pt_BR.ts \
	qt/locale/bitcoin_pt_PT.ts qt/locale/bitcoin_ro_RO.ts \
	qt/locale/bitcoin_ru.ts qt/locale/bitcoin_sk.ts \
	qt/locale/bitcoin_sr.ts qt/locale/bitcoin_sv.ts \
	qt/locale/bitcoin_th_TH.ts qt/locale/bitcoin_tr.ts \
	qt/locale/bitcoin_uk.ts qt/locale/bitcoin_zh_CN.ts \
	qt/locale/bitcoin_zh_TW.ts qt/res/icons/BitcoinAir.png \
	qt/res/icons/address-book.png qt/res/icons/quit.png \
	qt/res/icons/send.png qt/res/icons/toolbar.png \
	qt/res/icons/connect0_16.png qt/res/icons/connect1_16.png \
	qt/res/icons/connect2_16.png qt/res/icons/connect3_16.png \
	qt/res/icons/connect4_16.png qt/res/icons/transaction0.png \
	qt/res/icons/transaction2.png qt/res/icons/clock1.png \
	qt/res/icons/clock2.png qt/res/icons/clock3.png \
	qt/res/icons/clock4.png qt/res/icons/clock5.png \
	qt/res/icons/configure.png qt/res/icons/receive.png \
	qt/res/icons/editpaste.png qt/res/icons/editcopy.png \
	qt/res/icons/add.png qt/res/icons/bitcoin_testnet.png \
	qt/res/icons/toolbar_testnet.png qt/res/icons/edit.png \
	qt/res/icons/history.png qt/res/icons/overview.png \
	qt/res/icons/export.png qt/res/icons/synced.png \
	qt/res/icons/remove.png qt/res/icons/tx_mined.png \
	qt/res/icons/tx_input.png qt/res/icons/tx_output.png \
	qt/res/icons/tx_inout.png qt/res/icons/lock_closed.png \
	qt/res/icons/lock_open.png qt/res/icons/key.png \
	qt/res/icons/filesave.png qt/res/icons/qrcode.png \
	qt/res/icons/debugwindow.png qt/res/icons/BitcoinAir.ico \
	qt/res/icons/bitcoin_testnet.ico qt/res/images/about.png \
	qt/res/images/splash.png qt/res/images/splash_testnet.png \
	qt/res/movies/update_spinner.mng
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_2 = qt/libBitcoinAirqt_a-aboutdialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-addressbookpage.$(OBJEXT) \
	qt/libBitcoinAirqt_a-addresstablemodel.$(OBJEXT) \
	qt/libBitcoinAirqt_a-askpassphrasedialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-coincontroldialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-coincontroltreewidget.$(OBJEXT) \
	qt/libBitcoinAirqt_a-editaddressdialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-overviewpage.$(OBJEXT) \
	qt/libBitcoinAirqt_a-paymentserver.$(OBJEXT) \
	qt/libBitcoinAirqt_a-mintingview.$(OBJEXT) \
	qt/libBitcoinAirqt_a-mintingtablemodel.$(OBJEXT) \
	qt/libBitcoinAirqt_a-mintingfilterproxy.$(OBJEXT) \
	qt/libBitcoinAirqt_a-multisigaddressentry.$(OBJEXT) \
	qt/libBitcoinAirqt_a-multisiginputentry.$(OBJEXT) \
	qt/libBitcoinAirqt_a-multisigdialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-sendcoinsdialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-sendcoinsentry.$(OBJEXT) \
	qt/libBitcoinAirqt_a-signverifymessagedialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-transactiondesc.$(OBJEXT) \
	qt/libBitcoinAirqt_a-transactiondescdialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-transactionfilterproxy.$(OBJEXT) \
	qt/libBitcoinAirqt_a-transactionrecord.$(OBJEXT) \
	qt/libBitcoinAirqt_a-transactiontablemodel.$(OBJEXT) \
	qt/libBitcoinAirqt_a-transactionview.$(OBJEXT) \
	qt/libBitcoinAirqt_a-walletframe.$(OBJEXT) \
	qt/libBitcoinAirqt_a-walletmodel.$(OBJEXT) \
	qt/libBitcoinAirqt_a-walletstack.$(OBJEXT) \
	qt/libBitcoinAirqt_a-walletview.$(OBJEXT)
am__objects_3 =  \
	qt/libBitcoinAirqt_a-bitcoin.$(OBJEXT) \
	qt/libBitcoinAirqt_a-bitcoinaddressvalidator.$(OBJEXT) \
	qt/libBitcoinAirqt_a-bitcoinamountfield.$(OBJEXT) \
	qt/libBitcoinAirqt_a-bitcoingui.$(OBJEXT) \
	qt/libBitcoinAirqt_a-bitcoinstrings.$(OBJEXT) \
	qt/libBitcoinAirqt_a-bitcoinunits.$(OBJEXT) \
	qt/libBitcoinAirqt_a-clientmodel.$(OBJEXT) \
	qt/libBitcoinAirqt_a-csvmodelwriter.$(OBJEXT) \
	qt/libBitcoinAirqt_a-guiutil.$(OBJEXT) \
	qt/libBitcoinAirqt_a-monitoreddatamapper.$(OBJEXT) \
	qt/libBitcoinAirqt_a-notificator.$(OBJEXT) \
	qt/libBitcoinAirqt_a-optionsdialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-optionsmodel.$(OBJEXT) \
	qt/libBitcoinAirqt_a-qvalidatedlineedit.$(OBJEXT) \
	qt/libBitcoinAirqt_a-qvaluecombobox.$(OBJEXT) \
	qt/libBitcoinAirqt_a-rpcconsole.$(OBJEXT) \
	qt/libBitcoinAirqt_a-splashscreen.$(OBJEXT) \
	$(am__objects_2)
am_qt_libBitcoinAirqt_a_OBJECTS = $(am__objects_3) \
	$(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) \
	$(am__objects_1)
am__objects_4 = qt/libBitcoinAirqt_a-moc_macdockiconhandler.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_macnotificationhandler.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_aboutdialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_addressbookpage.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_addresstablemodel.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_askpassphrasedialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_bitcoinamountfield.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_bitcoingui.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_bitcoinunits.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_clientmodel.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_coincontroldialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_coincontroltreewidget.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_csvmodelwriter.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_editaddressdialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_guiutil.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_multisigaddressentry.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_multisiginputentry.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_multisigdialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_mintingview.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_mintingtablemodel.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_mintingfilterproxy.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_monitoreddatamapper.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_notificator.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_optionsdialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_optionsmodel.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_overviewpage.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_paymentserver.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_qrcodedialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_qvalidatedlineedit.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_qvaluecombobox.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_rpcconsole.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_sendcoinsdialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_sendcoinsentry.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_signverifymessagedialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_splashscreen.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_transactiondesc.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_transactiondescdialog.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_transactionfilterproxy.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_transactiontablemodel.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_transactionview.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_walletframe.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_walletmodel.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_walletview.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_walletstack.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_rpcconsole.$(OBJEXT) \
	qt/libBitcoinAirqt_a-moc_overviewpage.$(OBJEXT)
am__objects_5 =  \
	qt/libBitcoinAirqt_a-qrc_bitcoin.$(OBJEXT)
nodist_qt_libBitcoinAirqt_a_OBJECTS =  \
	$(am__objects_4) $(am__objects_1) \
	$(am__objects_5)
qt_libBitcoinAirqt_a_OBJECTS = $(am_qt_libBitcoinAirqt_a_OBJECTS) \
	$(nodist_qt_libBitcoinAirqt_a_OBJECTS)
am__BitcoinAir_cli_SOURCES_DIST = bitcoin-cli.cpp bitcoin-cli-res.rc
#am__objects_6 = bitcoin-cli-res.$(OBJEXT)
am_BitcoinAir_cli_OBJECTS = bitcoin-cli.$(OBJEXT) $(am__objects_6)
BitcoinAir_cli_OBJECTS = $(am_BitcoinAir_cli_OBJECTS)
am__DEPENDENCIES_1 =
BitcoinAir_cli_DEPENDENCIES = libBitcoinAir_cli.a \
	libBitcoinAir_common.a $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
BitcoinAir_cli_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(BitcoinAir_cli_LDFLAGS) \
	$(LDFLAGS) -o $@
am__BitcoinAird_SOURCES_DIST = bitcoind.cpp bitcoind-res.rc
#am__objects_7 = bitcoind-res.$(OBJEXT)
am_BitcoinAird_OBJECTS = bitcoind.$(OBJEXT) $(am__objects_7)
BitcoinAird_OBJECTS = $(am_BitcoinAird_OBJECTS)
am__DEPENDENCIES_2 = $(am__append_2)
am__DEPENDENCIES_3 = $(am__append_3)
BitcoinAird_DEPENDENCIES = libBitcoinAir_server.a libBitcoinAir_cli.a \
	libBitcoinAir_common.a $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_1) $(am__append_7) \
	$(am__DEPENDENCIES_1)
BitcoinAird_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(BitcoinAird_LDFLAGS) $(LDFLAGS) -o $@
am__qt_BitcoinAir_qt_SOURCES_DIST = qt/bitcoin.cpp \
	qt/macdockiconhandler.mm qt/macnotificationhandler.mm \
	qt/res/bitcoin-qt-res.rc qt/qrcodedialog.cpp
am__objects_8 =  \
	qt/BitcoinAir_qt-macdockiconhandler.$(OBJEXT) \
	qt/BitcoinAir_qt-macnotificationhandler.$(OBJEXT)
#am__objects_9 = $(am__objects_8)
am__objects_10 = qt/res/bitcoin-qt-res.$(OBJEXT)
#am__objects_11 =  \
#	$(am__objects_10)
am__objects_12 = qt/BitcoinAir_qt-qrcodedialog.$(OBJEXT)
am_qt_BitcoinAir_qt_OBJECTS =  \
	qt/BitcoinAir_qt-bitcoin.$(OBJEXT) \
	$(am__objects_9) $(am__objects_11) \
	$(am__objects_12)
qt_BitcoinAir_qt_OBJECTS = $(am_qt_BitcoinAir_qt_OBJECTS)
qt_BitcoinAir_qt_DEPENDENCIES = qt/libBitcoinAirqt.a \
	$(LIBBITCOINAIR_SERVER) $(am__append_23) \
	$(LIBBITCOINAIR_CLI) $(LIBBITCOINAIR_COMMON) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
qt_BitcoinAir_qt_LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(OBJCXXLD) $(AM_OBJCXXFLAGS) \
	$(OBJCXXFLAGS) $(qt_BitcoinAir_qt_LDFLAGS) $(LDFLAGS) -o $@
am__qt_test_test_BitcoinAir_qt_SOURCES_DIST = qt/test/test_main.cpp \
	qt/test/uritests.cpp uritests.h
am_qt_test_test_BitcoinAir_qt_OBJECTS = qt/test/test_BitcoinAir_qt-test_main.$(OBJEXT) \
	qt/test/test_BitcoinAir_qt-uritests.$(OBJEXT) \
	$(am__objects_1)
am__objects_13 = qt/test/test_BitcoinAir_qt-moc_uritests.$(OBJEXT)
nodist_qt_test_test_BitcoinAir_qt_OBJECTS =  \
	$(am__objects_13)
qt_test_test_BitcoinAir_qt_OBJECTS =  \
	$(am_qt_test_test_BitcoinAir_qt_OBJECTS) \
	$(nodist_qt_test_test_BitcoinAir_qt_OBJECTS)
qt_test_test_BitcoinAir_qt_DEPENDENCIES =  \
	$(LIBBITCOINAIRQT) \
	$(LIBBITCOINAIR_SERVER) $(am__append_28) \
	$(LIBBITCOINAIR_CLI) \
	$(LIBBITCOINAIR_COMMON) \
	$(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
qt_test_test_BitcoinAir_qt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) \
	$(qt_test_test_BitcoinAir_qt_LDFLAGS) $(LDFLAGS) -o $@
am__test_test_BitcoinAir_SOURCES_DIST = test/allocator_tests.cpp \
	test/base32_tests.cpp test/base58_tests.cpp \
	test/base64_tests.cpp test/bignum_tests.cpp \
	test/canonical_tests.cpp test/checkblock_tests.cpp \
	test/Checkpoints_tests.cpp test/compress_tests.cpp \
	test/DoS_tests.cpp test/getarg_tests.cpp test/key_tests.cpp \
	test/mruset_tests.cpp test/multisig_tests.cpp \
	test/netbase_tests.cpp test/pmt_tests.cpp test/rpc_tests.cpp \
	test/script_P2SH_tests.cpp test/script_tests.cpp \
	test/serialize_tests.cpp test/sigopcount_tests.cpp \
	test/test_bitcoin.cpp test/transaction_tests.cpp \
	test/uint160_tests.cpp test/uint256_tests.cpp \
	test/util_tests.cpp $(TEST_DATA_DIR)/alertTests \
	$(TEST_DATA_DIR)/base58_encode_decode.json \
	$(TEST_DATA_DIR)/base58_keys_invalid.json \
	$(TEST_DATA_DIR)/base58_keys_valid.json \
	$(TEST_DATA_DIR)/script_invalid.json \
	$(TEST_DATA_DIR)/script_valid.json \
	$(TEST_DATA_DIR)/sig_canonical.json \
	$(TEST_DATA_DIR)/sig_noncanonical.json \
	$(TEST_DATA_DIR)/tx_invalid.json \
	$(TEST_DATA_DIR)/tx_valid.json test/accounting_tests.cpp \
	test/wallet_tests.cpp
am__objects_14 = test/test_BitcoinAir-accounting_tests.$(OBJEXT) \
	test/test_BitcoinAir-wallet_tests.$(OBJEXT)
am_test_test_BitcoinAir_OBJECTS = test/test_BitcoinAir-allocator_tests.$(OBJEXT) \
	test/test_BitcoinAir-base32_tests.$(OBJEXT) \
	test/test_BitcoinAir-base58_tests.$(OBJEXT) \
	test/test_BitcoinAir-base64_tests.$(OBJEXT) \
	test/test_BitcoinAir-bignum_tests.$(OBJEXT) \
	test/test_BitcoinAir-canonical_tests.$(OBJEXT) \
	test/test_BitcoinAir-checkblock_tests.$(OBJEXT) \
	test/test_BitcoinAir-Checkpoints_tests.$(OBJEXT) \
	test/test_BitcoinAir-compress_tests.$(OBJEXT) \
	test/test_BitcoinAir-DoS_tests.$(OBJEXT) \
	test/test_BitcoinAir-getarg_tests.$(OBJEXT) \
	test/test_BitcoinAir-key_tests.$(OBJEXT) \
	test/test_BitcoinAir-mruset_tests.$(OBJEXT) \
	test/test_BitcoinAir-multisig_tests.$(OBJEXT) \
	test/test_BitcoinAir-netbase_tests.$(OBJEXT) \
	test/test_BitcoinAir-pmt_tests.$(OBJEXT) \
	test/test_BitcoinAir-rpc_tests.$(OBJEXT) \
	test/test_BitcoinAir-script_P2SH_tests.$(OBJEXT) \
	test/test_BitcoinAir-script_tests.$(OBJEXT) \
	test/test_BitcoinAir-serialize_tests.$(OBJEXT) \
	test/test_BitcoinAir-sigopcount_tests.$(OBJEXT) \
	test/test_BitcoinAir-test_bitcoin.$(OBJEXT) \
	test/test_BitcoinAir-transaction_tests.$(OBJEXT) \
	test/test_BitcoinAir-uint160_tests.$(OBJEXT) \
	test/test_BitcoinAir-uint256_tests.$(OBJEXT) \
	test/test_BitcoinAir-util_tests.$(OBJEXT) \
	$(am__objects_1) $(am__objects_14)
nodist_test_test_BitcoinAir_OBJECTS =  \
	$(am__objects_1)
test_test_BitcoinAir_OBJECTS = $(am_test_test_BitcoinAir_OBJECTS) \
	$(nodist_test_test_BitcoinAir_OBJECTS)
test_test_BitcoinAir_DEPENDENCIES =  \
	$(LIBBITCOINAIR_SERVER) \
	$(LIBBITCOINAIR_CLI) \
	$(LIBBITCOINAIR_COMMON) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__append_14) $(am__DEPENDENCIES_1)
test_test_BitcoinAir_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(test_test_BitcoinAir_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/addrman.Po ./$(DEPDIR)/alert.Po \
	./$(DEPDIR)/bitcoin-cli.Po ./$(DEPDIR)/bitcoind.Po \
	./$(DEPDIR)/bloom.Po ./$(DEPDIR)/checkpoints.Po \
	./$(DEPDIR)/checkpointsync.Po ./$(DEPDIR)/crypter.Po \
	./$(DEPDIR)/db.Po ./$(DEPDIR)/hash.Po ./$(DEPDIR)/init.Po \
	./$(DEPDIR)/kernel.Po ./$(DEPDIR)/kernelrecord.Po \
	./$(DEPDIR)/key.Po ./$(DEPDIR)/keystore.Po \
	./$(DEPDIR)/leveldbwrapper.Po ./$(DEPDIR)/main.Po \
	./$(DEPDIR)/net.Po ./$(DEPDIR)/netbase.Po ./$(DEPDIR)/noui.Po \
	./$(DEPDIR)/protocol.Po ./$(DEPDIR)/rpcblockchain.Po \
	./$(DEPDIR)/rpcclient.Po ./$(DEPDIR)/rpcdump.Po \
	./$(DEPDIR)/rpcmining.Po ./$(DEPDIR)/rpcminting.Po \
	./$(DEPDIR)/rpcnet.Po ./$(DEPDIR)/rpcprotocol.Po \
	./$(DEPDIR)/rpcrawtransaction.Po ./$(DEPDIR)/rpcserver.Po \
	./$(DEPDIR)/rpcwallet.Po ./$(DEPDIR)/script.Po \
	./$(DEPDIR)/sync.Po ./$(DEPDIR)/txdb.Po ./$(DEPDIR)/util.Po \
	./$(DEPDIR)/version.Po ./$(DEPDIR)/wallet.Po \
	./$(DEPDIR)/walletdb.Po qt/$(DEPDIR)/BitcoinAir_qt-bitcoin.Po \
	qt/$(DEPDIR)/BitcoinAir_qt-macdockiconhandler.Po \
	qt/$(DEPDIR)/BitcoinAir_qt-macnotificationhandler.Po \
	qt/$(DEPDIR)/BitcoinAir_qt-qrcodedialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-aboutdialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-addressbookpage.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-addresstablemodel.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-askpassphrasedialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoin.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinaddressvalidator.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinamountfield.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoingui.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinstrings.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinunits.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-clientmodel.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroldialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroltreewidget.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-csvmodelwriter.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-editaddressdialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-guiutil.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-mintingfilterproxy.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-mintingtablemodel.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-mintingview.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_aboutdialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addressbookpage.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addresstablemodel.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_askpassphrasedialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinamountfield.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoingui.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinunits.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_clientmodel.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroldialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroltreewidget.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_csvmodelwriter.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_editaddressdialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_guiutil.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macdockiconhandler.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macnotificationhandler.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingfilterproxy.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingtablemodel.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingview.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_monitoreddatamapper.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigaddressentry.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigdialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisiginputentry.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_notificator.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsdialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsmodel.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_overviewpage.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_paymentserver.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qrcodedialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvalidatedlineedit.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvaluecombobox.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_rpcconsole.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsdialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsentry.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_signverifymessagedialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_splashscreen.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondesc.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondescdialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionfilterproxy.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiontablemodel.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionview.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletframe.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletmodel.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletstack.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletview.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-monitoreddatamapper.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-multisigaddressentry.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-multisigdialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-multisiginputentry.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-notificator.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-optionsdialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-optionsmodel.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-overviewpage.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-paymentserver.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-qrc_bitcoin.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-qvalidatedlineedit.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-qvaluecombobox.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-rpcconsole.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsdialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsentry.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-signverifymessagedialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-splashscreen.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondesc.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondescdialog.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-transactionfilterproxy.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-transactionrecord.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-transactiontablemodel.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-transactionview.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-walletframe.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-walletmodel.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-walletstack.Po \
	qt/$(DEPDIR)/libBitcoinAirqt_a-walletview.Po \
	qt/test/$(DEPDIR)/test_BitcoinAir_qt-moc_uritests.Po \
	qt/test/$(DEPDIR)/test_BitcoinAir_qt-test_main.Po \
	qt/test/$(DEPDIR)/test_BitcoinAir_qt-uritests.Po \
	test/$(DEPDIR)/test_BitcoinAir-Checkpoints_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-DoS_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-accounting_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-allocator_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-base32_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-base58_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-base64_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-bignum_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-canonical_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-checkblock_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-compress_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-getarg_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-key_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-mruset_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-multisig_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-netbase_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-pmt_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-rpc_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-script_P2SH_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-script_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-serialize_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-sigopcount_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-test_bitcoin.Po \
	test/$(DEPDIR)/test_BitcoinAir-transaction_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-uint160_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-uint256_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-util_tests.Po \
	test/$(DEPDIR)/test_BitcoinAir-wallet_tests.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
OBJCXXCOMPILE = $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
LTOBJCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJCXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
AM_V_OBJCXX = $(am__v_OBJCXX_$(V))
am__v_OBJCXX_ = $(am__v_OBJCXX_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXX_0 = @echo "  OBJCXX  " $@;
am__v_OBJCXX_1 = 
OBJCXXLD = $(OBJCXX)
OBJCXXLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCXXLD = $(am__v_OBJCXXLD_$(V))
am__v_OBJCXXLD_ = $(am__v_OBJCXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXXLD_0 = @echo "  OBJCXXLD" $@;
am__v_OBJCXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libBitcoinAir_cli_a_SOURCES) \
	$(libBitcoinAir_common_a_SOURCES) \
	$(nodist_libBitcoinAir_common_a_SOURCES) \
	$(libBitcoinAir_server_a_SOURCES) \
	$(libBitcoinAir_wallet_a_SOURCES) \
	$(qt_libBitcoinAirqt_a_SOURCES) \
	$(nodist_qt_libBitcoinAirqt_a_SOURCES) \
	$(BitcoinAir_cli_SOURCES) $(BitcoinAird_SOURCES) \
	$(qt_BitcoinAir_qt_SOURCES) \
	$(qt_test_test_BitcoinAir_qt_SOURCES) \
	$(nodist_qt_test_test_BitcoinAir_qt_SOURCES) \
	$(test_test_BitcoinAir_SOURCES) \
	$(nodist_test_test_BitcoinAir_SOURCES)
DIST_SOURCES = $(libBitcoinAir_cli_a_SOURCES) \
	$(libBitcoinAir_common_a_SOURCES) \
	$(libBitcoinAir_server_a_SOURCES) \
	$(libBitcoinAir_wallet_a_SOURCES) \
	$(am__qt_libBitcoinAirqt_a_SOURCES_DIST) \
	$(am__BitcoinAir_cli_SOURCES_DIST) \
	$(am__BitcoinAird_SOURCES_DIST) \
	$(am__qt_BitcoinAir_qt_SOURCES_DIST) \
	$(am__qt_test_test_BitcoinAir_qt_SOURCES_DIST) \
	$(am__test_test_BitcoinAir_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)bitcoin-config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.qt.include \
	$(srcdir)/Makefile.qttest.include \
	$(srcdir)/Makefile.test.include $(srcdir)/bitcoin-config.h.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /media/root/Data1/Projects/qt/bitcoin-air-blockchain-v1.0/build-aux/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /usr/bin/ar
AUTOCONF = ${SHELL} /media/root/Data1/Projects/qt/bitcoin-air-blockchain-v1.0/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /media/root/Data1/Projects/qt/bitcoin-air-blockchain-v1.0/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /media/root/Data1/Projects/qt/bitcoin-air-blockchain-v1.0/build-aux/missing automake-1.16
AWK = gawk
BDB_CPPFLAGS = 
BDB_LIBS = -ldb_cxx-4.8
BOOST_CHRONO_LIB = -lboost_chrono
BOOST_CPPFLAGS = -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BOOST_LIBS = -L/usr/lib/x86_64-linux-gnu -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework
BREW = 
BUILD_QT = qt
BUILD_TEST = test
BUILD_TEST_QT = test
CC = gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLIENT_VERSION_BUILD = 0
CLIENT_VERSION_IS_RELEASE = false
CLIENT_VERSION_MAJOR = 0
CLIENT_VERSION_MINOR = 8
CLIENT_VERSION_REVISION = 6
COPYRIGHT_YEAR = 2018
CPP = gcc -E
CPPFLAGS =  -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO -I/usr/include -DQT_GUI
CRYPTO_CFLAGS = 
CRYPTO_LIBS = -lcrypto
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -ggdb  -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GCOV = /usr/bin/gcov
GENHTML = 
GENISOIMAGE = 
GIT = /usr/bin/git
GREP = /bin/grep
HARDENED_CPPFLAGS =  -D_FORTIFY_SOURCE=2
HARDENED_CXXFLAGS =  -Wstack-protector -fPIE -fno-stack-protector -fstack-protector-all
HARDENED_LDFLAGS =  -pie
HEXDUMP = /usr/bin/hexdump
INCLUDES =  -pthread  
INSTALL = /usr/bin/install -c
INSTALLNAMETOOL = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAVA = /usr/bin/java
JAVA_COMPARISON_TOOL = 
LCOV = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -Wl,-z,now
LEVELDB_CPPFLAGS =  $(am__append_1)
LEVELDB_TARGET_FLAGS = 
LIBLEVELDB =  $(am__append_2)
LIBMEMENV =  $(am__append_3)
LIBOBJS = 
LIBS = -lminiupnpc  -lssl -lcrypto
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LRELEASE = /usr/lib/x86_64-linux-gnu/qt5/bin/lrelease
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LUPDATE = /usr/lib/x86_64-linux-gnu/qt5/bin/lupdate
MAINT = 
MAKEINFO = ${SHELL} /media/root/Data1/Projects/qt/bitcoin-air-blockchain-v1.0/build-aux/missing makeinfo
MAKENSIS = 
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MOC = /usr/lib/x86_64-linux-gnu/qt5/bin/moc
MOC_DEFS = -DHAVE_CONFIG_H -I$(srcdir)
NM = /usr/bin/nm -B
NMEDIT = 
OBJC = gcc
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = 
OBJCXX = g++
OBJCXXDEPMODE = depmode=gcc3
OBJCXXFLAGS = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = bitcoinair
PACKAGE_BUGREPORT = info@bitcoinair.net
PACKAGE_NAME = BitcoinAir
PACKAGE_STRING = BitcoinAir 0.8.6
PACKAGE_TARNAME = bitcoinair
PACKAGE_URL = 
PACKAGE_VERSION = 0.8.6
PATH_SEPARATOR = :
PIC_FLAGS = -fPIC
PIE_FLAGS = 
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PORT = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
QR_CFLAGS = 
QR_LIBS = -lqrencode
QTPLATFORM_CFLAGS = 
QTPLATFORM_LIBS = 
QTPRINT_CFLAGS = 
QTPRINT_LIBS = 
QT_CFLAGS = -DQT_NETWORK_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_CORE_LIB -I/usr/include/x86_64-linux-gnu/qt5/QtNetwork -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_DBUS_CFLAGS = -DQT_DBUS_LIB -DQT_CORE_LIB -I/usr/include/x86_64-linux-gnu/qt5/QtDBus -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_DBUS_INCLUDES = -DQT_DBUS_LIB -DQT_CORE_LIB -I/usr/include/x86_64-linux-gnu/qt5/QtDBus -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_DBUS_LIBS = -lQt5DBus -lQt5Core
QT_INCLUDES = -DQT_NETWORK_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_CORE_LIB -I/usr/include/x86_64-linux-gnu/qt5/QtNetwork -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_LDFLAGS = 
QT_LIBS = -lQt5Network -lQt5Widgets -lQt5Gui -lQt5Core
QT_PIE_FLAGS = -fPIC
QT_SELECT = qt5
QT_TEST_CFLAGS = -DQT_TESTLIB_LIB -DQT_CORE_LIB -I/usr/include/x86_64-linux-gnu/qt5/QtTest -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_TEST_INCLUDES = -DQT_TESTLIB_LIB -DQT_CORE_LIB -I/usr/include/x86_64-linux-gnu/qt5/QtTest -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5
QT_TEST_LIBS = -lQt5Test -lQt5Core
QT_TRANSLATION_DIR = 
RANLIB = /usr/bin/ranlib
RCC = /usr/lib/x86_64-linux-gnu/qt5/bin/rcc
RELDFLAGS = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SSL_CFLAGS = 
SSL_LIBS = -lssl
STRIP = /usr/bin/strip
TESTDEFS = -DBOOST_TEST_DYN_LINK
UIC = /usr/lib/x86_64-linux-gnu/qt5/bin/uic
USE_IPV6 = 
USE_QRCODE = 
USE_UPNP = 
VERSION = 0.8.6
WINDRES = 
X11XCB_CFLAGS = 
X11XCB_LIBS = 
XGETTEXT = /usr/bin/xgettext
abs_builddir = /media/root/Data1/Projects/qt/bitcoin-air-blockchain-v1.0/src
abs_srcdir = /media/root/Data1/Projects/qt/bitcoin-air-blockchain-v1.0/src
abs_top_builddir = /media/root/Data1/Projects/qt/bitcoin-air-blockchain-v1.0
abs_top_srcdir = /media/root/Data1/Projects/qt/bitcoin-air-blockchain-v1.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJC = gcc
ac_ct_OBJCXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /media/root/Data1/Projects/qt/bitcoin-air-blockchain-v1.0/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = $(INCLUDES) -I$(top_builddir)/src/obj $(BDB_CPPFLAGS) \
	$(BOOST_CPPFLAGS) $(BOOST_INCLUDES) $(LEVELDB_CPPFLAGS) \
	-I$(top_srcdir)/src/leveldb/helpers/memenv -I$(builddir) \
	-I$(builddir) $(BDB_CPPFLAGS) $(am__append_10) \
	$(am__append_16) $(am__append_25)
AM_LDFLAGS = $(PTHREAD_CFLAGS)
noinst_LIBRARIES = libBitcoinAir_server.a libBitcoinAir_common.a \
	libBitcoinAir_cli.a $(am__append_4) $(am__append_18)
# bitcoin core #
BITCOIN_CORE_H = \
  addrman.h \
  alert.h \
  allocators.h \
  base58.h \
  bignum.h \
  rpcclient.h \
  rpcprotocol.h \
  rpcserver.h \
  bloom.h \
  checkpoints.h \
  checkpointsync.h \
  checkqueue.h \
  clientversion.h \
  compat.h \
  crypter.h \
  db.h \
  hash.h \
  init.h \
  key.h \
  kernel.h \
  keystore.h \
  leveldbwrapper.h \
  limitedmap.h \
  main.h \
  mruset.h \
  netbase.h \
  net.h \
  protocol.h \
  script.h \
  serialize.h \
  sync.h \
  threadsafety.h \
  txdb.h \
  ui_interface.h \
  uint256.h \
  util.h \
  version.h \
  walletdb.h \
  wallet.h

JSON_H = \
  json/json_spirit.h \
  json/json_spirit_error_position.h \
  json/json_spirit_reader.h \
  json/json_spirit_reader_template.h \
  json/json_spirit_stream_reader.h \
  json/json_spirit_utils.h \
  json/json_spirit_value.h \
  json/json_spirit_writer.h \
  json/json_spirit_writer_template.h 

libBitcoinAir_server_a_SOURCES = \
  addrman.cpp \
  alert.cpp \
  rpcserver.cpp \
  bloom.cpp \
  checkpoints.cpp \
  checkpointsync.cpp \
  crypter.cpp \
  init.cpp \
  kernel.cpp \
  keystore.cpp \
  leveldbwrapper.cpp \
  main.cpp \
  net.cpp \
  noui.cpp \
  rpcblockchain.cpp \
  rpcnet.cpp \
  rpcrawtransaction.cpp \
  rpcserver.cpp \
  txdb.cpp \
  $(JSON_H) \
  $(BITCOIN_CORE_H)

libBitcoinAir_wallet_a_SOURCES = \
  db.cpp \
  rpcdump.cpp \
  rpcmining.cpp \
  rpcminting.cpp \
  script.cpp \
  kernelrecord.cpp \
  wallet.cpp \
  walletdb.cpp \
  rpcwallet.cpp \
  $(BITCOIN_CORE_H)

libBitcoinAir_common_a_SOURCES = \
  hash.cpp \
  key.cpp \
  netbase.cpp \
  protocol.cpp \
  rpcprotocol.cpp \
  sync.cpp \
  util.cpp \
  version.cpp \
  $(BITCOIN_CORE_H)

libBitcoinAir_cli_a_SOURCES = \
  rpcclient.cpp \
  $(BITCOIN_CORE_H)

nodist_libBitcoinAir_common_a_SOURCES = $(top_srcdir)/src/obj/build.h
#

# BitcoinAird binary #
BitcoinAird_LDADD = libBitcoinAir_server.a libBitcoinAir_cli.a \
	libBitcoinAir_common.a $(LIBLEVELDB) $(LIBMEMENV) \
	$(BOOST_LIBS) $(am__append_7) $(BDB_LIBS)
BitcoinAird_SOURCES = bitcoind.cpp $(am__append_8)
BitcoinAird_LDFLAGS = $(AM_LDFLAGS)

# bitcoin-cli binary #
BitcoinAir_cli_LDADD = libBitcoinAir_cli.a libBitcoinAir_common.a $(BOOST_LIBS)
BitcoinAir_cli_SOURCES = bitcoin-cli.cpp $(am__append_9)
BitcoinAir_cli_LDFLAGS = $(AM_LDFLAGS)
CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno \
	$(am__append_15) $(am__append_24) $(am__append_29)
DISTCLEANFILES = obj/build.h
EXTRA_DIST = leveldb
LIBBITCOINAIR_SERVER = libBitcoinAir_server.a
LIBBITCOINAIR_WALLET = libBitcoinAir_wallet.a
LIBBITCOINAIR_COMMON = libBitcoinAir_common.a
LIBBITCOINAIR_CLI = libBitcoinAir_cli.a
LIBBITCOINAIRQT = qt/libBitcoinAirqt.a
TEST_SRCDIR = test
TEST_BINARY = test/test_BitcoinAir$(EXEEXT)
TEST_DATA_DIR = $(top_srcdir)/src/test/data
TEST_DATA_FILES = \
  $(TEST_DATA_DIR)/alertTests \
  $(TEST_DATA_DIR)/base58_encode_decode.json \
  $(TEST_DATA_DIR)/base58_keys_invalid.json \
  $(TEST_DATA_DIR)/base58_keys_valid.json \
  $(TEST_DATA_DIR)/script_invalid.json \
  $(TEST_DATA_DIR)/script_valid.json \
  $(TEST_DATA_DIR)/sig_canonical.json \
  $(TEST_DATA_DIR)/sig_noncanonical.json \
  $(TEST_DATA_DIR)/tx_invalid.json \
  $(TEST_DATA_DIR)/tx_valid.json

test_test_BitcoinAir_SOURCES =  \
	test/allocator_tests.cpp \
	test/base32_tests.cpp test/base58_tests.cpp \
	test/base64_tests.cpp test/bignum_tests.cpp \
	test/canonical_tests.cpp \
	test/checkblock_tests.cpp \
	test/Checkpoints_tests.cpp \
	test/compress_tests.cpp test/DoS_tests.cpp \
	test/getarg_tests.cpp test/key_tests.cpp \
	test/mruset_tests.cpp \
	test/multisig_tests.cpp \
	test/netbase_tests.cpp test/pmt_tests.cpp \
	test/rpc_tests.cpp \
	test/script_P2SH_tests.cpp \
	test/script_tests.cpp \
	test/serialize_tests.cpp \
	test/sigopcount_tests.cpp \
	test/test_bitcoin.cpp \
	test/transaction_tests.cpp \
	test/uint160_tests.cpp \
	test/uint256_tests.cpp test/util_tests.cpp \
	$(TEST_DATA_FILES) $(am__append_13)

# test_BitcoinAir binary #
test_test_BitcoinAir_CPPFLAGS = $(AM_CPPFLAGS) $(TESTDEFS) \
  -DTEST_DATA_DIR=$(TEST_DATA_DIR)

test_test_BitcoinAir_LDADD =  \
	$(LIBBITCOINAIR_SERVER) \
	$(LIBBITCOINAIR_CLI) \
	$(LIBBITCOINAIR_COMMON) $(LIBLEVELDB) \
	$(LIBMEMENV) $(BOOST_LIBS) \
	$(BOOST_UNIT_TEST_FRAMEWORK_LIB) \
	$(am__append_14) $(BDB_LIBS)
test_test_BitcoinAir_LDFLAGS = $(AM_LDFLAGS)
nodist_test_test_BitcoinAir_SOURCES = $(TEST_DATA_FILES)

# BitcoinAir qt core #
QT_TS = \
  qt/locale/bitcoin_af_ZA.ts \
  qt/locale/bitcoin_ar.ts \
  qt/locale/bitcoin_bg.ts \
  qt/locale/bitcoin_bs.ts \
  qt/locale/bitcoin_ca.ts \
  qt/locale/bitcoin_ca_ES.ts \
  qt/locale/bitcoin_cs.ts \
  qt/locale/bitcoin_cy.ts \
  qt/locale/bitcoin_da.ts \
  qt/locale/bitcoin_de.ts \
  qt/locale/bitcoin_el_GR.ts \
  qt/locale/bitcoin_en.ts \
  qt/locale/bitcoin_eo.ts \
  qt/locale/bitcoin_es.ts \
  qt/locale/bitcoin_es_CL.ts \
  qt/locale/bitcoin_et.ts \
  qt/locale/bitcoin_eu_ES.ts \
  qt/locale/bitcoin_fa.ts \
  qt/locale/bitcoin_fa_IR.ts \
  qt/locale/bitcoin_fi.ts \
  qt/locale/bitcoin_fr.ts \
  qt/locale/bitcoin_fr_CA.ts \
  qt/locale/bitcoin_gu_IN.ts \
  qt/locale/bitcoin_he.ts \
  qt/locale/bitcoin_hi_IN.ts \
  qt/locale/bitcoin_hr.ts \
  qt/locale/bitcoin_hu.ts \
  qt/locale/bitcoin_it.ts \
  qt/locale/bitcoin_ja.ts \
  qt/locale/bitcoin_la.ts \
  qt/locale/bitcoin_lt.ts \
  qt/locale/bitcoin_lv_LV.ts \
  qt/locale/bitcoin_nb.ts \
  qt/locale/bitcoin_nl.ts \
  qt/locale/bitcoin_pl.ts \
  qt/locale/bitcoin_pt_BR.ts \
  qt/locale/bitcoin_pt_PT.ts \
  qt/locale/bitcoin_ro_RO.ts \
  qt/locale/bitcoin_ru.ts \
  qt/locale/bitcoin_sk.ts \
  qt/locale/bitcoin_sr.ts \
  qt/locale/bitcoin_sv.ts \
  qt/locale/bitcoin_th_TH.ts \
  qt/locale/bitcoin_tr.ts \
  qt/locale/bitcoin_uk.ts \
  qt/locale/bitcoin_zh_CN.ts \
  qt/locale/bitcoin_zh_TW.ts

QT_FORMS_UI = \
  qt/forms/aboutdialog.ui \
  qt/forms/addressbookpage.ui \
  qt/forms/askpassphrasedialog.ui \
  qt/forms/editaddressdialog.ui \
  qt/forms/coincontroldialog.ui \
  qt/forms/multisigaddressentry.ui \
  qt/forms/multisigdialog.ui \
  qt/forms/multisiginputentry.ui \
  qt/forms/optionsdialog.ui \
  qt/forms/overviewpage.ui \
  qt/forms/qrcodedialog.ui \
  qt/forms/rpcconsole.ui \
  qt/forms/sendcoinsdialog.ui \
  qt/forms/sendcoinsentry.ui \
  qt/forms/signverifymessagedialog.ui \
  qt/forms/transactiondescdialog.ui

QT_MOC_CPP = \
  qt/moc_macdockiconhandler.cpp \
  qt/moc_macnotificationhandler.cpp \
  qt/moc_aboutdialog.cpp \
  qt/moc_addressbookpage.cpp \
  qt/moc_addresstablemodel.cpp \
  qt/moc_askpassphrasedialog.cpp \
  qt/moc_bitcoinaddressvalidator.cpp \
  qt/moc_bitcoinamountfield.cpp \
  qt/moc_bitcoingui.cpp \
  qt/moc_bitcoinunits.cpp \
  qt/moc_clientmodel.cpp \
  qt/moc_coincontroldialog.cpp \
  qt/moc_coincontroltreewidget.cpp \
  qt/moc_csvmodelwriter.cpp \
  qt/moc_editaddressdialog.cpp \
  qt/moc_guiutil.cpp \
  qt/moc_multisigaddressentry.cpp \
  qt/moc_multisiginputentry.cpp \
  qt/moc_multisigdialog.cpp \
  qt/moc_mintingview.cpp \
  qt/moc_mintingtablemodel.cpp \
  qt/moc_mintingfilterproxy.cpp \
  qt/moc_monitoreddatamapper.cpp \
  qt/moc_notificator.cpp \
  qt/moc_optionsdialog.cpp \
  qt/moc_optionsmodel.cpp \
  qt/moc_overviewpage.cpp \
  qt/moc_paymentserver.cpp \
  qt/moc_qrcodedialog.cpp \
  qt/moc_qvalidatedlineedit.cpp \
  qt/moc_qvaluecombobox.cpp \
  qt/moc_rpcconsole.cpp \
  qt/moc_sendcoinsdialog.cpp \
  qt/moc_sendcoinsentry.cpp \
  qt/moc_signverifymessagedialog.cpp \
  qt/moc_splashscreen.cpp \
  qt/moc_transactiondesc.cpp \
  qt/moc_transactiondescdialog.cpp \
  qt/moc_transactionfilterproxy.cpp \
  qt/moc_transactiontablemodel.cpp \
  qt/moc_transactionview.cpp \
  qt/moc_walletframe.cpp \
  qt/moc_walletmodel.cpp \
  qt/moc_walletview.cpp \
  qt/moc_walletstack.cpp \
  qt/moc_rpcconsole.cpp \
  qt/moc_overviewpage.cpp

BITCOINAIR_MM = \
  qt/macdockiconhandler.mm \
  qt/macnotificationhandler.mm

QT_MOC = qt/bitcoin.moc \
  qt/overviewpage.moc \
  qt/rpcconsole.moc

QT_QRC_CPP = qt/qrc_bitcoin.cpp
QT_QRC = qt/bitcoin.qrc
BITCOINAIR_QT_H = \
  qt/aboutdialog.h \
  qt/addressbookpage.h \
  qt/addresstablemodel.h \
  qt/askpassphrasedialog.h \
  qt/bitcoinaddressvalidator.h \
  qt/bitcoinamountfield.h \
  qt/bitcoingui.h \
  qt/bitcoinunits.h \
  qt/clientmodel.h \
  qt/coincontroldialog.h \
  qt/coincontroltreewidget.h \
  qt/csvmodelwriter.h \
  qt/editaddressdialog.h \
  qt/guiconstants.h \
  qt/guiutil.h \
  qt/macdockiconhandler.h \
  qt/macnotificationhandler.h \
  qt/mintingview.h \
  qt/mintingtablemodel.h \
  qt/mintingfilterproxy.h \
  qt/multisigaddressentry.h \
  qt/multisiginputentry.h \
  qt/multisigdialog.h \
  qt/monitoreddatamapper.h \
  qt/notificator.h \
  qt/optionsdialog.h \
  qt/optionsmodel.h \
  qt/overviewpage.h \
  qt/paymentserver.h \
  qt/qrcodedialog.h \
  qt/qvalidatedlineedit.h \
  qt/qvaluecombobox.h \
  qt/rpcconsole.h \
  qt/sendcoinsdialog.h \
  qt/sendcoinsentry.h \
  qt/signverifymessagedialog.h \
  qt/splashscreen.h \
  qt/transactiondescdialog.h \
  qt/transactiondesc.h \
  qt/transactionfilterproxy.h \
  qt/transactionrecord.h \
  qt/transactiontablemodel.h \
  qt/transactionview.h \
  qt/walletframe.h \
  qt/walletmodel.h \
  qt/walletstack.h \
  qt/walletview.h

RES_ICONS = \
  qt/res/icons/BitcoinAir.png \
  qt/res/icons/address-book.png \
  qt/res/icons/quit.png \
  qt/res/icons/send.png \
  qt/res/icons/toolbar.png \
  qt/res/icons/connect0_16.png \
  qt/res/icons/connect1_16.png \
  qt/res/icons/connect2_16.png \
  qt/res/icons/connect3_16.png \
  qt/res/icons/connect4_16.png \
  qt/res/icons/transaction0.png \
  qt/res/icons/transaction2.png \
  qt/res/icons/clock1.png \
  qt/res/icons/clock2.png \
  qt/res/icons/clock3.png \
  qt/res/icons/clock4.png \
  qt/res/icons/clock5.png \
  qt/res/icons/configure.png \
  qt/res/icons/receive.png \
  qt/res/icons/editpaste.png \
  qt/res/icons/editcopy.png \
  qt/res/icons/add.png \
  qt/res/icons/bitcoin_testnet.png \
  qt/res/icons/toolbar_testnet.png \
  qt/res/icons/edit.png \
  qt/res/icons/history.png \
  qt/res/icons/overview.png \
  qt/res/icons/export.png \
  qt/res/icons/synced.png \
  qt/res/icons/remove.png \
  qt/res/icons/tx_mined.png \
  qt/res/icons/tx_input.png \
  qt/res/icons/tx_output.png \
  qt/res/icons/tx_inout.png \
  qt/res/icons/lock_closed.png \
  qt/res/icons/lock_open.png \
  qt/res/icons/key.png \
  qt/res/icons/filesave.png \
  qt/res/icons/qrcode.png \
  qt/res/icons/debugwindow.png \
  qt/res/icons/BitcoinAir.ico \
  qt/res/icons/bitcoin_testnet.ico

BITCOINAIR_QT_CPP = qt/bitcoin.cpp \
	qt/bitcoinaddressvalidator.cpp \
	qt/bitcoinamountfield.cpp qt/bitcoingui.cpp \
	qt/bitcoinstrings.cpp qt/bitcoinunits.cpp \
	qt/clientmodel.cpp qt/csvmodelwriter.cpp \
	qt/guiutil.cpp qt/monitoreddatamapper.cpp \
	qt/notificator.cpp qt/optionsdialog.cpp \
	qt/optionsmodel.cpp qt/qvalidatedlineedit.cpp \
	qt/qvaluecombobox.cpp qt/rpcconsole.cpp \
	qt/splashscreen.cpp $(am__append_19)
RES_IMAGES = \
  qt/res/images/about.png \
  qt/res/images/splash.png \
  qt/res/images/splash_testnet.png

RES_MOVIES = qt/res/movies/update_spinner.mng
BITCOINAIR_RC = qt/res/bitcoin-qt-res.rc
qt_libBitcoinAirqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \
  -I$(top_srcdir)/src/qt/forms $(QT_DBUS_INCLUDES)

qt_libBitcoinAirqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
qt_libBitcoinAirqt_a_SOURCES = $(BITCOINAIR_QT_CPP) $(BITCOINAIR_QT_H) $(QT_FORMS_UI) \
  $(QT_QRC) $(QT_TS) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)

nodist_qt_libBitcoinAirqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) \
  $(QT_QRC_CPP)


# forms/foo.h -> forms/ui_foo.h
QT_FORMS_H = $(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

# BitcoinAir-qt binary #
qt_BitcoinAir_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \
  -I$(top_srcdir)/src/qt/forms

qt_BitcoinAir_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
qt_BitcoinAir_qt_SOURCES = qt/bitcoin.cpp \
	$(am__append_20) $(am__append_21) \
	$(am__append_22)
qt_BitcoinAir_qt_LDADD = qt/libBitcoinAirqt.a \
	$(LIBBITCOINAIR_SERVER) $(am__append_23) \
	$(LIBBITCOINAIR_CLI) $(LIBBITCOINAIR_COMMON) \
	$(LIBLEVELDB) $(LIBMEMENV) $(BOOST_LIBS) \
	$(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) \
	$(BDB_LIBS)
qt_BitcoinAir_qt_LDFLAGS = $(AM_LDFLAGS) $(QT_LDFLAGS)

#locale/foo.ts -> locale/foo.qm
QT_QM = $(QT_TS:.ts=.qm)
CLEAN_QT = $(nodist_qt_libBitcoinAirqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno
TEST_QT_MOC_CPP = qt/test/moc_uritests.cpp
TEST_QT_H = uritests.h
qt_test_test_BitcoinAir_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)
qt_test_test_BitcoinAir_qt_SOURCES = \
  qt/test/test_main.cpp \
  qt/test/uritests.cpp \
  $(TEST_QT_H)

nodist_qt_test_test_BitcoinAir_qt_SOURCES = $(TEST_QT_MOC_CPP)
qt_test_test_BitcoinAir_qt_LDADD =  \
	$(LIBBITCOINAIRQT) \
	$(LIBBITCOINAIR_SERVER) $(am__append_28) \
	$(LIBBITCOINAIR_CLI) \
	$(LIBBITCOINAIR_COMMON) $(LIBLEVELDB) \
	$(LIBMEMENV) $(BOOST_LIBS) $(QT_LIBS) \
	$(QT_DBUS_LIBS) $(QT_TEST_LIBS) \
	$(QR_LIBS) $(BDB_LIBS)
qt_test_test_BitcoinAir_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
qt_test_test_BitcoinAir_qt_LDFLAGS = $(AM_LDFLAGS)
CLEAN_BITCOINAIR_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno
all: bitcoin-config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .log .mm .o .obj .rc .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.test.include $(srcdir)/Makefile.qt.include $(srcdir)/Makefile.qttest.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(srcdir)/Makefile.test.include $(srcdir)/Makefile.qt.include $(srcdir)/Makefile.qttest.include $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

bitcoin-config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/bitcoin-config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/bitcoin-config.h
$(srcdir)/bitcoin-config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f bitcoin-config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libBitcoinAir_cli.a: $(libBitcoinAir_cli_a_OBJECTS) $(libBitcoinAir_cli_a_DEPENDENCIES) $(EXTRA_libBitcoinAir_cli_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libBitcoinAir_cli.a
	$(AM_V_AR)$(libBitcoinAir_cli_a_AR) libBitcoinAir_cli.a $(libBitcoinAir_cli_a_OBJECTS) $(libBitcoinAir_cli_a_LIBADD)
	$(AM_V_at)$(RANLIB) libBitcoinAir_cli.a

libBitcoinAir_common.a: $(libBitcoinAir_common_a_OBJECTS) $(libBitcoinAir_common_a_DEPENDENCIES) $(EXTRA_libBitcoinAir_common_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libBitcoinAir_common.a
	$(AM_V_AR)$(libBitcoinAir_common_a_AR) libBitcoinAir_common.a $(libBitcoinAir_common_a_OBJECTS) $(libBitcoinAir_common_a_LIBADD)
	$(AM_V_at)$(RANLIB) libBitcoinAir_common.a

libBitcoinAir_server.a: $(libBitcoinAir_server_a_OBJECTS) $(libBitcoinAir_server_a_DEPENDENCIES) $(EXTRA_libBitcoinAir_server_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libBitcoinAir_server.a
	$(AM_V_AR)$(libBitcoinAir_server_a_AR) libBitcoinAir_server.a $(libBitcoinAir_server_a_OBJECTS) $(libBitcoinAir_server_a_LIBADD)
	$(AM_V_at)$(RANLIB) libBitcoinAir_server.a

libBitcoinAir_wallet.a: $(libBitcoinAir_wallet_a_OBJECTS) $(libBitcoinAir_wallet_a_DEPENDENCIES) $(EXTRA_libBitcoinAir_wallet_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libBitcoinAir_wallet.a
	$(AM_V_AR)$(libBitcoinAir_wallet_a_AR) libBitcoinAir_wallet.a $(libBitcoinAir_wallet_a_OBJECTS) $(libBitcoinAir_wallet_a_LIBADD)
	$(AM_V_at)$(RANLIB) libBitcoinAir_wallet.a
qt/$(am__dirstamp):
	@$(MKDIR_P) qt
	@: > qt/$(am__dirstamp)
qt/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/$(DEPDIR)
	@: > qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-bitcoin.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-bitcoinaddressvalidator.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-bitcoinamountfield.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-bitcoingui.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-bitcoinstrings.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-bitcoinunits.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-clientmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-csvmodelwriter.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-guiutil.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-monitoreddatamapper.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-notificator.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-optionsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-optionsmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-qvalidatedlineedit.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-qvaluecombobox.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-rpcconsole.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-splashscreen.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-aboutdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-addressbookpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-addresstablemodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-askpassphrasedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-coincontroldialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-coincontroltreewidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-editaddressdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-overviewpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-paymentserver.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-mintingview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-mintingtablemodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-mintingfilterproxy.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-multisigaddressentry.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-multisiginputentry.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-multisigdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-sendcoinsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-sendcoinsentry.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-signverifymessagedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-transactiondesc.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-transactiondescdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-transactionfilterproxy.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-transactionrecord.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-transactiontablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-transactionview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-walletframe.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-walletmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-walletstack.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-walletview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_macdockiconhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_macnotificationhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_aboutdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_addressbookpage.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_addresstablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_askpassphrasedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_bitcoinamountfield.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_bitcoingui.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_bitcoinunits.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_clientmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_coincontroldialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_coincontroltreewidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_csvmodelwriter.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_editaddressdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_guiutil.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_multisigaddressentry.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_multisiginputentry.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_multisigdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_mintingview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_mintingtablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_mintingfilterproxy.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_monitoreddatamapper.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_notificator.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_optionsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_optionsmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_overviewpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_paymentserver.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_qrcodedialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_qvalidatedlineedit.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_qvaluecombobox.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_rpcconsole.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_sendcoinsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_sendcoinsentry.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_signverifymessagedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_splashscreen.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_transactiondesc.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_transactiondescdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_transactionfilterproxy.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_transactiontablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_transactionview.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_walletframe.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_walletmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_walletview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-moc_walletstack.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/libBitcoinAirqt_a-qrc_bitcoin.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)

qt/libBitcoinAirqt.a: $(qt_libBitcoinAirqt_a_OBJECTS) $(qt_libBitcoinAirqt_a_DEPENDENCIES) $(EXTRA_qt_libBitcoinAirqt_a_DEPENDENCIES) qt/$(am__dirstamp)
	$(AM_V_at)-rm -f qt/libBitcoinAirqt.a
	$(AM_V_AR)$(qt_libBitcoinAirqt_a_AR) qt/libBitcoinAirqt.a $(qt_libBitcoinAirqt_a_OBJECTS) $(qt_libBitcoinAirqt_a_LIBADD)
	$(AM_V_at)$(RANLIB) qt/libBitcoinAirqt.a

BitcoinAir-cli$(EXEEXT): $(BitcoinAir_cli_OBJECTS) $(BitcoinAir_cli_DEPENDENCIES) $(EXTRA_BitcoinAir_cli_DEPENDENCIES) 
	@rm -f BitcoinAir-cli$(EXEEXT)
	$(AM_V_CXXLD)$(BitcoinAir_cli_LINK) $(BitcoinAir_cli_OBJECTS) $(BitcoinAir_cli_LDADD) $(LIBS)

BitcoinAird$(EXEEXT): $(BitcoinAird_OBJECTS) $(BitcoinAird_DEPENDENCIES) $(EXTRA_BitcoinAird_DEPENDENCIES) 
	@rm -f BitcoinAird$(EXEEXT)
	$(AM_V_CXXLD)$(BitcoinAird_LINK) $(BitcoinAird_OBJECTS) $(BitcoinAird_LDADD) $(LIBS)
qt/BitcoinAir_qt-bitcoin.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/BitcoinAir_qt-macdockiconhandler.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/BitcoinAir_qt-macnotificationhandler.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/res/$(am__dirstamp):
	@$(MKDIR_P) qt/res
	@: > qt/res/$(am__dirstamp)
qt/res/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/res/$(DEPDIR)
	@: > qt/res/$(DEPDIR)/$(am__dirstamp)
qt/res/bitcoin-qt-res.$(OBJEXT): qt/res/$(am__dirstamp) \
	qt/res/$(DEPDIR)/$(am__dirstamp)
qt/BitcoinAir_qt-qrcodedialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)

qt/BitcoinAir-qt$(EXEEXT): $(qt_BitcoinAir_qt_OBJECTS) $(qt_BitcoinAir_qt_DEPENDENCIES) $(EXTRA_qt_BitcoinAir_qt_DEPENDENCIES) qt/$(am__dirstamp)
	@rm -f qt/BitcoinAir-qt$(EXEEXT)
	$(AM_V_OBJCXXLD)$(qt_BitcoinAir_qt_LINK) $(qt_BitcoinAir_qt_OBJECTS) $(qt_BitcoinAir_qt_LDADD) $(LIBS)
qt/test/$(am__dirstamp):
	@$(MKDIR_P) qt/test
	@: > qt/test/$(am__dirstamp)
qt/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/test/$(DEPDIR)
	@: > qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/test_BitcoinAir_qt-test_main.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/test_BitcoinAir_qt-uritests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/test_BitcoinAir_qt-moc_uritests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)

qt/test/test_BitcoinAir-qt$(EXEEXT): $(qt_test_test_BitcoinAir_qt_OBJECTS) $(qt_test_test_BitcoinAir_qt_DEPENDENCIES) $(EXTRA_qt_test_test_BitcoinAir_qt_DEPENDENCIES) qt/test/$(am__dirstamp)
	@rm -f qt/test/test_BitcoinAir-qt$(EXEEXT)
	$(AM_V_CXXLD)$(qt_test_test_BitcoinAir_qt_LINK) $(qt_test_test_BitcoinAir_qt_OBJECTS) $(qt_test_test_BitcoinAir_qt_LDADD) $(LIBS)
test/$(am__dirstamp):
	@$(MKDIR_P) test
	@: > test/$(am__dirstamp)
test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/$(DEPDIR)
	@: > test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-allocator_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-base32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-base58_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-base64_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-bignum_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-canonical_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-checkblock_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-Checkpoints_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-compress_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-DoS_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-getarg_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-key_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-mruset_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-multisig_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-netbase_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-pmt_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-rpc_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-script_P2SH_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-script_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-serialize_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-sigopcount_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-test_bitcoin.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-transaction_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-uint160_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-uint256_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-util_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-accounting_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_BitcoinAir-wallet_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)

test/test_BitcoinAir$(EXEEXT): $(test_test_BitcoinAir_OBJECTS) $(test_test_BitcoinAir_DEPENDENCIES) $(EXTRA_test_test_BitcoinAir_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/test_BitcoinAir$(EXEEXT)
	$(AM_V_CXXLD)$(test_test_BitcoinAir_LINK) $(test_test_BitcoinAir_OBJECTS) $(test_test_BitcoinAir_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f qt/*.$(OBJEXT)
	-rm -f qt/res/*.$(OBJEXT)
	-rm -f qt/test/*.$(OBJEXT)
	-rm -f test/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/addrman.Po # am--include-marker
include ./$(DEPDIR)/alert.Po # am--include-marker
include ./$(DEPDIR)/bitcoin-cli.Po # am--include-marker
include ./$(DEPDIR)/bitcoind.Po # am--include-marker
include ./$(DEPDIR)/bloom.Po # am--include-marker
include ./$(DEPDIR)/checkpoints.Po # am--include-marker
include ./$(DEPDIR)/checkpointsync.Po # am--include-marker
include ./$(DEPDIR)/crypter.Po # am--include-marker
include ./$(DEPDIR)/db.Po # am--include-marker
include ./$(DEPDIR)/hash.Po # am--include-marker
include ./$(DEPDIR)/init.Po # am--include-marker
include ./$(DEPDIR)/kernel.Po # am--include-marker
include ./$(DEPDIR)/kernelrecord.Po # am--include-marker
include ./$(DEPDIR)/key.Po # am--include-marker
include ./$(DEPDIR)/keystore.Po # am--include-marker
include ./$(DEPDIR)/leveldbwrapper.Po # am--include-marker
include ./$(DEPDIR)/main.Po # am--include-marker
include ./$(DEPDIR)/net.Po # am--include-marker
include ./$(DEPDIR)/netbase.Po # am--include-marker
include ./$(DEPDIR)/noui.Po # am--include-marker
include ./$(DEPDIR)/protocol.Po # am--include-marker
include ./$(DEPDIR)/rpcblockchain.Po # am--include-marker
include ./$(DEPDIR)/rpcclient.Po # am--include-marker
include ./$(DEPDIR)/rpcdump.Po # am--include-marker
include ./$(DEPDIR)/rpcmining.Po # am--include-marker
include ./$(DEPDIR)/rpcminting.Po # am--include-marker
include ./$(DEPDIR)/rpcnet.Po # am--include-marker
include ./$(DEPDIR)/rpcprotocol.Po # am--include-marker
include ./$(DEPDIR)/rpcrawtransaction.Po # am--include-marker
include ./$(DEPDIR)/rpcserver.Po # am--include-marker
include ./$(DEPDIR)/rpcwallet.Po # am--include-marker
include ./$(DEPDIR)/script.Po # am--include-marker
include ./$(DEPDIR)/sync.Po # am--include-marker
include ./$(DEPDIR)/txdb.Po # am--include-marker
include ./$(DEPDIR)/util.Po # am--include-marker
include ./$(DEPDIR)/version.Po # am--include-marker
include ./$(DEPDIR)/wallet.Po # am--include-marker
include ./$(DEPDIR)/walletdb.Po # am--include-marker
include qt/$(DEPDIR)/BitcoinAir_qt-bitcoin.Po # am--include-marker
include qt/$(DEPDIR)/BitcoinAir_qt-macdockiconhandler.Po # am--include-marker
include qt/$(DEPDIR)/BitcoinAir_qt-macnotificationhandler.Po # am--include-marker
include qt/$(DEPDIR)/BitcoinAir_qt-qrcodedialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-aboutdialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-addressbookpage.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-addresstablemodel.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-askpassphrasedialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoin.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinaddressvalidator.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinamountfield.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoingui.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinstrings.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinunits.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-clientmodel.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroldialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroltreewidget.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-csvmodelwriter.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-editaddressdialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-guiutil.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-mintingfilterproxy.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-mintingtablemodel.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-mintingview.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_aboutdialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addressbookpage.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addresstablemodel.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_askpassphrasedialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinamountfield.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoingui.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinunits.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_clientmodel.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroldialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroltreewidget.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_csvmodelwriter.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_editaddressdialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_guiutil.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macdockiconhandler.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macnotificationhandler.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingfilterproxy.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingtablemodel.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingview.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_monitoreddatamapper.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigaddressentry.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigdialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisiginputentry.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_notificator.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsdialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsmodel.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_overviewpage.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_paymentserver.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qrcodedialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvalidatedlineedit.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvaluecombobox.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_rpcconsole.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsdialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsentry.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_signverifymessagedialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_splashscreen.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondesc.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondescdialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionfilterproxy.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiontablemodel.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionview.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletframe.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletmodel.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletstack.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletview.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-monitoreddatamapper.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-multisigaddressentry.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-multisigdialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-multisiginputentry.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-notificator.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-optionsdialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-optionsmodel.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-overviewpage.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-paymentserver.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-qrc_bitcoin.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-qvalidatedlineedit.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-qvaluecombobox.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-rpcconsole.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsdialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsentry.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-signverifymessagedialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-splashscreen.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondesc.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondescdialog.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-transactionfilterproxy.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-transactionrecord.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-transactiontablemodel.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-transactionview.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-walletframe.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-walletmodel.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-walletstack.Po # am--include-marker
include qt/$(DEPDIR)/libBitcoinAirqt_a-walletview.Po # am--include-marker
include qt/test/$(DEPDIR)/test_BitcoinAir_qt-moc_uritests.Po # am--include-marker
include qt/test/$(DEPDIR)/test_BitcoinAir_qt-test_main.Po # am--include-marker
include qt/test/$(DEPDIR)/test_BitcoinAir_qt-uritests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-Checkpoints_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-DoS_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-accounting_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-allocator_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-base32_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-base58_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-base64_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-bignum_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-canonical_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-checkblock_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-compress_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-getarg_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-key_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-mruset_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-multisig_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-netbase_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-pmt_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-rpc_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-script_P2SH_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-script_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-serialize_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-sigopcount_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-test_bitcoin.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-transaction_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-uint160_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-uint256_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-util_tests.Po # am--include-marker
include test/$(DEPDIR)/test_BitcoinAir-wallet_tests.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

qt/libBitcoinAirqt_a-bitcoin.o: qt/bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-bitcoin.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoin.Tpo -c -o qt/libBitcoinAirqt_a-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoin.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoin.Po
#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/libBitcoinAirqt_a-bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp

qt/libBitcoinAirqt_a-bitcoin.obj: qt/bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoin.Tpo -c -o qt/libBitcoinAirqt_a-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoin.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoin.Po
#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/libBitcoinAirqt_a-bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`

qt/libBitcoinAirqt_a-bitcoinaddressvalidator.o: qt/bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-bitcoinaddressvalidator.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinaddressvalidator.Tpo -c -o qt/libBitcoinAirqt_a-bitcoinaddressvalidator.o `test -f 'qt/bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/bitcoinaddressvalidator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='qt/bitcoinaddressvalidator.cpp' object='qt/libBitcoinAirqt_a-bitcoinaddressvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-bitcoinaddressvalidator.o `test -f 'qt/bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/bitcoinaddressvalidator.cpp

qt/libBitcoinAirqt_a-bitcoinaddressvalidator.obj: qt/bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-bitcoinaddressvalidator.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinaddressvalidator.Tpo -c -o qt/libBitcoinAirqt_a-bitcoinaddressvalidator.obj `if test -f 'qt/bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinaddressvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='qt/bitcoinaddressvalidator.cpp' object='qt/libBitcoinAirqt_a-bitcoinaddressvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-bitcoinaddressvalidator.obj `if test -f 'qt/bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinaddressvalidator.cpp'; fi`

qt/libBitcoinAirqt_a-bitcoinamountfield.o: qt/bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-bitcoinamountfield.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinamountfield.Tpo -c -o qt/libBitcoinAirqt_a-bitcoinamountfield.o `test -f 'qt/bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/bitcoinamountfield.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinamountfield.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinamountfield.Po
#	$(AM_V_CXX)source='qt/bitcoinamountfield.cpp' object='qt/libBitcoinAirqt_a-bitcoinamountfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-bitcoinamountfield.o `test -f 'qt/bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/bitcoinamountfield.cpp

qt/libBitcoinAirqt_a-bitcoinamountfield.obj: qt/bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-bitcoinamountfield.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinamountfield.Tpo -c -o qt/libBitcoinAirqt_a-bitcoinamountfield.obj `if test -f 'qt/bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinamountfield.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinamountfield.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinamountfield.Po
#	$(AM_V_CXX)source='qt/bitcoinamountfield.cpp' object='qt/libBitcoinAirqt_a-bitcoinamountfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-bitcoinamountfield.obj `if test -f 'qt/bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinamountfield.cpp'; fi`

qt/libBitcoinAirqt_a-bitcoingui.o: qt/bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-bitcoingui.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoingui.Tpo -c -o qt/libBitcoinAirqt_a-bitcoingui.o `test -f 'qt/bitcoingui.cpp' || echo '$(srcdir)/'`qt/bitcoingui.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoingui.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoingui.Po
#	$(AM_V_CXX)source='qt/bitcoingui.cpp' object='qt/libBitcoinAirqt_a-bitcoingui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-bitcoingui.o `test -f 'qt/bitcoingui.cpp' || echo '$(srcdir)/'`qt/bitcoingui.cpp

qt/libBitcoinAirqt_a-bitcoingui.obj: qt/bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-bitcoingui.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoingui.Tpo -c -o qt/libBitcoinAirqt_a-bitcoingui.obj `if test -f 'qt/bitcoingui.cpp'; then $(CYGPATH_W) 'qt/bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoingui.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoingui.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoingui.Po
#	$(AM_V_CXX)source='qt/bitcoingui.cpp' object='qt/libBitcoinAirqt_a-bitcoingui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-bitcoingui.obj `if test -f 'qt/bitcoingui.cpp'; then $(CYGPATH_W) 'qt/bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoingui.cpp'; fi`

qt/libBitcoinAirqt_a-bitcoinstrings.o: qt/bitcoinstrings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-bitcoinstrings.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinstrings.Tpo -c -o qt/libBitcoinAirqt_a-bitcoinstrings.o `test -f 'qt/bitcoinstrings.cpp' || echo '$(srcdir)/'`qt/bitcoinstrings.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinstrings.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinstrings.Po
#	$(AM_V_CXX)source='qt/bitcoinstrings.cpp' object='qt/libBitcoinAirqt_a-bitcoinstrings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-bitcoinstrings.o `test -f 'qt/bitcoinstrings.cpp' || echo '$(srcdir)/'`qt/bitcoinstrings.cpp

qt/libBitcoinAirqt_a-bitcoinstrings.obj: qt/bitcoinstrings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-bitcoinstrings.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinstrings.Tpo -c -o qt/libBitcoinAirqt_a-bitcoinstrings.obj `if test -f 'qt/bitcoinstrings.cpp'; then $(CYGPATH_W) 'qt/bitcoinstrings.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinstrings.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinstrings.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinstrings.Po
#	$(AM_V_CXX)source='qt/bitcoinstrings.cpp' object='qt/libBitcoinAirqt_a-bitcoinstrings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-bitcoinstrings.obj `if test -f 'qt/bitcoinstrings.cpp'; then $(CYGPATH_W) 'qt/bitcoinstrings.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinstrings.cpp'; fi`

qt/libBitcoinAirqt_a-bitcoinunits.o: qt/bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-bitcoinunits.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinunits.Tpo -c -o qt/libBitcoinAirqt_a-bitcoinunits.o `test -f 'qt/bitcoinunits.cpp' || echo '$(srcdir)/'`qt/bitcoinunits.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinunits.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinunits.Po
#	$(AM_V_CXX)source='qt/bitcoinunits.cpp' object='qt/libBitcoinAirqt_a-bitcoinunits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-bitcoinunits.o `test -f 'qt/bitcoinunits.cpp' || echo '$(srcdir)/'`qt/bitcoinunits.cpp

qt/libBitcoinAirqt_a-bitcoinunits.obj: qt/bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-bitcoinunits.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinunits.Tpo -c -o qt/libBitcoinAirqt_a-bitcoinunits.obj `if test -f 'qt/bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinunits.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinunits.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinunits.Po
#	$(AM_V_CXX)source='qt/bitcoinunits.cpp' object='qt/libBitcoinAirqt_a-bitcoinunits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-bitcoinunits.obj `if test -f 'qt/bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinunits.cpp'; fi`

qt/libBitcoinAirqt_a-clientmodel.o: qt/clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-clientmodel.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-clientmodel.Tpo -c -o qt/libBitcoinAirqt_a-clientmodel.o `test -f 'qt/clientmodel.cpp' || echo '$(srcdir)/'`qt/clientmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-clientmodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-clientmodel.Po
#	$(AM_V_CXX)source='qt/clientmodel.cpp' object='qt/libBitcoinAirqt_a-clientmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-clientmodel.o `test -f 'qt/clientmodel.cpp' || echo '$(srcdir)/'`qt/clientmodel.cpp

qt/libBitcoinAirqt_a-clientmodel.obj: qt/clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-clientmodel.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-clientmodel.Tpo -c -o qt/libBitcoinAirqt_a-clientmodel.obj `if test -f 'qt/clientmodel.cpp'; then $(CYGPATH_W) 'qt/clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/clientmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-clientmodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-clientmodel.Po
#	$(AM_V_CXX)source='qt/clientmodel.cpp' object='qt/libBitcoinAirqt_a-clientmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-clientmodel.obj `if test -f 'qt/clientmodel.cpp'; then $(CYGPATH_W) 'qt/clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/clientmodel.cpp'; fi`

qt/libBitcoinAirqt_a-csvmodelwriter.o: qt/csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-csvmodelwriter.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-csvmodelwriter.Tpo -c -o qt/libBitcoinAirqt_a-csvmodelwriter.o `test -f 'qt/csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/csvmodelwriter.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-csvmodelwriter.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/csvmodelwriter.cpp' object='qt/libBitcoinAirqt_a-csvmodelwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-csvmodelwriter.o `test -f 'qt/csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/csvmodelwriter.cpp

qt/libBitcoinAirqt_a-csvmodelwriter.obj: qt/csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-csvmodelwriter.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-csvmodelwriter.Tpo -c -o qt/libBitcoinAirqt_a-csvmodelwriter.obj `if test -f 'qt/csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/csvmodelwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-csvmodelwriter.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/csvmodelwriter.cpp' object='qt/libBitcoinAirqt_a-csvmodelwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-csvmodelwriter.obj `if test -f 'qt/csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/csvmodelwriter.cpp'; fi`

qt/libBitcoinAirqt_a-guiutil.o: qt/guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-guiutil.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-guiutil.Tpo -c -o qt/libBitcoinAirqt_a-guiutil.o `test -f 'qt/guiutil.cpp' || echo '$(srcdir)/'`qt/guiutil.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-guiutil.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-guiutil.Po
#	$(AM_V_CXX)source='qt/guiutil.cpp' object='qt/libBitcoinAirqt_a-guiutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-guiutil.o `test -f 'qt/guiutil.cpp' || echo '$(srcdir)/'`qt/guiutil.cpp

qt/libBitcoinAirqt_a-guiutil.obj: qt/guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-guiutil.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-guiutil.Tpo -c -o qt/libBitcoinAirqt_a-guiutil.obj `if test -f 'qt/guiutil.cpp'; then $(CYGPATH_W) 'qt/guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/guiutil.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-guiutil.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-guiutil.Po
#	$(AM_V_CXX)source='qt/guiutil.cpp' object='qt/libBitcoinAirqt_a-guiutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-guiutil.obj `if test -f 'qt/guiutil.cpp'; then $(CYGPATH_W) 'qt/guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/guiutil.cpp'; fi`

qt/libBitcoinAirqt_a-monitoreddatamapper.o: qt/monitoreddatamapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-monitoreddatamapper.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-monitoreddatamapper.Tpo -c -o qt/libBitcoinAirqt_a-monitoreddatamapper.o `test -f 'qt/monitoreddatamapper.cpp' || echo '$(srcdir)/'`qt/monitoreddatamapper.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-monitoreddatamapper.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-monitoreddatamapper.Po
#	$(AM_V_CXX)source='qt/monitoreddatamapper.cpp' object='qt/libBitcoinAirqt_a-monitoreddatamapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-monitoreddatamapper.o `test -f 'qt/monitoreddatamapper.cpp' || echo '$(srcdir)/'`qt/monitoreddatamapper.cpp

qt/libBitcoinAirqt_a-monitoreddatamapper.obj: qt/monitoreddatamapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-monitoreddatamapper.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-monitoreddatamapper.Tpo -c -o qt/libBitcoinAirqt_a-monitoreddatamapper.obj `if test -f 'qt/monitoreddatamapper.cpp'; then $(CYGPATH_W) 'qt/monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/monitoreddatamapper.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-monitoreddatamapper.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-monitoreddatamapper.Po
#	$(AM_V_CXX)source='qt/monitoreddatamapper.cpp' object='qt/libBitcoinAirqt_a-monitoreddatamapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-monitoreddatamapper.obj `if test -f 'qt/monitoreddatamapper.cpp'; then $(CYGPATH_W) 'qt/monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/monitoreddatamapper.cpp'; fi`

qt/libBitcoinAirqt_a-notificator.o: qt/notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-notificator.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-notificator.Tpo -c -o qt/libBitcoinAirqt_a-notificator.o `test -f 'qt/notificator.cpp' || echo '$(srcdir)/'`qt/notificator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-notificator.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-notificator.Po
#	$(AM_V_CXX)source='qt/notificator.cpp' object='qt/libBitcoinAirqt_a-notificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-notificator.o `test -f 'qt/notificator.cpp' || echo '$(srcdir)/'`qt/notificator.cpp

qt/libBitcoinAirqt_a-notificator.obj: qt/notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-notificator.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-notificator.Tpo -c -o qt/libBitcoinAirqt_a-notificator.obj `if test -f 'qt/notificator.cpp'; then $(CYGPATH_W) 'qt/notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/notificator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-notificator.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-notificator.Po
#	$(AM_V_CXX)source='qt/notificator.cpp' object='qt/libBitcoinAirqt_a-notificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-notificator.obj `if test -f 'qt/notificator.cpp'; then $(CYGPATH_W) 'qt/notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/notificator.cpp'; fi`

qt/libBitcoinAirqt_a-optionsdialog.o: qt/optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-optionsdialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-optionsdialog.Tpo -c -o qt/libBitcoinAirqt_a-optionsdialog.o `test -f 'qt/optionsdialog.cpp' || echo '$(srcdir)/'`qt/optionsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-optionsdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-optionsdialog.Po
#	$(AM_V_CXX)source='qt/optionsdialog.cpp' object='qt/libBitcoinAirqt_a-optionsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-optionsdialog.o `test -f 'qt/optionsdialog.cpp' || echo '$(srcdir)/'`qt/optionsdialog.cpp

qt/libBitcoinAirqt_a-optionsdialog.obj: qt/optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-optionsdialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-optionsdialog.Tpo -c -o qt/libBitcoinAirqt_a-optionsdialog.obj `if test -f 'qt/optionsdialog.cpp'; then $(CYGPATH_W) 'qt/optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-optionsdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-optionsdialog.Po
#	$(AM_V_CXX)source='qt/optionsdialog.cpp' object='qt/libBitcoinAirqt_a-optionsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-optionsdialog.obj `if test -f 'qt/optionsdialog.cpp'; then $(CYGPATH_W) 'qt/optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsdialog.cpp'; fi`

qt/libBitcoinAirqt_a-optionsmodel.o: qt/optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-optionsmodel.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-optionsmodel.Tpo -c -o qt/libBitcoinAirqt_a-optionsmodel.o `test -f 'qt/optionsmodel.cpp' || echo '$(srcdir)/'`qt/optionsmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-optionsmodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-optionsmodel.Po
#	$(AM_V_CXX)source='qt/optionsmodel.cpp' object='qt/libBitcoinAirqt_a-optionsmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-optionsmodel.o `test -f 'qt/optionsmodel.cpp' || echo '$(srcdir)/'`qt/optionsmodel.cpp

qt/libBitcoinAirqt_a-optionsmodel.obj: qt/optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-optionsmodel.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-optionsmodel.Tpo -c -o qt/libBitcoinAirqt_a-optionsmodel.obj `if test -f 'qt/optionsmodel.cpp'; then $(CYGPATH_W) 'qt/optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-optionsmodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-optionsmodel.Po
#	$(AM_V_CXX)source='qt/optionsmodel.cpp' object='qt/libBitcoinAirqt_a-optionsmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-optionsmodel.obj `if test -f 'qt/optionsmodel.cpp'; then $(CYGPATH_W) 'qt/optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsmodel.cpp'; fi`

qt/libBitcoinAirqt_a-qvalidatedlineedit.o: qt/qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-qvalidatedlineedit.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-qvalidatedlineedit.Tpo -c -o qt/libBitcoinAirqt_a-qvalidatedlineedit.o `test -f 'qt/qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedlineedit.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-qvalidatedlineedit.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/qvalidatedlineedit.cpp' object='qt/libBitcoinAirqt_a-qvalidatedlineedit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-qvalidatedlineedit.o `test -f 'qt/qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedlineedit.cpp

qt/libBitcoinAirqt_a-qvalidatedlineedit.obj: qt/qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-qvalidatedlineedit.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-qvalidatedlineedit.Tpo -c -o qt/libBitcoinAirqt_a-qvalidatedlineedit.obj `if test -f 'qt/qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedlineedit.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-qvalidatedlineedit.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/qvalidatedlineedit.cpp' object='qt/libBitcoinAirqt_a-qvalidatedlineedit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-qvalidatedlineedit.obj `if test -f 'qt/qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedlineedit.cpp'; fi`

qt/libBitcoinAirqt_a-qvaluecombobox.o: qt/qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-qvaluecombobox.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-qvaluecombobox.Tpo -c -o qt/libBitcoinAirqt_a-qvaluecombobox.o `test -f 'qt/qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/qvaluecombobox.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-qvaluecombobox.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/qvaluecombobox.cpp' object='qt/libBitcoinAirqt_a-qvaluecombobox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-qvaluecombobox.o `test -f 'qt/qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/qvaluecombobox.cpp

qt/libBitcoinAirqt_a-qvaluecombobox.obj: qt/qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-qvaluecombobox.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-qvaluecombobox.Tpo -c -o qt/libBitcoinAirqt_a-qvaluecombobox.obj `if test -f 'qt/qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvaluecombobox.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-qvaluecombobox.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/qvaluecombobox.cpp' object='qt/libBitcoinAirqt_a-qvaluecombobox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-qvaluecombobox.obj `if test -f 'qt/qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvaluecombobox.cpp'; fi`

qt/libBitcoinAirqt_a-rpcconsole.o: qt/rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-rpcconsole.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-rpcconsole.Tpo -c -o qt/libBitcoinAirqt_a-rpcconsole.o `test -f 'qt/rpcconsole.cpp' || echo '$(srcdir)/'`qt/rpcconsole.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-rpcconsole.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-rpcconsole.Po
#	$(AM_V_CXX)source='qt/rpcconsole.cpp' object='qt/libBitcoinAirqt_a-rpcconsole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-rpcconsole.o `test -f 'qt/rpcconsole.cpp' || echo '$(srcdir)/'`qt/rpcconsole.cpp

qt/libBitcoinAirqt_a-rpcconsole.obj: qt/rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-rpcconsole.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-rpcconsole.Tpo -c -o qt/libBitcoinAirqt_a-rpcconsole.obj `if test -f 'qt/rpcconsole.cpp'; then $(CYGPATH_W) 'qt/rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/rpcconsole.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-rpcconsole.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-rpcconsole.Po
#	$(AM_V_CXX)source='qt/rpcconsole.cpp' object='qt/libBitcoinAirqt_a-rpcconsole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-rpcconsole.obj `if test -f 'qt/rpcconsole.cpp'; then $(CYGPATH_W) 'qt/rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/rpcconsole.cpp'; fi`

qt/libBitcoinAirqt_a-splashscreen.o: qt/splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-splashscreen.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-splashscreen.Tpo -c -o qt/libBitcoinAirqt_a-splashscreen.o `test -f 'qt/splashscreen.cpp' || echo '$(srcdir)/'`qt/splashscreen.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-splashscreen.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-splashscreen.Po
#	$(AM_V_CXX)source='qt/splashscreen.cpp' object='qt/libBitcoinAirqt_a-splashscreen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-splashscreen.o `test -f 'qt/splashscreen.cpp' || echo '$(srcdir)/'`qt/splashscreen.cpp

qt/libBitcoinAirqt_a-splashscreen.obj: qt/splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-splashscreen.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-splashscreen.Tpo -c -o qt/libBitcoinAirqt_a-splashscreen.obj `if test -f 'qt/splashscreen.cpp'; then $(CYGPATH_W) 'qt/splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/splashscreen.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-splashscreen.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-splashscreen.Po
#	$(AM_V_CXX)source='qt/splashscreen.cpp' object='qt/libBitcoinAirqt_a-splashscreen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-splashscreen.obj `if test -f 'qt/splashscreen.cpp'; then $(CYGPATH_W) 'qt/splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/splashscreen.cpp'; fi`

qt/libBitcoinAirqt_a-aboutdialog.o: qt/aboutdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-aboutdialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-aboutdialog.Tpo -c -o qt/libBitcoinAirqt_a-aboutdialog.o `test -f 'qt/aboutdialog.cpp' || echo '$(srcdir)/'`qt/aboutdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-aboutdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-aboutdialog.Po
#	$(AM_V_CXX)source='qt/aboutdialog.cpp' object='qt/libBitcoinAirqt_a-aboutdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-aboutdialog.o `test -f 'qt/aboutdialog.cpp' || echo '$(srcdir)/'`qt/aboutdialog.cpp

qt/libBitcoinAirqt_a-aboutdialog.obj: qt/aboutdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-aboutdialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-aboutdialog.Tpo -c -o qt/libBitcoinAirqt_a-aboutdialog.obj `if test -f 'qt/aboutdialog.cpp'; then $(CYGPATH_W) 'qt/aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/aboutdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-aboutdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-aboutdialog.Po
#	$(AM_V_CXX)source='qt/aboutdialog.cpp' object='qt/libBitcoinAirqt_a-aboutdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-aboutdialog.obj `if test -f 'qt/aboutdialog.cpp'; then $(CYGPATH_W) 'qt/aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/aboutdialog.cpp'; fi`

qt/libBitcoinAirqt_a-addressbookpage.o: qt/addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-addressbookpage.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-addressbookpage.Tpo -c -o qt/libBitcoinAirqt_a-addressbookpage.o `test -f 'qt/addressbookpage.cpp' || echo '$(srcdir)/'`qt/addressbookpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-addressbookpage.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-addressbookpage.Po
#	$(AM_V_CXX)source='qt/addressbookpage.cpp' object='qt/libBitcoinAirqt_a-addressbookpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-addressbookpage.o `test -f 'qt/addressbookpage.cpp' || echo '$(srcdir)/'`qt/addressbookpage.cpp

qt/libBitcoinAirqt_a-addressbookpage.obj: qt/addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-addressbookpage.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-addressbookpage.Tpo -c -o qt/libBitcoinAirqt_a-addressbookpage.obj `if test -f 'qt/addressbookpage.cpp'; then $(CYGPATH_W) 'qt/addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addressbookpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-addressbookpage.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-addressbookpage.Po
#	$(AM_V_CXX)source='qt/addressbookpage.cpp' object='qt/libBitcoinAirqt_a-addressbookpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-addressbookpage.obj `if test -f 'qt/addressbookpage.cpp'; then $(CYGPATH_W) 'qt/addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addressbookpage.cpp'; fi`

qt/libBitcoinAirqt_a-addresstablemodel.o: qt/addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-addresstablemodel.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-addresstablemodel.Tpo -c -o qt/libBitcoinAirqt_a-addresstablemodel.o `test -f 'qt/addresstablemodel.cpp' || echo '$(srcdir)/'`qt/addresstablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-addresstablemodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-addresstablemodel.Po
#	$(AM_V_CXX)source='qt/addresstablemodel.cpp' object='qt/libBitcoinAirqt_a-addresstablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-addresstablemodel.o `test -f 'qt/addresstablemodel.cpp' || echo '$(srcdir)/'`qt/addresstablemodel.cpp

qt/libBitcoinAirqt_a-addresstablemodel.obj: qt/addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-addresstablemodel.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-addresstablemodel.Tpo -c -o qt/libBitcoinAirqt_a-addresstablemodel.obj `if test -f 'qt/addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addresstablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-addresstablemodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-addresstablemodel.Po
#	$(AM_V_CXX)source='qt/addresstablemodel.cpp' object='qt/libBitcoinAirqt_a-addresstablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-addresstablemodel.obj `if test -f 'qt/addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addresstablemodel.cpp'; fi`

qt/libBitcoinAirqt_a-askpassphrasedialog.o: qt/askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-askpassphrasedialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-askpassphrasedialog.Tpo -c -o qt/libBitcoinAirqt_a-askpassphrasedialog.o `test -f 'qt/askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/askpassphrasedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-askpassphrasedialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/askpassphrasedialog.cpp' object='qt/libBitcoinAirqt_a-askpassphrasedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-askpassphrasedialog.o `test -f 'qt/askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/askpassphrasedialog.cpp

qt/libBitcoinAirqt_a-askpassphrasedialog.obj: qt/askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-askpassphrasedialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-askpassphrasedialog.Tpo -c -o qt/libBitcoinAirqt_a-askpassphrasedialog.obj `if test -f 'qt/askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/askpassphrasedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-askpassphrasedialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/askpassphrasedialog.cpp' object='qt/libBitcoinAirqt_a-askpassphrasedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-askpassphrasedialog.obj `if test -f 'qt/askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/askpassphrasedialog.cpp'; fi`

qt/libBitcoinAirqt_a-coincontroldialog.o: qt/coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-coincontroldialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroldialog.Tpo -c -o qt/libBitcoinAirqt_a-coincontroldialog.o `test -f 'qt/coincontroldialog.cpp' || echo '$(srcdir)/'`qt/coincontroldialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroldialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroldialog.Po
#	$(AM_V_CXX)source='qt/coincontroldialog.cpp' object='qt/libBitcoinAirqt_a-coincontroldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-coincontroldialog.o `test -f 'qt/coincontroldialog.cpp' || echo '$(srcdir)/'`qt/coincontroldialog.cpp

qt/libBitcoinAirqt_a-coincontroldialog.obj: qt/coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-coincontroldialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroldialog.Tpo -c -o qt/libBitcoinAirqt_a-coincontroldialog.obj `if test -f 'qt/coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroldialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroldialog.Po
#	$(AM_V_CXX)source='qt/coincontroldialog.cpp' object='qt/libBitcoinAirqt_a-coincontroldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-coincontroldialog.obj `if test -f 'qt/coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroldialog.cpp'; fi`

qt/libBitcoinAirqt_a-coincontroltreewidget.o: qt/coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-coincontroltreewidget.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroltreewidget.Tpo -c -o qt/libBitcoinAirqt_a-coincontroltreewidget.o `test -f 'qt/coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/coincontroltreewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroltreewidget.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/coincontroltreewidget.cpp' object='qt/libBitcoinAirqt_a-coincontroltreewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-coincontroltreewidget.o `test -f 'qt/coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/coincontroltreewidget.cpp

qt/libBitcoinAirqt_a-coincontroltreewidget.obj: qt/coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-coincontroltreewidget.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroltreewidget.Tpo -c -o qt/libBitcoinAirqt_a-coincontroltreewidget.obj `if test -f 'qt/coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroltreewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroltreewidget.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/coincontroltreewidget.cpp' object='qt/libBitcoinAirqt_a-coincontroltreewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-coincontroltreewidget.obj `if test -f 'qt/coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroltreewidget.cpp'; fi`

qt/libBitcoinAirqt_a-editaddressdialog.o: qt/editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-editaddressdialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-editaddressdialog.Tpo -c -o qt/libBitcoinAirqt_a-editaddressdialog.o `test -f 'qt/editaddressdialog.cpp' || echo '$(srcdir)/'`qt/editaddressdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-editaddressdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-editaddressdialog.Po
#	$(AM_V_CXX)source='qt/editaddressdialog.cpp' object='qt/libBitcoinAirqt_a-editaddressdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-editaddressdialog.o `test -f 'qt/editaddressdialog.cpp' || echo '$(srcdir)/'`qt/editaddressdialog.cpp

qt/libBitcoinAirqt_a-editaddressdialog.obj: qt/editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-editaddressdialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-editaddressdialog.Tpo -c -o qt/libBitcoinAirqt_a-editaddressdialog.obj `if test -f 'qt/editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/editaddressdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-editaddressdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-editaddressdialog.Po
#	$(AM_V_CXX)source='qt/editaddressdialog.cpp' object='qt/libBitcoinAirqt_a-editaddressdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-editaddressdialog.obj `if test -f 'qt/editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/editaddressdialog.cpp'; fi`

qt/libBitcoinAirqt_a-overviewpage.o: qt/overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-overviewpage.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-overviewpage.Tpo -c -o qt/libBitcoinAirqt_a-overviewpage.o `test -f 'qt/overviewpage.cpp' || echo '$(srcdir)/'`qt/overviewpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-overviewpage.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-overviewpage.Po
#	$(AM_V_CXX)source='qt/overviewpage.cpp' object='qt/libBitcoinAirqt_a-overviewpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-overviewpage.o `test -f 'qt/overviewpage.cpp' || echo '$(srcdir)/'`qt/overviewpage.cpp

qt/libBitcoinAirqt_a-overviewpage.obj: qt/overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-overviewpage.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-overviewpage.Tpo -c -o qt/libBitcoinAirqt_a-overviewpage.obj `if test -f 'qt/overviewpage.cpp'; then $(CYGPATH_W) 'qt/overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/overviewpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-overviewpage.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-overviewpage.Po
#	$(AM_V_CXX)source='qt/overviewpage.cpp' object='qt/libBitcoinAirqt_a-overviewpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-overviewpage.obj `if test -f 'qt/overviewpage.cpp'; then $(CYGPATH_W) 'qt/overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/overviewpage.cpp'; fi`

qt/libBitcoinAirqt_a-paymentserver.o: qt/paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-paymentserver.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-paymentserver.Tpo -c -o qt/libBitcoinAirqt_a-paymentserver.o `test -f 'qt/paymentserver.cpp' || echo '$(srcdir)/'`qt/paymentserver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-paymentserver.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-paymentserver.Po
#	$(AM_V_CXX)source='qt/paymentserver.cpp' object='qt/libBitcoinAirqt_a-paymentserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-paymentserver.o `test -f 'qt/paymentserver.cpp' || echo '$(srcdir)/'`qt/paymentserver.cpp

qt/libBitcoinAirqt_a-paymentserver.obj: qt/paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-paymentserver.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-paymentserver.Tpo -c -o qt/libBitcoinAirqt_a-paymentserver.obj `if test -f 'qt/paymentserver.cpp'; then $(CYGPATH_W) 'qt/paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/paymentserver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-paymentserver.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-paymentserver.Po
#	$(AM_V_CXX)source='qt/paymentserver.cpp' object='qt/libBitcoinAirqt_a-paymentserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-paymentserver.obj `if test -f 'qt/paymentserver.cpp'; then $(CYGPATH_W) 'qt/paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/paymentserver.cpp'; fi`

qt/libBitcoinAirqt_a-mintingview.o: qt/mintingview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-mintingview.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-mintingview.Tpo -c -o qt/libBitcoinAirqt_a-mintingview.o `test -f 'qt/mintingview.cpp' || echo '$(srcdir)/'`qt/mintingview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-mintingview.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-mintingview.Po
#	$(AM_V_CXX)source='qt/mintingview.cpp' object='qt/libBitcoinAirqt_a-mintingview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-mintingview.o `test -f 'qt/mintingview.cpp' || echo '$(srcdir)/'`qt/mintingview.cpp

qt/libBitcoinAirqt_a-mintingview.obj: qt/mintingview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-mintingview.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-mintingview.Tpo -c -o qt/libBitcoinAirqt_a-mintingview.obj `if test -f 'qt/mintingview.cpp'; then $(CYGPATH_W) 'qt/mintingview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/mintingview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-mintingview.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-mintingview.Po
#	$(AM_V_CXX)source='qt/mintingview.cpp' object='qt/libBitcoinAirqt_a-mintingview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-mintingview.obj `if test -f 'qt/mintingview.cpp'; then $(CYGPATH_W) 'qt/mintingview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/mintingview.cpp'; fi`

qt/libBitcoinAirqt_a-mintingtablemodel.o: qt/mintingtablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-mintingtablemodel.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-mintingtablemodel.Tpo -c -o qt/libBitcoinAirqt_a-mintingtablemodel.o `test -f 'qt/mintingtablemodel.cpp' || echo '$(srcdir)/'`qt/mintingtablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-mintingtablemodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-mintingtablemodel.Po
#	$(AM_V_CXX)source='qt/mintingtablemodel.cpp' object='qt/libBitcoinAirqt_a-mintingtablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-mintingtablemodel.o `test -f 'qt/mintingtablemodel.cpp' || echo '$(srcdir)/'`qt/mintingtablemodel.cpp

qt/libBitcoinAirqt_a-mintingtablemodel.obj: qt/mintingtablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-mintingtablemodel.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-mintingtablemodel.Tpo -c -o qt/libBitcoinAirqt_a-mintingtablemodel.obj `if test -f 'qt/mintingtablemodel.cpp'; then $(CYGPATH_W) 'qt/mintingtablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/mintingtablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-mintingtablemodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-mintingtablemodel.Po
#	$(AM_V_CXX)source='qt/mintingtablemodel.cpp' object='qt/libBitcoinAirqt_a-mintingtablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-mintingtablemodel.obj `if test -f 'qt/mintingtablemodel.cpp'; then $(CYGPATH_W) 'qt/mintingtablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/mintingtablemodel.cpp'; fi`

qt/libBitcoinAirqt_a-mintingfilterproxy.o: qt/mintingfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-mintingfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-mintingfilterproxy.Tpo -c -o qt/libBitcoinAirqt_a-mintingfilterproxy.o `test -f 'qt/mintingfilterproxy.cpp' || echo '$(srcdir)/'`qt/mintingfilterproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-mintingfilterproxy.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-mintingfilterproxy.Po
#	$(AM_V_CXX)source='qt/mintingfilterproxy.cpp' object='qt/libBitcoinAirqt_a-mintingfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-mintingfilterproxy.o `test -f 'qt/mintingfilterproxy.cpp' || echo '$(srcdir)/'`qt/mintingfilterproxy.cpp

qt/libBitcoinAirqt_a-mintingfilterproxy.obj: qt/mintingfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-mintingfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-mintingfilterproxy.Tpo -c -o qt/libBitcoinAirqt_a-mintingfilterproxy.obj `if test -f 'qt/mintingfilterproxy.cpp'; then $(CYGPATH_W) 'qt/mintingfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/mintingfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-mintingfilterproxy.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-mintingfilterproxy.Po
#	$(AM_V_CXX)source='qt/mintingfilterproxy.cpp' object='qt/libBitcoinAirqt_a-mintingfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-mintingfilterproxy.obj `if test -f 'qt/mintingfilterproxy.cpp'; then $(CYGPATH_W) 'qt/mintingfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/mintingfilterproxy.cpp'; fi`

qt/libBitcoinAirqt_a-multisigaddressentry.o: qt/multisigaddressentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-multisigaddressentry.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-multisigaddressentry.Tpo -c -o qt/libBitcoinAirqt_a-multisigaddressentry.o `test -f 'qt/multisigaddressentry.cpp' || echo '$(srcdir)/'`qt/multisigaddressentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-multisigaddressentry.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-multisigaddressentry.Po
#	$(AM_V_CXX)source='qt/multisigaddressentry.cpp' object='qt/libBitcoinAirqt_a-multisigaddressentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-multisigaddressentry.o `test -f 'qt/multisigaddressentry.cpp' || echo '$(srcdir)/'`qt/multisigaddressentry.cpp

qt/libBitcoinAirqt_a-multisigaddressentry.obj: qt/multisigaddressentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-multisigaddressentry.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-multisigaddressentry.Tpo -c -o qt/libBitcoinAirqt_a-multisigaddressentry.obj `if test -f 'qt/multisigaddressentry.cpp'; then $(CYGPATH_W) 'qt/multisigaddressentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/multisigaddressentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-multisigaddressentry.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-multisigaddressentry.Po
#	$(AM_V_CXX)source='qt/multisigaddressentry.cpp' object='qt/libBitcoinAirqt_a-multisigaddressentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-multisigaddressentry.obj `if test -f 'qt/multisigaddressentry.cpp'; then $(CYGPATH_W) 'qt/multisigaddressentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/multisigaddressentry.cpp'; fi`

qt/libBitcoinAirqt_a-multisiginputentry.o: qt/multisiginputentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-multisiginputentry.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-multisiginputentry.Tpo -c -o qt/libBitcoinAirqt_a-multisiginputentry.o `test -f 'qt/multisiginputentry.cpp' || echo '$(srcdir)/'`qt/multisiginputentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-multisiginputentry.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-multisiginputentry.Po
#	$(AM_V_CXX)source='qt/multisiginputentry.cpp' object='qt/libBitcoinAirqt_a-multisiginputentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-multisiginputentry.o `test -f 'qt/multisiginputentry.cpp' || echo '$(srcdir)/'`qt/multisiginputentry.cpp

qt/libBitcoinAirqt_a-multisiginputentry.obj: qt/multisiginputentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-multisiginputentry.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-multisiginputentry.Tpo -c -o qt/libBitcoinAirqt_a-multisiginputentry.obj `if test -f 'qt/multisiginputentry.cpp'; then $(CYGPATH_W) 'qt/multisiginputentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/multisiginputentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-multisiginputentry.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-multisiginputentry.Po
#	$(AM_V_CXX)source='qt/multisiginputentry.cpp' object='qt/libBitcoinAirqt_a-multisiginputentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-multisiginputentry.obj `if test -f 'qt/multisiginputentry.cpp'; then $(CYGPATH_W) 'qt/multisiginputentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/multisiginputentry.cpp'; fi`

qt/libBitcoinAirqt_a-multisigdialog.o: qt/multisigdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-multisigdialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-multisigdialog.Tpo -c -o qt/libBitcoinAirqt_a-multisigdialog.o `test -f 'qt/multisigdialog.cpp' || echo '$(srcdir)/'`qt/multisigdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-multisigdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-multisigdialog.Po
#	$(AM_V_CXX)source='qt/multisigdialog.cpp' object='qt/libBitcoinAirqt_a-multisigdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-multisigdialog.o `test -f 'qt/multisigdialog.cpp' || echo '$(srcdir)/'`qt/multisigdialog.cpp

qt/libBitcoinAirqt_a-multisigdialog.obj: qt/multisigdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-multisigdialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-multisigdialog.Tpo -c -o qt/libBitcoinAirqt_a-multisigdialog.obj `if test -f 'qt/multisigdialog.cpp'; then $(CYGPATH_W) 'qt/multisigdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/multisigdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-multisigdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-multisigdialog.Po
#	$(AM_V_CXX)source='qt/multisigdialog.cpp' object='qt/libBitcoinAirqt_a-multisigdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-multisigdialog.obj `if test -f 'qt/multisigdialog.cpp'; then $(CYGPATH_W) 'qt/multisigdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/multisigdialog.cpp'; fi`

qt/libBitcoinAirqt_a-sendcoinsdialog.o: qt/sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-sendcoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsdialog.Tpo -c -o qt/libBitcoinAirqt_a-sendcoinsdialog.o `test -f 'qt/sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/sendcoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/sendcoinsdialog.cpp' object='qt/libBitcoinAirqt_a-sendcoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-sendcoinsdialog.o `test -f 'qt/sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/sendcoinsdialog.cpp

qt/libBitcoinAirqt_a-sendcoinsdialog.obj: qt/sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-sendcoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsdialog.Tpo -c -o qt/libBitcoinAirqt_a-sendcoinsdialog.obj `if test -f 'qt/sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/sendcoinsdialog.cpp' object='qt/libBitcoinAirqt_a-sendcoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-sendcoinsdialog.obj `if test -f 'qt/sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsdialog.cpp'; fi`

qt/libBitcoinAirqt_a-sendcoinsentry.o: qt/sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-sendcoinsentry.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsentry.Tpo -c -o qt/libBitcoinAirqt_a-sendcoinsentry.o `test -f 'qt/sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/sendcoinsentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsentry.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/sendcoinsentry.cpp' object='qt/libBitcoinAirqt_a-sendcoinsentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-sendcoinsentry.o `test -f 'qt/sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/sendcoinsentry.cpp

qt/libBitcoinAirqt_a-sendcoinsentry.obj: qt/sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-sendcoinsentry.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsentry.Tpo -c -o qt/libBitcoinAirqt_a-sendcoinsentry.obj `if test -f 'qt/sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsentry.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/sendcoinsentry.cpp' object='qt/libBitcoinAirqt_a-sendcoinsentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-sendcoinsentry.obj `if test -f 'qt/sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsentry.cpp'; fi`

qt/libBitcoinAirqt_a-signverifymessagedialog.o: qt/signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-signverifymessagedialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-signverifymessagedialog.Tpo -c -o qt/libBitcoinAirqt_a-signverifymessagedialog.o `test -f 'qt/signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/signverifymessagedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-signverifymessagedialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/signverifymessagedialog.cpp' object='qt/libBitcoinAirqt_a-signverifymessagedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-signverifymessagedialog.o `test -f 'qt/signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/signverifymessagedialog.cpp

qt/libBitcoinAirqt_a-signverifymessagedialog.obj: qt/signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-signverifymessagedialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-signverifymessagedialog.Tpo -c -o qt/libBitcoinAirqt_a-signverifymessagedialog.obj `if test -f 'qt/signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/signverifymessagedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-signverifymessagedialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/signverifymessagedialog.cpp' object='qt/libBitcoinAirqt_a-signverifymessagedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-signverifymessagedialog.obj `if test -f 'qt/signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/signverifymessagedialog.cpp'; fi`

qt/libBitcoinAirqt_a-transactiondesc.o: qt/transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-transactiondesc.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondesc.Tpo -c -o qt/libBitcoinAirqt_a-transactiondesc.o `test -f 'qt/transactiondesc.cpp' || echo '$(srcdir)/'`qt/transactiondesc.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondesc.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondesc.Po
#	$(AM_V_CXX)source='qt/transactiondesc.cpp' object='qt/libBitcoinAirqt_a-transactiondesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-transactiondesc.o `test -f 'qt/transactiondesc.cpp' || echo '$(srcdir)/'`qt/transactiondesc.cpp

qt/libBitcoinAirqt_a-transactiondesc.obj: qt/transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-transactiondesc.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondesc.Tpo -c -o qt/libBitcoinAirqt_a-transactiondesc.obj `if test -f 'qt/transactiondesc.cpp'; then $(CYGPATH_W) 'qt/transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondesc.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondesc.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondesc.Po
#	$(AM_V_CXX)source='qt/transactiondesc.cpp' object='qt/libBitcoinAirqt_a-transactiondesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-transactiondesc.obj `if test -f 'qt/transactiondesc.cpp'; then $(CYGPATH_W) 'qt/transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondesc.cpp'; fi`

qt/libBitcoinAirqt_a-transactiondescdialog.o: qt/transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-transactiondescdialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondescdialog.Tpo -c -o qt/libBitcoinAirqt_a-transactiondescdialog.o `test -f 'qt/transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/transactiondescdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondescdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/transactiondescdialog.cpp' object='qt/libBitcoinAirqt_a-transactiondescdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-transactiondescdialog.o `test -f 'qt/transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/transactiondescdialog.cpp

qt/libBitcoinAirqt_a-transactiondescdialog.obj: qt/transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-transactiondescdialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondescdialog.Tpo -c -o qt/libBitcoinAirqt_a-transactiondescdialog.obj `if test -f 'qt/transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondescdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondescdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/transactiondescdialog.cpp' object='qt/libBitcoinAirqt_a-transactiondescdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-transactiondescdialog.obj `if test -f 'qt/transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondescdialog.cpp'; fi`

qt/libBitcoinAirqt_a-transactionfilterproxy.o: qt/transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-transactionfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-transactionfilterproxy.Tpo -c -o qt/libBitcoinAirqt_a-transactionfilterproxy.o `test -f 'qt/transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/transactionfilterproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-transactionfilterproxy.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/transactionfilterproxy.cpp' object='qt/libBitcoinAirqt_a-transactionfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-transactionfilterproxy.o `test -f 'qt/transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/transactionfilterproxy.cpp

qt/libBitcoinAirqt_a-transactionfilterproxy.obj: qt/transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-transactionfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-transactionfilterproxy.Tpo -c -o qt/libBitcoinAirqt_a-transactionfilterproxy.obj `if test -f 'qt/transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-transactionfilterproxy.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/transactionfilterproxy.cpp' object='qt/libBitcoinAirqt_a-transactionfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-transactionfilterproxy.obj `if test -f 'qt/transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionfilterproxy.cpp'; fi`

qt/libBitcoinAirqt_a-transactionrecord.o: qt/transactionrecord.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-transactionrecord.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-transactionrecord.Tpo -c -o qt/libBitcoinAirqt_a-transactionrecord.o `test -f 'qt/transactionrecord.cpp' || echo '$(srcdir)/'`qt/transactionrecord.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-transactionrecord.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-transactionrecord.Po
#	$(AM_V_CXX)source='qt/transactionrecord.cpp' object='qt/libBitcoinAirqt_a-transactionrecord.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-transactionrecord.o `test -f 'qt/transactionrecord.cpp' || echo '$(srcdir)/'`qt/transactionrecord.cpp

qt/libBitcoinAirqt_a-transactionrecord.obj: qt/transactionrecord.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-transactionrecord.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-transactionrecord.Tpo -c -o qt/libBitcoinAirqt_a-transactionrecord.obj `if test -f 'qt/transactionrecord.cpp'; then $(CYGPATH_W) 'qt/transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionrecord.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-transactionrecord.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-transactionrecord.Po
#	$(AM_V_CXX)source='qt/transactionrecord.cpp' object='qt/libBitcoinAirqt_a-transactionrecord.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-transactionrecord.obj `if test -f 'qt/transactionrecord.cpp'; then $(CYGPATH_W) 'qt/transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionrecord.cpp'; fi`

qt/libBitcoinAirqt_a-transactiontablemodel.o: qt/transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-transactiontablemodel.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-transactiontablemodel.Tpo -c -o qt/libBitcoinAirqt_a-transactiontablemodel.o `test -f 'qt/transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/transactiontablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-transactiontablemodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/transactiontablemodel.cpp' object='qt/libBitcoinAirqt_a-transactiontablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-transactiontablemodel.o `test -f 'qt/transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/transactiontablemodel.cpp

qt/libBitcoinAirqt_a-transactiontablemodel.obj: qt/transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-transactiontablemodel.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-transactiontablemodel.Tpo -c -o qt/libBitcoinAirqt_a-transactiontablemodel.obj `if test -f 'qt/transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiontablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-transactiontablemodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/transactiontablemodel.cpp' object='qt/libBitcoinAirqt_a-transactiontablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-transactiontablemodel.obj `if test -f 'qt/transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiontablemodel.cpp'; fi`

qt/libBitcoinAirqt_a-transactionview.o: qt/transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-transactionview.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-transactionview.Tpo -c -o qt/libBitcoinAirqt_a-transactionview.o `test -f 'qt/transactionview.cpp' || echo '$(srcdir)/'`qt/transactionview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-transactionview.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-transactionview.Po
#	$(AM_V_CXX)source='qt/transactionview.cpp' object='qt/libBitcoinAirqt_a-transactionview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-transactionview.o `test -f 'qt/transactionview.cpp' || echo '$(srcdir)/'`qt/transactionview.cpp

qt/libBitcoinAirqt_a-transactionview.obj: qt/transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-transactionview.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-transactionview.Tpo -c -o qt/libBitcoinAirqt_a-transactionview.obj `if test -f 'qt/transactionview.cpp'; then $(CYGPATH_W) 'qt/transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-transactionview.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-transactionview.Po
#	$(AM_V_CXX)source='qt/transactionview.cpp' object='qt/libBitcoinAirqt_a-transactionview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-transactionview.obj `if test -f 'qt/transactionview.cpp'; then $(CYGPATH_W) 'qt/transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionview.cpp'; fi`

qt/libBitcoinAirqt_a-walletframe.o: qt/walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-walletframe.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-walletframe.Tpo -c -o qt/libBitcoinAirqt_a-walletframe.o `test -f 'qt/walletframe.cpp' || echo '$(srcdir)/'`qt/walletframe.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-walletframe.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-walletframe.Po
#	$(AM_V_CXX)source='qt/walletframe.cpp' object='qt/libBitcoinAirqt_a-walletframe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-walletframe.o `test -f 'qt/walletframe.cpp' || echo '$(srcdir)/'`qt/walletframe.cpp

qt/libBitcoinAirqt_a-walletframe.obj: qt/walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-walletframe.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-walletframe.Tpo -c -o qt/libBitcoinAirqt_a-walletframe.obj `if test -f 'qt/walletframe.cpp'; then $(CYGPATH_W) 'qt/walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletframe.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-walletframe.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-walletframe.Po
#	$(AM_V_CXX)source='qt/walletframe.cpp' object='qt/libBitcoinAirqt_a-walletframe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-walletframe.obj `if test -f 'qt/walletframe.cpp'; then $(CYGPATH_W) 'qt/walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletframe.cpp'; fi`

qt/libBitcoinAirqt_a-walletmodel.o: qt/walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-walletmodel.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-walletmodel.Tpo -c -o qt/libBitcoinAirqt_a-walletmodel.o `test -f 'qt/walletmodel.cpp' || echo '$(srcdir)/'`qt/walletmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-walletmodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-walletmodel.Po
#	$(AM_V_CXX)source='qt/walletmodel.cpp' object='qt/libBitcoinAirqt_a-walletmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-walletmodel.o `test -f 'qt/walletmodel.cpp' || echo '$(srcdir)/'`qt/walletmodel.cpp

qt/libBitcoinAirqt_a-walletmodel.obj: qt/walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-walletmodel.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-walletmodel.Tpo -c -o qt/libBitcoinAirqt_a-walletmodel.obj `if test -f 'qt/walletmodel.cpp'; then $(CYGPATH_W) 'qt/walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-walletmodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-walletmodel.Po
#	$(AM_V_CXX)source='qt/walletmodel.cpp' object='qt/libBitcoinAirqt_a-walletmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-walletmodel.obj `if test -f 'qt/walletmodel.cpp'; then $(CYGPATH_W) 'qt/walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodel.cpp'; fi`

qt/libBitcoinAirqt_a-walletstack.o: qt/walletstack.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-walletstack.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-walletstack.Tpo -c -o qt/libBitcoinAirqt_a-walletstack.o `test -f 'qt/walletstack.cpp' || echo '$(srcdir)/'`qt/walletstack.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-walletstack.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-walletstack.Po
#	$(AM_V_CXX)source='qt/walletstack.cpp' object='qt/libBitcoinAirqt_a-walletstack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-walletstack.o `test -f 'qt/walletstack.cpp' || echo '$(srcdir)/'`qt/walletstack.cpp

qt/libBitcoinAirqt_a-walletstack.obj: qt/walletstack.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-walletstack.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-walletstack.Tpo -c -o qt/libBitcoinAirqt_a-walletstack.obj `if test -f 'qt/walletstack.cpp'; then $(CYGPATH_W) 'qt/walletstack.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletstack.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-walletstack.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-walletstack.Po
#	$(AM_V_CXX)source='qt/walletstack.cpp' object='qt/libBitcoinAirqt_a-walletstack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-walletstack.obj `if test -f 'qt/walletstack.cpp'; then $(CYGPATH_W) 'qt/walletstack.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletstack.cpp'; fi`

qt/libBitcoinAirqt_a-walletview.o: qt/walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-walletview.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-walletview.Tpo -c -o qt/libBitcoinAirqt_a-walletview.o `test -f 'qt/walletview.cpp' || echo '$(srcdir)/'`qt/walletview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-walletview.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-walletview.Po
#	$(AM_V_CXX)source='qt/walletview.cpp' object='qt/libBitcoinAirqt_a-walletview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-walletview.o `test -f 'qt/walletview.cpp' || echo '$(srcdir)/'`qt/walletview.cpp

qt/libBitcoinAirqt_a-walletview.obj: qt/walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-walletview.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-walletview.Tpo -c -o qt/libBitcoinAirqt_a-walletview.obj `if test -f 'qt/walletview.cpp'; then $(CYGPATH_W) 'qt/walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-walletview.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-walletview.Po
#	$(AM_V_CXX)source='qt/walletview.cpp' object='qt/libBitcoinAirqt_a-walletview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-walletview.obj `if test -f 'qt/walletview.cpp'; then $(CYGPATH_W) 'qt/walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletview.cpp'; fi`

qt/libBitcoinAirqt_a-moc_macdockiconhandler.o: qt/moc_macdockiconhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macdockiconhandler.Tpo -c -o qt/libBitcoinAirqt_a-moc_macdockiconhandler.o `test -f 'qt/moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`qt/moc_macdockiconhandler.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macdockiconhandler.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macdockiconhandler.Po
#	$(AM_V_CXX)source='qt/moc_macdockiconhandler.cpp' object='qt/libBitcoinAirqt_a-moc_macdockiconhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_macdockiconhandler.o `test -f 'qt/moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`qt/moc_macdockiconhandler.cpp

qt/libBitcoinAirqt_a-moc_macdockiconhandler.obj: qt/moc_macdockiconhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macdockiconhandler.Tpo -c -o qt/libBitcoinAirqt_a-moc_macdockiconhandler.obj `if test -f 'qt/moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macdockiconhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macdockiconhandler.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macdockiconhandler.Po
#	$(AM_V_CXX)source='qt/moc_macdockiconhandler.cpp' object='qt/libBitcoinAirqt_a-moc_macdockiconhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_macdockiconhandler.obj `if test -f 'qt/moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macdockiconhandler.cpp'; fi`

qt/libBitcoinAirqt_a-moc_macnotificationhandler.o: qt/moc_macnotificationhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macnotificationhandler.Tpo -c -o qt/libBitcoinAirqt_a-moc_macnotificationhandler.o `test -f 'qt/moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`qt/moc_macnotificationhandler.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macnotificationhandler.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macnotificationhandler.Po
#	$(AM_V_CXX)source='qt/moc_macnotificationhandler.cpp' object='qt/libBitcoinAirqt_a-moc_macnotificationhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_macnotificationhandler.o `test -f 'qt/moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`qt/moc_macnotificationhandler.cpp

qt/libBitcoinAirqt_a-moc_macnotificationhandler.obj: qt/moc_macnotificationhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macnotificationhandler.Tpo -c -o qt/libBitcoinAirqt_a-moc_macnotificationhandler.obj `if test -f 'qt/moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macnotificationhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macnotificationhandler.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macnotificationhandler.Po
#	$(AM_V_CXX)source='qt/moc_macnotificationhandler.cpp' object='qt/libBitcoinAirqt_a-moc_macnotificationhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_macnotificationhandler.obj `if test -f 'qt/moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macnotificationhandler.cpp'; fi`

qt/libBitcoinAirqt_a-moc_aboutdialog.o: qt/moc_aboutdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_aboutdialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_aboutdialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_aboutdialog.o `test -f 'qt/moc_aboutdialog.cpp' || echo '$(srcdir)/'`qt/moc_aboutdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_aboutdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_aboutdialog.Po
#	$(AM_V_CXX)source='qt/moc_aboutdialog.cpp' object='qt/libBitcoinAirqt_a-moc_aboutdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_aboutdialog.o `test -f 'qt/moc_aboutdialog.cpp' || echo '$(srcdir)/'`qt/moc_aboutdialog.cpp

qt/libBitcoinAirqt_a-moc_aboutdialog.obj: qt/moc_aboutdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_aboutdialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_aboutdialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_aboutdialog.obj `if test -f 'qt/moc_aboutdialog.cpp'; then $(CYGPATH_W) 'qt/moc_aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_aboutdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_aboutdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_aboutdialog.Po
#	$(AM_V_CXX)source='qt/moc_aboutdialog.cpp' object='qt/libBitcoinAirqt_a-moc_aboutdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_aboutdialog.obj `if test -f 'qt/moc_aboutdialog.cpp'; then $(CYGPATH_W) 'qt/moc_aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_aboutdialog.cpp'; fi`

qt/libBitcoinAirqt_a-moc_addressbookpage.o: qt/moc_addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_addressbookpage.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addressbookpage.Tpo -c -o qt/libBitcoinAirqt_a-moc_addressbookpage.o `test -f 'qt/moc_addressbookpage.cpp' || echo '$(srcdir)/'`qt/moc_addressbookpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addressbookpage.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addressbookpage.Po
#	$(AM_V_CXX)source='qt/moc_addressbookpage.cpp' object='qt/libBitcoinAirqt_a-moc_addressbookpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_addressbookpage.o `test -f 'qt/moc_addressbookpage.cpp' || echo '$(srcdir)/'`qt/moc_addressbookpage.cpp

qt/libBitcoinAirqt_a-moc_addressbookpage.obj: qt/moc_addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_addressbookpage.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addressbookpage.Tpo -c -o qt/libBitcoinAirqt_a-moc_addressbookpage.obj `if test -f 'qt/moc_addressbookpage.cpp'; then $(CYGPATH_W) 'qt/moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addressbookpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addressbookpage.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addressbookpage.Po
#	$(AM_V_CXX)source='qt/moc_addressbookpage.cpp' object='qt/libBitcoinAirqt_a-moc_addressbookpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_addressbookpage.obj `if test -f 'qt/moc_addressbookpage.cpp'; then $(CYGPATH_W) 'qt/moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addressbookpage.cpp'; fi`

qt/libBitcoinAirqt_a-moc_addresstablemodel.o: qt/moc_addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_addresstablemodel.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addresstablemodel.Tpo -c -o qt/libBitcoinAirqt_a-moc_addresstablemodel.o `test -f 'qt/moc_addresstablemodel.cpp' || echo '$(srcdir)/'`qt/moc_addresstablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addresstablemodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addresstablemodel.Po
#	$(AM_V_CXX)source='qt/moc_addresstablemodel.cpp' object='qt/libBitcoinAirqt_a-moc_addresstablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_addresstablemodel.o `test -f 'qt/moc_addresstablemodel.cpp' || echo '$(srcdir)/'`qt/moc_addresstablemodel.cpp

qt/libBitcoinAirqt_a-moc_addresstablemodel.obj: qt/moc_addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_addresstablemodel.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addresstablemodel.Tpo -c -o qt/libBitcoinAirqt_a-moc_addresstablemodel.obj `if test -f 'qt/moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addresstablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addresstablemodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addresstablemodel.Po
#	$(AM_V_CXX)source='qt/moc_addresstablemodel.cpp' object='qt/libBitcoinAirqt_a-moc_addresstablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_addresstablemodel.obj `if test -f 'qt/moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addresstablemodel.cpp'; fi`

qt/libBitcoinAirqt_a-moc_askpassphrasedialog.o: qt/moc_askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_askpassphrasedialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_askpassphrasedialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_askpassphrasedialog.o `test -f 'qt/moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/moc_askpassphrasedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_askpassphrasedialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/moc_askpassphrasedialog.cpp' object='qt/libBitcoinAirqt_a-moc_askpassphrasedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_askpassphrasedialog.o `test -f 'qt/moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/moc_askpassphrasedialog.cpp

qt/libBitcoinAirqt_a-moc_askpassphrasedialog.obj: qt/moc_askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_askpassphrasedialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_askpassphrasedialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_askpassphrasedialog.obj `if test -f 'qt/moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_askpassphrasedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_askpassphrasedialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/moc_askpassphrasedialog.cpp' object='qt/libBitcoinAirqt_a-moc_askpassphrasedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_askpassphrasedialog.obj `if test -f 'qt/moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_askpassphrasedialog.cpp'; fi`

qt/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.o: qt/moc_bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.Tpo -c -o qt/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.o `test -f 'qt/moc_bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinaddressvalidator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinaddressvalidator.cpp' object='qt/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.o `test -f 'qt/moc_bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinaddressvalidator.cpp

qt/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.obj: qt/moc_bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.Tpo -c -o qt/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.obj `if test -f 'qt/moc_bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinaddressvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinaddressvalidator.cpp' object='qt/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.obj `if test -f 'qt/moc_bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinaddressvalidator.cpp'; fi`

qt/libBitcoinAirqt_a-moc_bitcoinamountfield.o: qt/moc_bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_bitcoinamountfield.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinamountfield.Tpo -c -o qt/libBitcoinAirqt_a-moc_bitcoinamountfield.o `test -f 'qt/moc_bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinamountfield.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinamountfield.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinamountfield.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinamountfield.cpp' object='qt/libBitcoinAirqt_a-moc_bitcoinamountfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_bitcoinamountfield.o `test -f 'qt/moc_bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinamountfield.cpp

qt/libBitcoinAirqt_a-moc_bitcoinamountfield.obj: qt/moc_bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_bitcoinamountfield.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinamountfield.Tpo -c -o qt/libBitcoinAirqt_a-moc_bitcoinamountfield.obj `if test -f 'qt/moc_bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinamountfield.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinamountfield.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinamountfield.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinamountfield.cpp' object='qt/libBitcoinAirqt_a-moc_bitcoinamountfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_bitcoinamountfield.obj `if test -f 'qt/moc_bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinamountfield.cpp'; fi`

qt/libBitcoinAirqt_a-moc_bitcoingui.o: qt/moc_bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_bitcoingui.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoingui.Tpo -c -o qt/libBitcoinAirqt_a-moc_bitcoingui.o `test -f 'qt/moc_bitcoingui.cpp' || echo '$(srcdir)/'`qt/moc_bitcoingui.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoingui.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoingui.Po
#	$(AM_V_CXX)source='qt/moc_bitcoingui.cpp' object='qt/libBitcoinAirqt_a-moc_bitcoingui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_bitcoingui.o `test -f 'qt/moc_bitcoingui.cpp' || echo '$(srcdir)/'`qt/moc_bitcoingui.cpp

qt/libBitcoinAirqt_a-moc_bitcoingui.obj: qt/moc_bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_bitcoingui.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoingui.Tpo -c -o qt/libBitcoinAirqt_a-moc_bitcoingui.obj `if test -f 'qt/moc_bitcoingui.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoingui.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoingui.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoingui.Po
#	$(AM_V_CXX)source='qt/moc_bitcoingui.cpp' object='qt/libBitcoinAirqt_a-moc_bitcoingui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_bitcoingui.obj `if test -f 'qt/moc_bitcoingui.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoingui.cpp'; fi`

qt/libBitcoinAirqt_a-moc_bitcoinunits.o: qt/moc_bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_bitcoinunits.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinunits.Tpo -c -o qt/libBitcoinAirqt_a-moc_bitcoinunits.o `test -f 'qt/moc_bitcoinunits.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinunits.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinunits.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinunits.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinunits.cpp' object='qt/libBitcoinAirqt_a-moc_bitcoinunits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_bitcoinunits.o `test -f 'qt/moc_bitcoinunits.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinunits.cpp

qt/libBitcoinAirqt_a-moc_bitcoinunits.obj: qt/moc_bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_bitcoinunits.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinunits.Tpo -c -o qt/libBitcoinAirqt_a-moc_bitcoinunits.obj `if test -f 'qt/moc_bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinunits.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinunits.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinunits.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinunits.cpp' object='qt/libBitcoinAirqt_a-moc_bitcoinunits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_bitcoinunits.obj `if test -f 'qt/moc_bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinunits.cpp'; fi`

qt/libBitcoinAirqt_a-moc_clientmodel.o: qt/moc_clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_clientmodel.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_clientmodel.Tpo -c -o qt/libBitcoinAirqt_a-moc_clientmodel.o `test -f 'qt/moc_clientmodel.cpp' || echo '$(srcdir)/'`qt/moc_clientmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_clientmodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_clientmodel.Po
#	$(AM_V_CXX)source='qt/moc_clientmodel.cpp' object='qt/libBitcoinAirqt_a-moc_clientmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_clientmodel.o `test -f 'qt/moc_clientmodel.cpp' || echo '$(srcdir)/'`qt/moc_clientmodel.cpp

qt/libBitcoinAirqt_a-moc_clientmodel.obj: qt/moc_clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_clientmodel.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_clientmodel.Tpo -c -o qt/libBitcoinAirqt_a-moc_clientmodel.obj `if test -f 'qt/moc_clientmodel.cpp'; then $(CYGPATH_W) 'qt/moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_clientmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_clientmodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_clientmodel.Po
#	$(AM_V_CXX)source='qt/moc_clientmodel.cpp' object='qt/libBitcoinAirqt_a-moc_clientmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_clientmodel.obj `if test -f 'qt/moc_clientmodel.cpp'; then $(CYGPATH_W) 'qt/moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_clientmodel.cpp'; fi`

qt/libBitcoinAirqt_a-moc_coincontroldialog.o: qt/moc_coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_coincontroldialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroldialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_coincontroldialog.o `test -f 'qt/moc_coincontroldialog.cpp' || echo '$(srcdir)/'`qt/moc_coincontroldialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroldialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroldialog.Po
#	$(AM_V_CXX)source='qt/moc_coincontroldialog.cpp' object='qt/libBitcoinAirqt_a-moc_coincontroldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_coincontroldialog.o `test -f 'qt/moc_coincontroldialog.cpp' || echo '$(srcdir)/'`qt/moc_coincontroldialog.cpp

qt/libBitcoinAirqt_a-moc_coincontroldialog.obj: qt/moc_coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_coincontroldialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroldialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_coincontroldialog.obj `if test -f 'qt/moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroldialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroldialog.Po
#	$(AM_V_CXX)source='qt/moc_coincontroldialog.cpp' object='qt/libBitcoinAirqt_a-moc_coincontroldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_coincontroldialog.obj `if test -f 'qt/moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroldialog.cpp'; fi`

qt/libBitcoinAirqt_a-moc_coincontroltreewidget.o: qt/moc_coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_coincontroltreewidget.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroltreewidget.Tpo -c -o qt/libBitcoinAirqt_a-moc_coincontroltreewidget.o `test -f 'qt/moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/moc_coincontroltreewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroltreewidget.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/moc_coincontroltreewidget.cpp' object='qt/libBitcoinAirqt_a-moc_coincontroltreewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_coincontroltreewidget.o `test -f 'qt/moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/moc_coincontroltreewidget.cpp

qt/libBitcoinAirqt_a-moc_coincontroltreewidget.obj: qt/moc_coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_coincontroltreewidget.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroltreewidget.Tpo -c -o qt/libBitcoinAirqt_a-moc_coincontroltreewidget.obj `if test -f 'qt/moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroltreewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroltreewidget.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/moc_coincontroltreewidget.cpp' object='qt/libBitcoinAirqt_a-moc_coincontroltreewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_coincontroltreewidget.obj `if test -f 'qt/moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroltreewidget.cpp'; fi`

qt/libBitcoinAirqt_a-moc_csvmodelwriter.o: qt/moc_csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_csvmodelwriter.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_csvmodelwriter.Tpo -c -o qt/libBitcoinAirqt_a-moc_csvmodelwriter.o `test -f 'qt/moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/moc_csvmodelwriter.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_csvmodelwriter.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/moc_csvmodelwriter.cpp' object='qt/libBitcoinAirqt_a-moc_csvmodelwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_csvmodelwriter.o `test -f 'qt/moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/moc_csvmodelwriter.cpp

qt/libBitcoinAirqt_a-moc_csvmodelwriter.obj: qt/moc_csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_csvmodelwriter.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_csvmodelwriter.Tpo -c -o qt/libBitcoinAirqt_a-moc_csvmodelwriter.obj `if test -f 'qt/moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_csvmodelwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_csvmodelwriter.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/moc_csvmodelwriter.cpp' object='qt/libBitcoinAirqt_a-moc_csvmodelwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_csvmodelwriter.obj `if test -f 'qt/moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_csvmodelwriter.cpp'; fi`

qt/libBitcoinAirqt_a-moc_editaddressdialog.o: qt/moc_editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_editaddressdialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_editaddressdialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_editaddressdialog.o `test -f 'qt/moc_editaddressdialog.cpp' || echo '$(srcdir)/'`qt/moc_editaddressdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_editaddressdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_editaddressdialog.Po
#	$(AM_V_CXX)source='qt/moc_editaddressdialog.cpp' object='qt/libBitcoinAirqt_a-moc_editaddressdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_editaddressdialog.o `test -f 'qt/moc_editaddressdialog.cpp' || echo '$(srcdir)/'`qt/moc_editaddressdialog.cpp

qt/libBitcoinAirqt_a-moc_editaddressdialog.obj: qt/moc_editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_editaddressdialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_editaddressdialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_editaddressdialog.obj `if test -f 'qt/moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_editaddressdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_editaddressdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_editaddressdialog.Po
#	$(AM_V_CXX)source='qt/moc_editaddressdialog.cpp' object='qt/libBitcoinAirqt_a-moc_editaddressdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_editaddressdialog.obj `if test -f 'qt/moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_editaddressdialog.cpp'; fi`

qt/libBitcoinAirqt_a-moc_guiutil.o: qt/moc_guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_guiutil.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_guiutil.Tpo -c -o qt/libBitcoinAirqt_a-moc_guiutil.o `test -f 'qt/moc_guiutil.cpp' || echo '$(srcdir)/'`qt/moc_guiutil.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_guiutil.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_guiutil.Po
#	$(AM_V_CXX)source='qt/moc_guiutil.cpp' object='qt/libBitcoinAirqt_a-moc_guiutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_guiutil.o `test -f 'qt/moc_guiutil.cpp' || echo '$(srcdir)/'`qt/moc_guiutil.cpp

qt/libBitcoinAirqt_a-moc_guiutil.obj: qt/moc_guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_guiutil.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_guiutil.Tpo -c -o qt/libBitcoinAirqt_a-moc_guiutil.obj `if test -f 'qt/moc_guiutil.cpp'; then $(CYGPATH_W) 'qt/moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_guiutil.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_guiutil.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_guiutil.Po
#	$(AM_V_CXX)source='qt/moc_guiutil.cpp' object='qt/libBitcoinAirqt_a-moc_guiutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_guiutil.obj `if test -f 'qt/moc_guiutil.cpp'; then $(CYGPATH_W) 'qt/moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_guiutil.cpp'; fi`

qt/libBitcoinAirqt_a-moc_multisigaddressentry.o: qt/moc_multisigaddressentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_multisigaddressentry.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigaddressentry.Tpo -c -o qt/libBitcoinAirqt_a-moc_multisigaddressentry.o `test -f 'qt/moc_multisigaddressentry.cpp' || echo '$(srcdir)/'`qt/moc_multisigaddressentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigaddressentry.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigaddressentry.Po
#	$(AM_V_CXX)source='qt/moc_multisigaddressentry.cpp' object='qt/libBitcoinAirqt_a-moc_multisigaddressentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_multisigaddressentry.o `test -f 'qt/moc_multisigaddressentry.cpp' || echo '$(srcdir)/'`qt/moc_multisigaddressentry.cpp

qt/libBitcoinAirqt_a-moc_multisigaddressentry.obj: qt/moc_multisigaddressentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_multisigaddressentry.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigaddressentry.Tpo -c -o qt/libBitcoinAirqt_a-moc_multisigaddressentry.obj `if test -f 'qt/moc_multisigaddressentry.cpp'; then $(CYGPATH_W) 'qt/moc_multisigaddressentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_multisigaddressentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigaddressentry.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigaddressentry.Po
#	$(AM_V_CXX)source='qt/moc_multisigaddressentry.cpp' object='qt/libBitcoinAirqt_a-moc_multisigaddressentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_multisigaddressentry.obj `if test -f 'qt/moc_multisigaddressentry.cpp'; then $(CYGPATH_W) 'qt/moc_multisigaddressentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_multisigaddressentry.cpp'; fi`

qt/libBitcoinAirqt_a-moc_multisiginputentry.o: qt/moc_multisiginputentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_multisiginputentry.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisiginputentry.Tpo -c -o qt/libBitcoinAirqt_a-moc_multisiginputentry.o `test -f 'qt/moc_multisiginputentry.cpp' || echo '$(srcdir)/'`qt/moc_multisiginputentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisiginputentry.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisiginputentry.Po
#	$(AM_V_CXX)source='qt/moc_multisiginputentry.cpp' object='qt/libBitcoinAirqt_a-moc_multisiginputentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_multisiginputentry.o `test -f 'qt/moc_multisiginputentry.cpp' || echo '$(srcdir)/'`qt/moc_multisiginputentry.cpp

qt/libBitcoinAirqt_a-moc_multisiginputentry.obj: qt/moc_multisiginputentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_multisiginputentry.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisiginputentry.Tpo -c -o qt/libBitcoinAirqt_a-moc_multisiginputentry.obj `if test -f 'qt/moc_multisiginputentry.cpp'; then $(CYGPATH_W) 'qt/moc_multisiginputentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_multisiginputentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisiginputentry.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisiginputentry.Po
#	$(AM_V_CXX)source='qt/moc_multisiginputentry.cpp' object='qt/libBitcoinAirqt_a-moc_multisiginputentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_multisiginputentry.obj `if test -f 'qt/moc_multisiginputentry.cpp'; then $(CYGPATH_W) 'qt/moc_multisiginputentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_multisiginputentry.cpp'; fi`

qt/libBitcoinAirqt_a-moc_multisigdialog.o: qt/moc_multisigdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_multisigdialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigdialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_multisigdialog.o `test -f 'qt/moc_multisigdialog.cpp' || echo '$(srcdir)/'`qt/moc_multisigdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigdialog.Po
#	$(AM_V_CXX)source='qt/moc_multisigdialog.cpp' object='qt/libBitcoinAirqt_a-moc_multisigdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_multisigdialog.o `test -f 'qt/moc_multisigdialog.cpp' || echo '$(srcdir)/'`qt/moc_multisigdialog.cpp

qt/libBitcoinAirqt_a-moc_multisigdialog.obj: qt/moc_multisigdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_multisigdialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigdialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_multisigdialog.obj `if test -f 'qt/moc_multisigdialog.cpp'; then $(CYGPATH_W) 'qt/moc_multisigdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_multisigdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigdialog.Po
#	$(AM_V_CXX)source='qt/moc_multisigdialog.cpp' object='qt/libBitcoinAirqt_a-moc_multisigdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_multisigdialog.obj `if test -f 'qt/moc_multisigdialog.cpp'; then $(CYGPATH_W) 'qt/moc_multisigdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_multisigdialog.cpp'; fi`

qt/libBitcoinAirqt_a-moc_mintingview.o: qt/moc_mintingview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_mintingview.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingview.Tpo -c -o qt/libBitcoinAirqt_a-moc_mintingview.o `test -f 'qt/moc_mintingview.cpp' || echo '$(srcdir)/'`qt/moc_mintingview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingview.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingview.Po
#	$(AM_V_CXX)source='qt/moc_mintingview.cpp' object='qt/libBitcoinAirqt_a-moc_mintingview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_mintingview.o `test -f 'qt/moc_mintingview.cpp' || echo '$(srcdir)/'`qt/moc_mintingview.cpp

qt/libBitcoinAirqt_a-moc_mintingview.obj: qt/moc_mintingview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_mintingview.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingview.Tpo -c -o qt/libBitcoinAirqt_a-moc_mintingview.obj `if test -f 'qt/moc_mintingview.cpp'; then $(CYGPATH_W) 'qt/moc_mintingview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_mintingview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingview.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingview.Po
#	$(AM_V_CXX)source='qt/moc_mintingview.cpp' object='qt/libBitcoinAirqt_a-moc_mintingview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_mintingview.obj `if test -f 'qt/moc_mintingview.cpp'; then $(CYGPATH_W) 'qt/moc_mintingview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_mintingview.cpp'; fi`

qt/libBitcoinAirqt_a-moc_mintingtablemodel.o: qt/moc_mintingtablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_mintingtablemodel.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingtablemodel.Tpo -c -o qt/libBitcoinAirqt_a-moc_mintingtablemodel.o `test -f 'qt/moc_mintingtablemodel.cpp' || echo '$(srcdir)/'`qt/moc_mintingtablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingtablemodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingtablemodel.Po
#	$(AM_V_CXX)source='qt/moc_mintingtablemodel.cpp' object='qt/libBitcoinAirqt_a-moc_mintingtablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_mintingtablemodel.o `test -f 'qt/moc_mintingtablemodel.cpp' || echo '$(srcdir)/'`qt/moc_mintingtablemodel.cpp

qt/libBitcoinAirqt_a-moc_mintingtablemodel.obj: qt/moc_mintingtablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_mintingtablemodel.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingtablemodel.Tpo -c -o qt/libBitcoinAirqt_a-moc_mintingtablemodel.obj `if test -f 'qt/moc_mintingtablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_mintingtablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_mintingtablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingtablemodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingtablemodel.Po
#	$(AM_V_CXX)source='qt/moc_mintingtablemodel.cpp' object='qt/libBitcoinAirqt_a-moc_mintingtablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_mintingtablemodel.obj `if test -f 'qt/moc_mintingtablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_mintingtablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_mintingtablemodel.cpp'; fi`

qt/libBitcoinAirqt_a-moc_mintingfilterproxy.o: qt/moc_mintingfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_mintingfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingfilterproxy.Tpo -c -o qt/libBitcoinAirqt_a-moc_mintingfilterproxy.o `test -f 'qt/moc_mintingfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_mintingfilterproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingfilterproxy.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingfilterproxy.Po
#	$(AM_V_CXX)source='qt/moc_mintingfilterproxy.cpp' object='qt/libBitcoinAirqt_a-moc_mintingfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_mintingfilterproxy.o `test -f 'qt/moc_mintingfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_mintingfilterproxy.cpp

qt/libBitcoinAirqt_a-moc_mintingfilterproxy.obj: qt/moc_mintingfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_mintingfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingfilterproxy.Tpo -c -o qt/libBitcoinAirqt_a-moc_mintingfilterproxy.obj `if test -f 'qt/moc_mintingfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_mintingfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_mintingfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingfilterproxy.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingfilterproxy.Po
#	$(AM_V_CXX)source='qt/moc_mintingfilterproxy.cpp' object='qt/libBitcoinAirqt_a-moc_mintingfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_mintingfilterproxy.obj `if test -f 'qt/moc_mintingfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_mintingfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_mintingfilterproxy.cpp'; fi`

qt/libBitcoinAirqt_a-moc_monitoreddatamapper.o: qt/moc_monitoreddatamapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_monitoreddatamapper.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_monitoreddatamapper.Tpo -c -o qt/libBitcoinAirqt_a-moc_monitoreddatamapper.o `test -f 'qt/moc_monitoreddatamapper.cpp' || echo '$(srcdir)/'`qt/moc_monitoreddatamapper.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_monitoreddatamapper.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_monitoreddatamapper.Po
#	$(AM_V_CXX)source='qt/moc_monitoreddatamapper.cpp' object='qt/libBitcoinAirqt_a-moc_monitoreddatamapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_monitoreddatamapper.o `test -f 'qt/moc_monitoreddatamapper.cpp' || echo '$(srcdir)/'`qt/moc_monitoreddatamapper.cpp

qt/libBitcoinAirqt_a-moc_monitoreddatamapper.obj: qt/moc_monitoreddatamapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_monitoreddatamapper.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_monitoreddatamapper.Tpo -c -o qt/libBitcoinAirqt_a-moc_monitoreddatamapper.obj `if test -f 'qt/moc_monitoreddatamapper.cpp'; then $(CYGPATH_W) 'qt/moc_monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_monitoreddatamapper.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_monitoreddatamapper.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_monitoreddatamapper.Po
#	$(AM_V_CXX)source='qt/moc_monitoreddatamapper.cpp' object='qt/libBitcoinAirqt_a-moc_monitoreddatamapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_monitoreddatamapper.obj `if test -f 'qt/moc_monitoreddatamapper.cpp'; then $(CYGPATH_W) 'qt/moc_monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_monitoreddatamapper.cpp'; fi`

qt/libBitcoinAirqt_a-moc_notificator.o: qt/moc_notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_notificator.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_notificator.Tpo -c -o qt/libBitcoinAirqt_a-moc_notificator.o `test -f 'qt/moc_notificator.cpp' || echo '$(srcdir)/'`qt/moc_notificator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_notificator.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_notificator.Po
#	$(AM_V_CXX)source='qt/moc_notificator.cpp' object='qt/libBitcoinAirqt_a-moc_notificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_notificator.o `test -f 'qt/moc_notificator.cpp' || echo '$(srcdir)/'`qt/moc_notificator.cpp

qt/libBitcoinAirqt_a-moc_notificator.obj: qt/moc_notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_notificator.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_notificator.Tpo -c -o qt/libBitcoinAirqt_a-moc_notificator.obj `if test -f 'qt/moc_notificator.cpp'; then $(CYGPATH_W) 'qt/moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_notificator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_notificator.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_notificator.Po
#	$(AM_V_CXX)source='qt/moc_notificator.cpp' object='qt/libBitcoinAirqt_a-moc_notificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_notificator.obj `if test -f 'qt/moc_notificator.cpp'; then $(CYGPATH_W) 'qt/moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_notificator.cpp'; fi`

qt/libBitcoinAirqt_a-moc_optionsdialog.o: qt/moc_optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_optionsdialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsdialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_optionsdialog.o `test -f 'qt/moc_optionsdialog.cpp' || echo '$(srcdir)/'`qt/moc_optionsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsdialog.Po
#	$(AM_V_CXX)source='qt/moc_optionsdialog.cpp' object='qt/libBitcoinAirqt_a-moc_optionsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_optionsdialog.o `test -f 'qt/moc_optionsdialog.cpp' || echo '$(srcdir)/'`qt/moc_optionsdialog.cpp

qt/libBitcoinAirqt_a-moc_optionsdialog.obj: qt/moc_optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_optionsdialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsdialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_optionsdialog.obj `if test -f 'qt/moc_optionsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsdialog.Po
#	$(AM_V_CXX)source='qt/moc_optionsdialog.cpp' object='qt/libBitcoinAirqt_a-moc_optionsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_optionsdialog.obj `if test -f 'qt/moc_optionsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsdialog.cpp'; fi`

qt/libBitcoinAirqt_a-moc_optionsmodel.o: qt/moc_optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_optionsmodel.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsmodel.Tpo -c -o qt/libBitcoinAirqt_a-moc_optionsmodel.o `test -f 'qt/moc_optionsmodel.cpp' || echo '$(srcdir)/'`qt/moc_optionsmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsmodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsmodel.Po
#	$(AM_V_CXX)source='qt/moc_optionsmodel.cpp' object='qt/libBitcoinAirqt_a-moc_optionsmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_optionsmodel.o `test -f 'qt/moc_optionsmodel.cpp' || echo '$(srcdir)/'`qt/moc_optionsmodel.cpp

qt/libBitcoinAirqt_a-moc_optionsmodel.obj: qt/moc_optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_optionsmodel.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsmodel.Tpo -c -o qt/libBitcoinAirqt_a-moc_optionsmodel.obj `if test -f 'qt/moc_optionsmodel.cpp'; then $(CYGPATH_W) 'qt/moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsmodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsmodel.Po
#	$(AM_V_CXX)source='qt/moc_optionsmodel.cpp' object='qt/libBitcoinAirqt_a-moc_optionsmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_optionsmodel.obj `if test -f 'qt/moc_optionsmodel.cpp'; then $(CYGPATH_W) 'qt/moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsmodel.cpp'; fi`

qt/libBitcoinAirqt_a-moc_overviewpage.o: qt/moc_overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_overviewpage.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_overviewpage.Tpo -c -o qt/libBitcoinAirqt_a-moc_overviewpage.o `test -f 'qt/moc_overviewpage.cpp' || echo '$(srcdir)/'`qt/moc_overviewpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_overviewpage.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_overviewpage.Po
#	$(AM_V_CXX)source='qt/moc_overviewpage.cpp' object='qt/libBitcoinAirqt_a-moc_overviewpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_overviewpage.o `test -f 'qt/moc_overviewpage.cpp' || echo '$(srcdir)/'`qt/moc_overviewpage.cpp

qt/libBitcoinAirqt_a-moc_overviewpage.obj: qt/moc_overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_overviewpage.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_overviewpage.Tpo -c -o qt/libBitcoinAirqt_a-moc_overviewpage.obj `if test -f 'qt/moc_overviewpage.cpp'; then $(CYGPATH_W) 'qt/moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_overviewpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_overviewpage.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_overviewpage.Po
#	$(AM_V_CXX)source='qt/moc_overviewpage.cpp' object='qt/libBitcoinAirqt_a-moc_overviewpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_overviewpage.obj `if test -f 'qt/moc_overviewpage.cpp'; then $(CYGPATH_W) 'qt/moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_overviewpage.cpp'; fi`

qt/libBitcoinAirqt_a-moc_paymentserver.o: qt/moc_paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_paymentserver.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_paymentserver.Tpo -c -o qt/libBitcoinAirqt_a-moc_paymentserver.o `test -f 'qt/moc_paymentserver.cpp' || echo '$(srcdir)/'`qt/moc_paymentserver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_paymentserver.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_paymentserver.Po
#	$(AM_V_CXX)source='qt/moc_paymentserver.cpp' object='qt/libBitcoinAirqt_a-moc_paymentserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_paymentserver.o `test -f 'qt/moc_paymentserver.cpp' || echo '$(srcdir)/'`qt/moc_paymentserver.cpp

qt/libBitcoinAirqt_a-moc_paymentserver.obj: qt/moc_paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_paymentserver.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_paymentserver.Tpo -c -o qt/libBitcoinAirqt_a-moc_paymentserver.obj `if test -f 'qt/moc_paymentserver.cpp'; then $(CYGPATH_W) 'qt/moc_paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_paymentserver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_paymentserver.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_paymentserver.Po
#	$(AM_V_CXX)source='qt/moc_paymentserver.cpp' object='qt/libBitcoinAirqt_a-moc_paymentserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_paymentserver.obj `if test -f 'qt/moc_paymentserver.cpp'; then $(CYGPATH_W) 'qt/moc_paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_paymentserver.cpp'; fi`

qt/libBitcoinAirqt_a-moc_qrcodedialog.o: qt/moc_qrcodedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_qrcodedialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qrcodedialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_qrcodedialog.o `test -f 'qt/moc_qrcodedialog.cpp' || echo '$(srcdir)/'`qt/moc_qrcodedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qrcodedialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qrcodedialog.Po
#	$(AM_V_CXX)source='qt/moc_qrcodedialog.cpp' object='qt/libBitcoinAirqt_a-moc_qrcodedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_qrcodedialog.o `test -f 'qt/moc_qrcodedialog.cpp' || echo '$(srcdir)/'`qt/moc_qrcodedialog.cpp

qt/libBitcoinAirqt_a-moc_qrcodedialog.obj: qt/moc_qrcodedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_qrcodedialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qrcodedialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_qrcodedialog.obj `if test -f 'qt/moc_qrcodedialog.cpp'; then $(CYGPATH_W) 'qt/moc_qrcodedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qrcodedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qrcodedialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qrcodedialog.Po
#	$(AM_V_CXX)source='qt/moc_qrcodedialog.cpp' object='qt/libBitcoinAirqt_a-moc_qrcodedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_qrcodedialog.obj `if test -f 'qt/moc_qrcodedialog.cpp'; then $(CYGPATH_W) 'qt/moc_qrcodedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qrcodedialog.cpp'; fi`

qt/libBitcoinAirqt_a-moc_qvalidatedlineedit.o: qt/moc_qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_qvalidatedlineedit.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvalidatedlineedit.Tpo -c -o qt/libBitcoinAirqt_a-moc_qvalidatedlineedit.o `test -f 'qt/moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedlineedit.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvalidatedlineedit.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/moc_qvalidatedlineedit.cpp' object='qt/libBitcoinAirqt_a-moc_qvalidatedlineedit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_qvalidatedlineedit.o `test -f 'qt/moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedlineedit.cpp

qt/libBitcoinAirqt_a-moc_qvalidatedlineedit.obj: qt/moc_qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_qvalidatedlineedit.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvalidatedlineedit.Tpo -c -o qt/libBitcoinAirqt_a-moc_qvalidatedlineedit.obj `if test -f 'qt/moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedlineedit.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvalidatedlineedit.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/moc_qvalidatedlineedit.cpp' object='qt/libBitcoinAirqt_a-moc_qvalidatedlineedit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_qvalidatedlineedit.obj `if test -f 'qt/moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedlineedit.cpp'; fi`

qt/libBitcoinAirqt_a-moc_qvaluecombobox.o: qt/moc_qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_qvaluecombobox.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvaluecombobox.Tpo -c -o qt/libBitcoinAirqt_a-moc_qvaluecombobox.o `test -f 'qt/moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/moc_qvaluecombobox.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvaluecombobox.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/moc_qvaluecombobox.cpp' object='qt/libBitcoinAirqt_a-moc_qvaluecombobox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_qvaluecombobox.o `test -f 'qt/moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/moc_qvaluecombobox.cpp

qt/libBitcoinAirqt_a-moc_qvaluecombobox.obj: qt/moc_qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_qvaluecombobox.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvaluecombobox.Tpo -c -o qt/libBitcoinAirqt_a-moc_qvaluecombobox.obj `if test -f 'qt/moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvaluecombobox.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvaluecombobox.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/moc_qvaluecombobox.cpp' object='qt/libBitcoinAirqt_a-moc_qvaluecombobox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_qvaluecombobox.obj `if test -f 'qt/moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvaluecombobox.cpp'; fi`

qt/libBitcoinAirqt_a-moc_rpcconsole.o: qt/moc_rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_rpcconsole.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_rpcconsole.Tpo -c -o qt/libBitcoinAirqt_a-moc_rpcconsole.o `test -f 'qt/moc_rpcconsole.cpp' || echo '$(srcdir)/'`qt/moc_rpcconsole.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_rpcconsole.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_rpcconsole.Po
#	$(AM_V_CXX)source='qt/moc_rpcconsole.cpp' object='qt/libBitcoinAirqt_a-moc_rpcconsole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_rpcconsole.o `test -f 'qt/moc_rpcconsole.cpp' || echo '$(srcdir)/'`qt/moc_rpcconsole.cpp

qt/libBitcoinAirqt_a-moc_rpcconsole.obj: qt/moc_rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_rpcconsole.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_rpcconsole.Tpo -c -o qt/libBitcoinAirqt_a-moc_rpcconsole.obj `if test -f 'qt/moc_rpcconsole.cpp'; then $(CYGPATH_W) 'qt/moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_rpcconsole.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_rpcconsole.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_rpcconsole.Po
#	$(AM_V_CXX)source='qt/moc_rpcconsole.cpp' object='qt/libBitcoinAirqt_a-moc_rpcconsole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_rpcconsole.obj `if test -f 'qt/moc_rpcconsole.cpp'; then $(CYGPATH_W) 'qt/moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_rpcconsole.cpp'; fi`

qt/libBitcoinAirqt_a-moc_sendcoinsdialog.o: qt/moc_sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_sendcoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsdialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_sendcoinsdialog.o `test -f 'qt/moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsdialog.cpp' object='qt/libBitcoinAirqt_a-moc_sendcoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_sendcoinsdialog.o `test -f 'qt/moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsdialog.cpp

qt/libBitcoinAirqt_a-moc_sendcoinsdialog.obj: qt/moc_sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_sendcoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsdialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_sendcoinsdialog.obj `if test -f 'qt/moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsdialog.cpp' object='qt/libBitcoinAirqt_a-moc_sendcoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_sendcoinsdialog.obj `if test -f 'qt/moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsdialog.cpp'; fi`

qt/libBitcoinAirqt_a-moc_sendcoinsentry.o: qt/moc_sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_sendcoinsentry.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsentry.Tpo -c -o qt/libBitcoinAirqt_a-moc_sendcoinsentry.o `test -f 'qt/moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsentry.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsentry.cpp' object='qt/libBitcoinAirqt_a-moc_sendcoinsentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_sendcoinsentry.o `test -f 'qt/moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsentry.cpp

qt/libBitcoinAirqt_a-moc_sendcoinsentry.obj: qt/moc_sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_sendcoinsentry.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsentry.Tpo -c -o qt/libBitcoinAirqt_a-moc_sendcoinsentry.obj `if test -f 'qt/moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsentry.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsentry.cpp' object='qt/libBitcoinAirqt_a-moc_sendcoinsentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_sendcoinsentry.obj `if test -f 'qt/moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsentry.cpp'; fi`

qt/libBitcoinAirqt_a-moc_signverifymessagedialog.o: qt/moc_signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_signverifymessagedialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_signverifymessagedialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_signverifymessagedialog.o `test -f 'qt/moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/moc_signverifymessagedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_signverifymessagedialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/moc_signverifymessagedialog.cpp' object='qt/libBitcoinAirqt_a-moc_signverifymessagedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_signverifymessagedialog.o `test -f 'qt/moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/moc_signverifymessagedialog.cpp

qt/libBitcoinAirqt_a-moc_signverifymessagedialog.obj: qt/moc_signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_signverifymessagedialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_signverifymessagedialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_signverifymessagedialog.obj `if test -f 'qt/moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_signverifymessagedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_signverifymessagedialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/moc_signverifymessagedialog.cpp' object='qt/libBitcoinAirqt_a-moc_signverifymessagedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_signverifymessagedialog.obj `if test -f 'qt/moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_signverifymessagedialog.cpp'; fi`

qt/libBitcoinAirqt_a-moc_splashscreen.o: qt/moc_splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_splashscreen.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_splashscreen.Tpo -c -o qt/libBitcoinAirqt_a-moc_splashscreen.o `test -f 'qt/moc_splashscreen.cpp' || echo '$(srcdir)/'`qt/moc_splashscreen.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_splashscreen.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_splashscreen.Po
#	$(AM_V_CXX)source='qt/moc_splashscreen.cpp' object='qt/libBitcoinAirqt_a-moc_splashscreen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_splashscreen.o `test -f 'qt/moc_splashscreen.cpp' || echo '$(srcdir)/'`qt/moc_splashscreen.cpp

qt/libBitcoinAirqt_a-moc_splashscreen.obj: qt/moc_splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_splashscreen.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_splashscreen.Tpo -c -o qt/libBitcoinAirqt_a-moc_splashscreen.obj `if test -f 'qt/moc_splashscreen.cpp'; then $(CYGPATH_W) 'qt/moc_splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_splashscreen.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_splashscreen.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_splashscreen.Po
#	$(AM_V_CXX)source='qt/moc_splashscreen.cpp' object='qt/libBitcoinAirqt_a-moc_splashscreen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_splashscreen.obj `if test -f 'qt/moc_splashscreen.cpp'; then $(CYGPATH_W) 'qt/moc_splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_splashscreen.cpp'; fi`

qt/libBitcoinAirqt_a-moc_transactiondesc.o: qt/moc_transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_transactiondesc.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondesc.Tpo -c -o qt/libBitcoinAirqt_a-moc_transactiondesc.o `test -f 'qt/moc_transactiondesc.cpp' || echo '$(srcdir)/'`qt/moc_transactiondesc.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondesc.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondesc.Po
#	$(AM_V_CXX)source='qt/moc_transactiondesc.cpp' object='qt/libBitcoinAirqt_a-moc_transactiondesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_transactiondesc.o `test -f 'qt/moc_transactiondesc.cpp' || echo '$(srcdir)/'`qt/moc_transactiondesc.cpp

qt/libBitcoinAirqt_a-moc_transactiondesc.obj: qt/moc_transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_transactiondesc.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondesc.Tpo -c -o qt/libBitcoinAirqt_a-moc_transactiondesc.obj `if test -f 'qt/moc_transactiondesc.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondesc.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondesc.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondesc.Po
#	$(AM_V_CXX)source='qt/moc_transactiondesc.cpp' object='qt/libBitcoinAirqt_a-moc_transactiondesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_transactiondesc.obj `if test -f 'qt/moc_transactiondesc.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondesc.cpp'; fi`

qt/libBitcoinAirqt_a-moc_transactiondescdialog.o: qt/moc_transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_transactiondescdialog.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondescdialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_transactiondescdialog.o `test -f 'qt/moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/moc_transactiondescdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondescdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/moc_transactiondescdialog.cpp' object='qt/libBitcoinAirqt_a-moc_transactiondescdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_transactiondescdialog.o `test -f 'qt/moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/moc_transactiondescdialog.cpp

qt/libBitcoinAirqt_a-moc_transactiondescdialog.obj: qt/moc_transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_transactiondescdialog.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondescdialog.Tpo -c -o qt/libBitcoinAirqt_a-moc_transactiondescdialog.obj `if test -f 'qt/moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondescdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondescdialog.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/moc_transactiondescdialog.cpp' object='qt/libBitcoinAirqt_a-moc_transactiondescdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_transactiondescdialog.obj `if test -f 'qt/moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondescdialog.cpp'; fi`

qt/libBitcoinAirqt_a-moc_transactionfilterproxy.o: qt/moc_transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_transactionfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionfilterproxy.Tpo -c -o qt/libBitcoinAirqt_a-moc_transactionfilterproxy.o `test -f 'qt/moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_transactionfilterproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionfilterproxy.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/moc_transactionfilterproxy.cpp' object='qt/libBitcoinAirqt_a-moc_transactionfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_transactionfilterproxy.o `test -f 'qt/moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_transactionfilterproxy.cpp

qt/libBitcoinAirqt_a-moc_transactionfilterproxy.obj: qt/moc_transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_transactionfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionfilterproxy.Tpo -c -o qt/libBitcoinAirqt_a-moc_transactionfilterproxy.obj `if test -f 'qt/moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionfilterproxy.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/moc_transactionfilterproxy.cpp' object='qt/libBitcoinAirqt_a-moc_transactionfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_transactionfilterproxy.obj `if test -f 'qt/moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionfilterproxy.cpp'; fi`

qt/libBitcoinAirqt_a-moc_transactiontablemodel.o: qt/moc_transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_transactiontablemodel.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiontablemodel.Tpo -c -o qt/libBitcoinAirqt_a-moc_transactiontablemodel.o `test -f 'qt/moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/moc_transactiontablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiontablemodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/moc_transactiontablemodel.cpp' object='qt/libBitcoinAirqt_a-moc_transactiontablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_transactiontablemodel.o `test -f 'qt/moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/moc_transactiontablemodel.cpp

qt/libBitcoinAirqt_a-moc_transactiontablemodel.obj: qt/moc_transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_transactiontablemodel.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiontablemodel.Tpo -c -o qt/libBitcoinAirqt_a-moc_transactiontablemodel.obj `if test -f 'qt/moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiontablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiontablemodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/moc_transactiontablemodel.cpp' object='qt/libBitcoinAirqt_a-moc_transactiontablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_transactiontablemodel.obj `if test -f 'qt/moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiontablemodel.cpp'; fi`

qt/libBitcoinAirqt_a-moc_transactionview.o: qt/moc_transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_transactionview.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionview.Tpo -c -o qt/libBitcoinAirqt_a-moc_transactionview.o `test -f 'qt/moc_transactionview.cpp' || echo '$(srcdir)/'`qt/moc_transactionview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionview.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionview.Po
#	$(AM_V_CXX)source='qt/moc_transactionview.cpp' object='qt/libBitcoinAirqt_a-moc_transactionview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_transactionview.o `test -f 'qt/moc_transactionview.cpp' || echo '$(srcdir)/'`qt/moc_transactionview.cpp

qt/libBitcoinAirqt_a-moc_transactionview.obj: qt/moc_transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_transactionview.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionview.Tpo -c -o qt/libBitcoinAirqt_a-moc_transactionview.obj `if test -f 'qt/moc_transactionview.cpp'; then $(CYGPATH_W) 'qt/moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionview.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionview.Po
#	$(AM_V_CXX)source='qt/moc_transactionview.cpp' object='qt/libBitcoinAirqt_a-moc_transactionview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_transactionview.obj `if test -f 'qt/moc_transactionview.cpp'; then $(CYGPATH_W) 'qt/moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionview.cpp'; fi`

qt/libBitcoinAirqt_a-moc_walletframe.o: qt/moc_walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_walletframe.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletframe.Tpo -c -o qt/libBitcoinAirqt_a-moc_walletframe.o `test -f 'qt/moc_walletframe.cpp' || echo '$(srcdir)/'`qt/moc_walletframe.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletframe.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletframe.Po
#	$(AM_V_CXX)source='qt/moc_walletframe.cpp' object='qt/libBitcoinAirqt_a-moc_walletframe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_walletframe.o `test -f 'qt/moc_walletframe.cpp' || echo '$(srcdir)/'`qt/moc_walletframe.cpp

qt/libBitcoinAirqt_a-moc_walletframe.obj: qt/moc_walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_walletframe.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletframe.Tpo -c -o qt/libBitcoinAirqt_a-moc_walletframe.obj `if test -f 'qt/moc_walletframe.cpp'; then $(CYGPATH_W) 'qt/moc_walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletframe.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletframe.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletframe.Po
#	$(AM_V_CXX)source='qt/moc_walletframe.cpp' object='qt/libBitcoinAirqt_a-moc_walletframe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_walletframe.obj `if test -f 'qt/moc_walletframe.cpp'; then $(CYGPATH_W) 'qt/moc_walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletframe.cpp'; fi`

qt/libBitcoinAirqt_a-moc_walletmodel.o: qt/moc_walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_walletmodel.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletmodel.Tpo -c -o qt/libBitcoinAirqt_a-moc_walletmodel.o `test -f 'qt/moc_walletmodel.cpp' || echo '$(srcdir)/'`qt/moc_walletmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletmodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletmodel.Po
#	$(AM_V_CXX)source='qt/moc_walletmodel.cpp' object='qt/libBitcoinAirqt_a-moc_walletmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_walletmodel.o `test -f 'qt/moc_walletmodel.cpp' || echo '$(srcdir)/'`qt/moc_walletmodel.cpp

qt/libBitcoinAirqt_a-moc_walletmodel.obj: qt/moc_walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_walletmodel.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletmodel.Tpo -c -o qt/libBitcoinAirqt_a-moc_walletmodel.obj `if test -f 'qt/moc_walletmodel.cpp'; then $(CYGPATH_W) 'qt/moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletmodel.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletmodel.Po
#	$(AM_V_CXX)source='qt/moc_walletmodel.cpp' object='qt/libBitcoinAirqt_a-moc_walletmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_walletmodel.obj `if test -f 'qt/moc_walletmodel.cpp'; then $(CYGPATH_W) 'qt/moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletmodel.cpp'; fi`

qt/libBitcoinAirqt_a-moc_walletview.o: qt/moc_walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_walletview.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletview.Tpo -c -o qt/libBitcoinAirqt_a-moc_walletview.o `test -f 'qt/moc_walletview.cpp' || echo '$(srcdir)/'`qt/moc_walletview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletview.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletview.Po
#	$(AM_V_CXX)source='qt/moc_walletview.cpp' object='qt/libBitcoinAirqt_a-moc_walletview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_walletview.o `test -f 'qt/moc_walletview.cpp' || echo '$(srcdir)/'`qt/moc_walletview.cpp

qt/libBitcoinAirqt_a-moc_walletview.obj: qt/moc_walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_walletview.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletview.Tpo -c -o qt/libBitcoinAirqt_a-moc_walletview.obj `if test -f 'qt/moc_walletview.cpp'; then $(CYGPATH_W) 'qt/moc_walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletview.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletview.Po
#	$(AM_V_CXX)source='qt/moc_walletview.cpp' object='qt/libBitcoinAirqt_a-moc_walletview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_walletview.obj `if test -f 'qt/moc_walletview.cpp'; then $(CYGPATH_W) 'qt/moc_walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletview.cpp'; fi`

qt/libBitcoinAirqt_a-moc_walletstack.o: qt/moc_walletstack.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_walletstack.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletstack.Tpo -c -o qt/libBitcoinAirqt_a-moc_walletstack.o `test -f 'qt/moc_walletstack.cpp' || echo '$(srcdir)/'`qt/moc_walletstack.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletstack.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletstack.Po
#	$(AM_V_CXX)source='qt/moc_walletstack.cpp' object='qt/libBitcoinAirqt_a-moc_walletstack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_walletstack.o `test -f 'qt/moc_walletstack.cpp' || echo '$(srcdir)/'`qt/moc_walletstack.cpp

qt/libBitcoinAirqt_a-moc_walletstack.obj: qt/moc_walletstack.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-moc_walletstack.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletstack.Tpo -c -o qt/libBitcoinAirqt_a-moc_walletstack.obj `if test -f 'qt/moc_walletstack.cpp'; then $(CYGPATH_W) 'qt/moc_walletstack.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletstack.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletstack.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletstack.Po
#	$(AM_V_CXX)source='qt/moc_walletstack.cpp' object='qt/libBitcoinAirqt_a-moc_walletstack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-moc_walletstack.obj `if test -f 'qt/moc_walletstack.cpp'; then $(CYGPATH_W) 'qt/moc_walletstack.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletstack.cpp'; fi`

qt/libBitcoinAirqt_a-qrc_bitcoin.o: qt/qrc_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-qrc_bitcoin.o -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-qrc_bitcoin.Tpo -c -o qt/libBitcoinAirqt_a-qrc_bitcoin.o `test -f 'qt/qrc_bitcoin.cpp' || echo '$(srcdir)/'`qt/qrc_bitcoin.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-qrc_bitcoin.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-qrc_bitcoin.Po
#	$(AM_V_CXX)source='qt/qrc_bitcoin.cpp' object='qt/libBitcoinAirqt_a-qrc_bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-qrc_bitcoin.o `test -f 'qt/qrc_bitcoin.cpp' || echo '$(srcdir)/'`qt/qrc_bitcoin.cpp

qt/libBitcoinAirqt_a-qrc_bitcoin.obj: qt/qrc_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/libBitcoinAirqt_a-qrc_bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/libBitcoinAirqt_a-qrc_bitcoin.Tpo -c -o qt/libBitcoinAirqt_a-qrc_bitcoin.obj `if test -f 'qt/qrc_bitcoin.cpp'; then $(CYGPATH_W) 'qt/qrc_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/libBitcoinAirqt_a-qrc_bitcoin.Tpo qt/$(DEPDIR)/libBitcoinAirqt_a-qrc_bitcoin.Po
#	$(AM_V_CXX)source='qt/qrc_bitcoin.cpp' object='qt/libBitcoinAirqt_a-qrc_bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libBitcoinAirqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libBitcoinAirqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/libBitcoinAirqt_a-qrc_bitcoin.obj `if test -f 'qt/qrc_bitcoin.cpp'; then $(CYGPATH_W) 'qt/qrc_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitcoin.cpp'; fi`

qt/BitcoinAir_qt-bitcoin.o: qt/bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/BitcoinAir_qt-bitcoin.o -MD -MP -MF qt/$(DEPDIR)/BitcoinAir_qt-bitcoin.Tpo -c -o qt/BitcoinAir_qt-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/BitcoinAir_qt-bitcoin.Tpo qt/$(DEPDIR)/BitcoinAir_qt-bitcoin.Po
#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/BitcoinAir_qt-bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/BitcoinAir_qt-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp

qt/BitcoinAir_qt-bitcoin.obj: qt/bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/BitcoinAir_qt-bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/BitcoinAir_qt-bitcoin.Tpo -c -o qt/BitcoinAir_qt-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/BitcoinAir_qt-bitcoin.Tpo qt/$(DEPDIR)/BitcoinAir_qt-bitcoin.Po
#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/BitcoinAir_qt-bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/BitcoinAir_qt-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`

qt/BitcoinAir_qt-qrcodedialog.o: qt/qrcodedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/BitcoinAir_qt-qrcodedialog.o -MD -MP -MF qt/$(DEPDIR)/BitcoinAir_qt-qrcodedialog.Tpo -c -o qt/BitcoinAir_qt-qrcodedialog.o `test -f 'qt/qrcodedialog.cpp' || echo '$(srcdir)/'`qt/qrcodedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/BitcoinAir_qt-qrcodedialog.Tpo qt/$(DEPDIR)/BitcoinAir_qt-qrcodedialog.Po
#	$(AM_V_CXX)source='qt/qrcodedialog.cpp' object='qt/BitcoinAir_qt-qrcodedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/BitcoinAir_qt-qrcodedialog.o `test -f 'qt/qrcodedialog.cpp' || echo '$(srcdir)/'`qt/qrcodedialog.cpp

qt/BitcoinAir_qt-qrcodedialog.obj: qt/qrcodedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/BitcoinAir_qt-qrcodedialog.obj -MD -MP -MF qt/$(DEPDIR)/BitcoinAir_qt-qrcodedialog.Tpo -c -o qt/BitcoinAir_qt-qrcodedialog.obj `if test -f 'qt/qrcodedialog.cpp'; then $(CYGPATH_W) 'qt/qrcodedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrcodedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/BitcoinAir_qt-qrcodedialog.Tpo qt/$(DEPDIR)/BitcoinAir_qt-qrcodedialog.Po
#	$(AM_V_CXX)source='qt/qrcodedialog.cpp' object='qt/BitcoinAir_qt-qrcodedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/BitcoinAir_qt-qrcodedialog.obj `if test -f 'qt/qrcodedialog.cpp'; then $(CYGPATH_W) 'qt/qrcodedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrcodedialog.cpp'; fi`

qt/test/test_BitcoinAir_qt-test_main.o: qt/test/test_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/test_BitcoinAir_qt-test_main.o -MD -MP -MF qt/test/$(DEPDIR)/test_BitcoinAir_qt-test_main.Tpo -c -o qt/test/test_BitcoinAir_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/test_BitcoinAir_qt-test_main.Tpo qt/test/$(DEPDIR)/test_BitcoinAir_qt-test_main.Po
#	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/test_BitcoinAir_qt-test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/test_BitcoinAir_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp

qt/test/test_BitcoinAir_qt-test_main.obj: qt/test/test_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/test_BitcoinAir_qt-test_main.obj -MD -MP -MF qt/test/$(DEPDIR)/test_BitcoinAir_qt-test_main.Tpo -c -o qt/test/test_BitcoinAir_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/test_BitcoinAir_qt-test_main.Tpo qt/test/$(DEPDIR)/test_BitcoinAir_qt-test_main.Po
#	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/test_BitcoinAir_qt-test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/test_BitcoinAir_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`

qt/test/test_BitcoinAir_qt-uritests.o: qt/test/uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/test_BitcoinAir_qt-uritests.o -MD -MP -MF qt/test/$(DEPDIR)/test_BitcoinAir_qt-uritests.Tpo -c -o qt/test/test_BitcoinAir_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/test_BitcoinAir_qt-uritests.Tpo qt/test/$(DEPDIR)/test_BitcoinAir_qt-uritests.Po
#	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/test_BitcoinAir_qt-uritests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/test_BitcoinAir_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp

qt/test/test_BitcoinAir_qt-uritests.obj: qt/test/uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/test_BitcoinAir_qt-uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/test_BitcoinAir_qt-uritests.Tpo -c -o qt/test/test_BitcoinAir_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/test_BitcoinAir_qt-uritests.Tpo qt/test/$(DEPDIR)/test_BitcoinAir_qt-uritests.Po
#	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/test_BitcoinAir_qt-uritests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/test_BitcoinAir_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`

qt/test/test_BitcoinAir_qt-moc_uritests.o: qt/test/moc_uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/test_BitcoinAir_qt-moc_uritests.o -MD -MP -MF qt/test/$(DEPDIR)/test_BitcoinAir_qt-moc_uritests.Tpo -c -o qt/test/test_BitcoinAir_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/test_BitcoinAir_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/test_BitcoinAir_qt-moc_uritests.Po
#	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/test_BitcoinAir_qt-moc_uritests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/test_BitcoinAir_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp

qt/test/test_BitcoinAir_qt-moc_uritests.obj: qt/test/moc_uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/test_BitcoinAir_qt-moc_uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/test_BitcoinAir_qt-moc_uritests.Tpo -c -o qt/test/test_BitcoinAir_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/test_BitcoinAir_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/test_BitcoinAir_qt-moc_uritests.Po
#	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/test_BitcoinAir_qt-moc_uritests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_BitcoinAir_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/test_BitcoinAir_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`

test/test_BitcoinAir-allocator_tests.o: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-allocator_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-allocator_tests.Tpo -c -o test/test_BitcoinAir-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-allocator_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_BitcoinAir-allocator_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp

test/test_BitcoinAir-allocator_tests.obj: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-allocator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-allocator_tests.Tpo -c -o test/test_BitcoinAir-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-allocator_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_BitcoinAir-allocator_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`

test/test_BitcoinAir-base32_tests.o: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-base32_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-base32_tests.Tpo -c -o test/test_BitcoinAir-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-base32_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_BitcoinAir-base32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp

test/test_BitcoinAir-base32_tests.obj: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-base32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-base32_tests.Tpo -c -o test/test_BitcoinAir-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-base32_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_BitcoinAir-base32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`

test/test_BitcoinAir-base58_tests.o: test/base58_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-base58_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-base58_tests.Tpo -c -o test/test_BitcoinAir-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-base58_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-base58_tests.Po
#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_BitcoinAir-base58_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp

test/test_BitcoinAir-base58_tests.obj: test/base58_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-base58_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-base58_tests.Tpo -c -o test/test_BitcoinAir-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-base58_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-base58_tests.Po
#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_BitcoinAir-base58_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`

test/test_BitcoinAir-base64_tests.o: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-base64_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-base64_tests.Tpo -c -o test/test_BitcoinAir-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-base64_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_BitcoinAir-base64_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp

test/test_BitcoinAir-base64_tests.obj: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-base64_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-base64_tests.Tpo -c -o test/test_BitcoinAir-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-base64_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_BitcoinAir-base64_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`

test/test_BitcoinAir-bignum_tests.o: test/bignum_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-bignum_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-bignum_tests.Tpo -c -o test/test_BitcoinAir-bignum_tests.o `test -f 'test/bignum_tests.cpp' || echo '$(srcdir)/'`test/bignum_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-bignum_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-bignum_tests.Po
#	$(AM_V_CXX)source='test/bignum_tests.cpp' object='test/test_BitcoinAir-bignum_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-bignum_tests.o `test -f 'test/bignum_tests.cpp' || echo '$(srcdir)/'`test/bignum_tests.cpp

test/test_BitcoinAir-bignum_tests.obj: test/bignum_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-bignum_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-bignum_tests.Tpo -c -o test/test_BitcoinAir-bignum_tests.obj `if test -f 'test/bignum_tests.cpp'; then $(CYGPATH_W) 'test/bignum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bignum_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-bignum_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-bignum_tests.Po
#	$(AM_V_CXX)source='test/bignum_tests.cpp' object='test/test_BitcoinAir-bignum_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-bignum_tests.obj `if test -f 'test/bignum_tests.cpp'; then $(CYGPATH_W) 'test/bignum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bignum_tests.cpp'; fi`

test/test_BitcoinAir-canonical_tests.o: test/canonical_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-canonical_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-canonical_tests.Tpo -c -o test/test_BitcoinAir-canonical_tests.o `test -f 'test/canonical_tests.cpp' || echo '$(srcdir)/'`test/canonical_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-canonical_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-canonical_tests.Po
#	$(AM_V_CXX)source='test/canonical_tests.cpp' object='test/test_BitcoinAir-canonical_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-canonical_tests.o `test -f 'test/canonical_tests.cpp' || echo '$(srcdir)/'`test/canonical_tests.cpp

test/test_BitcoinAir-canonical_tests.obj: test/canonical_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-canonical_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-canonical_tests.Tpo -c -o test/test_BitcoinAir-canonical_tests.obj `if test -f 'test/canonical_tests.cpp'; then $(CYGPATH_W) 'test/canonical_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/canonical_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-canonical_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-canonical_tests.Po
#	$(AM_V_CXX)source='test/canonical_tests.cpp' object='test/test_BitcoinAir-canonical_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-canonical_tests.obj `if test -f 'test/canonical_tests.cpp'; then $(CYGPATH_W) 'test/canonical_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/canonical_tests.cpp'; fi`

test/test_BitcoinAir-checkblock_tests.o: test/checkblock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-checkblock_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-checkblock_tests.Tpo -c -o test/test_BitcoinAir-checkblock_tests.o `test -f 'test/checkblock_tests.cpp' || echo '$(srcdir)/'`test/checkblock_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-checkblock_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-checkblock_tests.Po
#	$(AM_V_CXX)source='test/checkblock_tests.cpp' object='test/test_BitcoinAir-checkblock_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-checkblock_tests.o `test -f 'test/checkblock_tests.cpp' || echo '$(srcdir)/'`test/checkblock_tests.cpp

test/test_BitcoinAir-checkblock_tests.obj: test/checkblock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-checkblock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-checkblock_tests.Tpo -c -o test/test_BitcoinAir-checkblock_tests.obj `if test -f 'test/checkblock_tests.cpp'; then $(CYGPATH_W) 'test/checkblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkblock_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-checkblock_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-checkblock_tests.Po
#	$(AM_V_CXX)source='test/checkblock_tests.cpp' object='test/test_BitcoinAir-checkblock_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-checkblock_tests.obj `if test -f 'test/checkblock_tests.cpp'; then $(CYGPATH_W) 'test/checkblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkblock_tests.cpp'; fi`

test/test_BitcoinAir-Checkpoints_tests.o: test/Checkpoints_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-Checkpoints_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-Checkpoints_tests.Tpo -c -o test/test_BitcoinAir-Checkpoints_tests.o `test -f 'test/Checkpoints_tests.cpp' || echo '$(srcdir)/'`test/Checkpoints_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-Checkpoints_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-Checkpoints_tests.Po
#	$(AM_V_CXX)source='test/Checkpoints_tests.cpp' object='test/test_BitcoinAir-Checkpoints_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-Checkpoints_tests.o `test -f 'test/Checkpoints_tests.cpp' || echo '$(srcdir)/'`test/Checkpoints_tests.cpp

test/test_BitcoinAir-Checkpoints_tests.obj: test/Checkpoints_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-Checkpoints_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-Checkpoints_tests.Tpo -c -o test/test_BitcoinAir-Checkpoints_tests.obj `if test -f 'test/Checkpoints_tests.cpp'; then $(CYGPATH_W) 'test/Checkpoints_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/Checkpoints_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-Checkpoints_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-Checkpoints_tests.Po
#	$(AM_V_CXX)source='test/Checkpoints_tests.cpp' object='test/test_BitcoinAir-Checkpoints_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-Checkpoints_tests.obj `if test -f 'test/Checkpoints_tests.cpp'; then $(CYGPATH_W) 'test/Checkpoints_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/Checkpoints_tests.cpp'; fi`

test/test_BitcoinAir-compress_tests.o: test/compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-compress_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-compress_tests.Tpo -c -o test/test_BitcoinAir-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-compress_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-compress_tests.Po
#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_BitcoinAir-compress_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp

test/test_BitcoinAir-compress_tests.obj: test/compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-compress_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-compress_tests.Tpo -c -o test/test_BitcoinAir-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-compress_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-compress_tests.Po
#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_BitcoinAir-compress_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`

test/test_BitcoinAir-DoS_tests.o: test/DoS_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-DoS_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-DoS_tests.Tpo -c -o test/test_BitcoinAir-DoS_tests.o `test -f 'test/DoS_tests.cpp' || echo '$(srcdir)/'`test/DoS_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-DoS_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-DoS_tests.Po
#	$(AM_V_CXX)source='test/DoS_tests.cpp' object='test/test_BitcoinAir-DoS_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-DoS_tests.o `test -f 'test/DoS_tests.cpp' || echo '$(srcdir)/'`test/DoS_tests.cpp

test/test_BitcoinAir-DoS_tests.obj: test/DoS_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-DoS_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-DoS_tests.Tpo -c -o test/test_BitcoinAir-DoS_tests.obj `if test -f 'test/DoS_tests.cpp'; then $(CYGPATH_W) 'test/DoS_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DoS_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-DoS_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-DoS_tests.Po
#	$(AM_V_CXX)source='test/DoS_tests.cpp' object='test/test_BitcoinAir-DoS_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-DoS_tests.obj `if test -f 'test/DoS_tests.cpp'; then $(CYGPATH_W) 'test/DoS_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DoS_tests.cpp'; fi`

test/test_BitcoinAir-getarg_tests.o: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-getarg_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-getarg_tests.Tpo -c -o test/test_BitcoinAir-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-getarg_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_BitcoinAir-getarg_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp

test/test_BitcoinAir-getarg_tests.obj: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-getarg_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-getarg_tests.Tpo -c -o test/test_BitcoinAir-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-getarg_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_BitcoinAir-getarg_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`

test/test_BitcoinAir-key_tests.o: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-key_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-key_tests.Tpo -c -o test/test_BitcoinAir-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-key_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_BitcoinAir-key_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp

test/test_BitcoinAir-key_tests.obj: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-key_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-key_tests.Tpo -c -o test/test_BitcoinAir-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-key_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_BitcoinAir-key_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`

test/test_BitcoinAir-mruset_tests.o: test/mruset_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-mruset_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-mruset_tests.Tpo -c -o test/test_BitcoinAir-mruset_tests.o `test -f 'test/mruset_tests.cpp' || echo '$(srcdir)/'`test/mruset_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-mruset_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-mruset_tests.Po
#	$(AM_V_CXX)source='test/mruset_tests.cpp' object='test/test_BitcoinAir-mruset_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-mruset_tests.o `test -f 'test/mruset_tests.cpp' || echo '$(srcdir)/'`test/mruset_tests.cpp

test/test_BitcoinAir-mruset_tests.obj: test/mruset_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-mruset_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-mruset_tests.Tpo -c -o test/test_BitcoinAir-mruset_tests.obj `if test -f 'test/mruset_tests.cpp'; then $(CYGPATH_W) 'test/mruset_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mruset_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-mruset_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-mruset_tests.Po
#	$(AM_V_CXX)source='test/mruset_tests.cpp' object='test/test_BitcoinAir-mruset_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-mruset_tests.obj `if test -f 'test/mruset_tests.cpp'; then $(CYGPATH_W) 'test/mruset_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mruset_tests.cpp'; fi`

test/test_BitcoinAir-multisig_tests.o: test/multisig_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-multisig_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-multisig_tests.Tpo -c -o test/test_BitcoinAir-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-multisig_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-multisig_tests.Po
#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_BitcoinAir-multisig_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp

test/test_BitcoinAir-multisig_tests.obj: test/multisig_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-multisig_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-multisig_tests.Tpo -c -o test/test_BitcoinAir-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-multisig_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-multisig_tests.Po
#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_BitcoinAir-multisig_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`

test/test_BitcoinAir-netbase_tests.o: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-netbase_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-netbase_tests.Tpo -c -o test/test_BitcoinAir-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-netbase_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_BitcoinAir-netbase_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp

test/test_BitcoinAir-netbase_tests.obj: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-netbase_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-netbase_tests.Tpo -c -o test/test_BitcoinAir-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-netbase_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_BitcoinAir-netbase_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`

test/test_BitcoinAir-pmt_tests.o: test/pmt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-pmt_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-pmt_tests.Tpo -c -o test/test_BitcoinAir-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-pmt_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-pmt_tests.Po
#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_BitcoinAir-pmt_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp

test/test_BitcoinAir-pmt_tests.obj: test/pmt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-pmt_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-pmt_tests.Tpo -c -o test/test_BitcoinAir-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-pmt_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-pmt_tests.Po
#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_BitcoinAir-pmt_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`

test/test_BitcoinAir-rpc_tests.o: test/rpc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-rpc_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-rpc_tests.Tpo -c -o test/test_BitcoinAir-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-rpc_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-rpc_tests.Po
#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_BitcoinAir-rpc_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp

test/test_BitcoinAir-rpc_tests.obj: test/rpc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-rpc_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-rpc_tests.Tpo -c -o test/test_BitcoinAir-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-rpc_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-rpc_tests.Po
#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_BitcoinAir-rpc_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`

test/test_BitcoinAir-script_P2SH_tests.o: test/script_P2SH_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-script_P2SH_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-script_P2SH_tests.Tpo -c -o test/test_BitcoinAir-script_P2SH_tests.o `test -f 'test/script_P2SH_tests.cpp' || echo '$(srcdir)/'`test/script_P2SH_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-script_P2SH_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-script_P2SH_tests.Po
#	$(AM_V_CXX)source='test/script_P2SH_tests.cpp' object='test/test_BitcoinAir-script_P2SH_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-script_P2SH_tests.o `test -f 'test/script_P2SH_tests.cpp' || echo '$(srcdir)/'`test/script_P2SH_tests.cpp

test/test_BitcoinAir-script_P2SH_tests.obj: test/script_P2SH_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-script_P2SH_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-script_P2SH_tests.Tpo -c -o test/test_BitcoinAir-script_P2SH_tests.obj `if test -f 'test/script_P2SH_tests.cpp'; then $(CYGPATH_W) 'test/script_P2SH_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_P2SH_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-script_P2SH_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-script_P2SH_tests.Po
#	$(AM_V_CXX)source='test/script_P2SH_tests.cpp' object='test/test_BitcoinAir-script_P2SH_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-script_P2SH_tests.obj `if test -f 'test/script_P2SH_tests.cpp'; then $(CYGPATH_W) 'test/script_P2SH_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_P2SH_tests.cpp'; fi`

test/test_BitcoinAir-script_tests.o: test/script_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-script_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-script_tests.Tpo -c -o test/test_BitcoinAir-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-script_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-script_tests.Po
#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_BitcoinAir-script_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp

test/test_BitcoinAir-script_tests.obj: test/script_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-script_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-script_tests.Tpo -c -o test/test_BitcoinAir-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-script_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-script_tests.Po
#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_BitcoinAir-script_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`

test/test_BitcoinAir-serialize_tests.o: test/serialize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-serialize_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-serialize_tests.Tpo -c -o test/test_BitcoinAir-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-serialize_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-serialize_tests.Po
#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_BitcoinAir-serialize_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp

test/test_BitcoinAir-serialize_tests.obj: test/serialize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-serialize_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-serialize_tests.Tpo -c -o test/test_BitcoinAir-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-serialize_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-serialize_tests.Po
#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_BitcoinAir-serialize_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`

test/test_BitcoinAir-sigopcount_tests.o: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-sigopcount_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-sigopcount_tests.Tpo -c -o test/test_BitcoinAir-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-sigopcount_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_BitcoinAir-sigopcount_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp

test/test_BitcoinAir-sigopcount_tests.obj: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-sigopcount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-sigopcount_tests.Tpo -c -o test/test_BitcoinAir-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-sigopcount_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_BitcoinAir-sigopcount_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`

test/test_BitcoinAir-test_bitcoin.o: test/test_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-test_bitcoin.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-test_bitcoin.Tpo -c -o test/test_BitcoinAir-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-test_bitcoin.Tpo test/$(DEPDIR)/test_BitcoinAir-test_bitcoin.Po
#	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/test_BitcoinAir-test_bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp

test/test_BitcoinAir-test_bitcoin.obj: test/test_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-test_bitcoin.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-test_bitcoin.Tpo -c -o test/test_BitcoinAir-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-test_bitcoin.Tpo test/$(DEPDIR)/test_BitcoinAir-test_bitcoin.Po
#	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/test_BitcoinAir-test_bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`

test/test_BitcoinAir-transaction_tests.o: test/transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-transaction_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-transaction_tests.Tpo -c -o test/test_BitcoinAir-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-transaction_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-transaction_tests.Po
#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_BitcoinAir-transaction_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp

test/test_BitcoinAir-transaction_tests.obj: test/transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-transaction_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-transaction_tests.Tpo -c -o test/test_BitcoinAir-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-transaction_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-transaction_tests.Po
#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_BitcoinAir-transaction_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`

test/test_BitcoinAir-uint160_tests.o: test/uint160_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-uint160_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-uint160_tests.Tpo -c -o test/test_BitcoinAir-uint160_tests.o `test -f 'test/uint160_tests.cpp' || echo '$(srcdir)/'`test/uint160_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-uint160_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-uint160_tests.Po
#	$(AM_V_CXX)source='test/uint160_tests.cpp' object='test/test_BitcoinAir-uint160_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-uint160_tests.o `test -f 'test/uint160_tests.cpp' || echo '$(srcdir)/'`test/uint160_tests.cpp

test/test_BitcoinAir-uint160_tests.obj: test/uint160_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-uint160_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-uint160_tests.Tpo -c -o test/test_BitcoinAir-uint160_tests.obj `if test -f 'test/uint160_tests.cpp'; then $(CYGPATH_W) 'test/uint160_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint160_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-uint160_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-uint160_tests.Po
#	$(AM_V_CXX)source='test/uint160_tests.cpp' object='test/test_BitcoinAir-uint160_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-uint160_tests.obj `if test -f 'test/uint160_tests.cpp'; then $(CYGPATH_W) 'test/uint160_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint160_tests.cpp'; fi`

test/test_BitcoinAir-uint256_tests.o: test/uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-uint256_tests.Tpo -c -o test/test_BitcoinAir-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-uint256_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-uint256_tests.Po
#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_BitcoinAir-uint256_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp

test/test_BitcoinAir-uint256_tests.obj: test/uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-uint256_tests.Tpo -c -o test/test_BitcoinAir-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-uint256_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-uint256_tests.Po
#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_BitcoinAir-uint256_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`

test/test_BitcoinAir-util_tests.o: test/util_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-util_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-util_tests.Tpo -c -o test/test_BitcoinAir-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-util_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-util_tests.Po
#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_BitcoinAir-util_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp

test/test_BitcoinAir-util_tests.obj: test/util_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-util_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-util_tests.Tpo -c -o test/test_BitcoinAir-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-util_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-util_tests.Po
#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_BitcoinAir-util_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`

test/test_BitcoinAir-accounting_tests.o: test/accounting_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-accounting_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-accounting_tests.Tpo -c -o test/test_BitcoinAir-accounting_tests.o `test -f 'test/accounting_tests.cpp' || echo '$(srcdir)/'`test/accounting_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-accounting_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-accounting_tests.Po
#	$(AM_V_CXX)source='test/accounting_tests.cpp' object='test/test_BitcoinAir-accounting_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-accounting_tests.o `test -f 'test/accounting_tests.cpp' || echo '$(srcdir)/'`test/accounting_tests.cpp

test/test_BitcoinAir-accounting_tests.obj: test/accounting_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-accounting_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-accounting_tests.Tpo -c -o test/test_BitcoinAir-accounting_tests.obj `if test -f 'test/accounting_tests.cpp'; then $(CYGPATH_W) 'test/accounting_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/accounting_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-accounting_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-accounting_tests.Po
#	$(AM_V_CXX)source='test/accounting_tests.cpp' object='test/test_BitcoinAir-accounting_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-accounting_tests.obj `if test -f 'test/accounting_tests.cpp'; then $(CYGPATH_W) 'test/accounting_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/accounting_tests.cpp'; fi`

test/test_BitcoinAir-wallet_tests.o: test/wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-wallet_tests.o -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-wallet_tests.Tpo -c -o test/test_BitcoinAir-wallet_tests.o `test -f 'test/wallet_tests.cpp' || echo '$(srcdir)/'`test/wallet_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-wallet_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-wallet_tests.Po
#	$(AM_V_CXX)source='test/wallet_tests.cpp' object='test/test_BitcoinAir-wallet_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-wallet_tests.o `test -f 'test/wallet_tests.cpp' || echo '$(srcdir)/'`test/wallet_tests.cpp

test/test_BitcoinAir-wallet_tests.obj: test/wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_BitcoinAir-wallet_tests.obj -MD -MP -MF test/$(DEPDIR)/test_BitcoinAir-wallet_tests.Tpo -c -o test/test_BitcoinAir-wallet_tests.obj `if test -f 'test/wallet_tests.cpp'; then $(CYGPATH_W) 'test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/wallet_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_BitcoinAir-wallet_tests.Tpo test/$(DEPDIR)/test_BitcoinAir-wallet_tests.Po
#	$(AM_V_CXX)source='test/wallet_tests.cpp' object='test/test_BitcoinAir-wallet_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_BitcoinAir_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_BitcoinAir-wallet_tests.obj `if test -f 'test/wallet_tests.cpp'; then $(CYGPATH_W) 'test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/wallet_tests.cpp'; fi`

.mm.obj:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.mm.lo:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTOBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(LTOBJCXXCOMPILE) -c -o $@ $<

qt/BitcoinAir_qt-macdockiconhandler.o: qt/macdockiconhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/BitcoinAir_qt-macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/BitcoinAir_qt-macdockiconhandler.Tpo -c -o qt/BitcoinAir_qt-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/BitcoinAir_qt-macdockiconhandler.Tpo qt/$(DEPDIR)/BitcoinAir_qt-macdockiconhandler.Po
#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/BitcoinAir_qt-macdockiconhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/BitcoinAir_qt-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm

qt/BitcoinAir_qt-macdockiconhandler.obj: qt/macdockiconhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/BitcoinAir_qt-macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/BitcoinAir_qt-macdockiconhandler.Tpo -c -o qt/BitcoinAir_qt-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/BitcoinAir_qt-macdockiconhandler.Tpo qt/$(DEPDIR)/BitcoinAir_qt-macdockiconhandler.Po
#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/BitcoinAir_qt-macdockiconhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/BitcoinAir_qt-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`

qt/BitcoinAir_qt-macnotificationhandler.o: qt/macnotificationhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/BitcoinAir_qt-macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/BitcoinAir_qt-macnotificationhandler.Tpo -c -o qt/BitcoinAir_qt-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/BitcoinAir_qt-macnotificationhandler.Tpo qt/$(DEPDIR)/BitcoinAir_qt-macnotificationhandler.Po
#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/BitcoinAir_qt-macnotificationhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/BitcoinAir_qt-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm

qt/BitcoinAir_qt-macnotificationhandler.obj: qt/macnotificationhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/BitcoinAir_qt-macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/BitcoinAir_qt-macnotificationhandler.Tpo -c -o qt/BitcoinAir_qt-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/BitcoinAir_qt-macnotificationhandler.Tpo qt/$(DEPDIR)/BitcoinAir_qt-macnotificationhandler.Po
#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/BitcoinAir_qt-macnotificationhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_BitcoinAir_qt_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/BitcoinAir_qt-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf qt/.libs qt/_libs
	-rm -rf qt/test/.libs qt/test/_libs
	-rm -rf test/.libs test/_libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: 
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test/test_BitcoinAir.log: test/test_BitcoinAir$(EXEEXT)
	@p='test/test_BitcoinAir$(EXEEXT)'; \
	b='test/test_BitcoinAir'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
qt/test/test_BitcoinAir-qt.log: qt/test/test_BitcoinAir-qt$(EXEEXT)
	@p='qt/test/test_BitcoinAir-qt$(EXEEXT)'; \
	b='qt/test/test_BitcoinAir-qt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(LIBRARIES) bitcoin-config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f qt/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/$(am__dirstamp)
	-rm -f qt/res/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/res/$(am__dirstamp)
	-rm -f qt/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/test/$(am__dirstamp)
	-rm -f test/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/addrman.Po
	-rm -f ./$(DEPDIR)/alert.Po
	-rm -f ./$(DEPDIR)/bitcoin-cli.Po
	-rm -f ./$(DEPDIR)/bitcoind.Po
	-rm -f ./$(DEPDIR)/bloom.Po
	-rm -f ./$(DEPDIR)/checkpoints.Po
	-rm -f ./$(DEPDIR)/checkpointsync.Po
	-rm -f ./$(DEPDIR)/crypter.Po
	-rm -f ./$(DEPDIR)/db.Po
	-rm -f ./$(DEPDIR)/hash.Po
	-rm -f ./$(DEPDIR)/init.Po
	-rm -f ./$(DEPDIR)/kernel.Po
	-rm -f ./$(DEPDIR)/kernelrecord.Po
	-rm -f ./$(DEPDIR)/key.Po
	-rm -f ./$(DEPDIR)/keystore.Po
	-rm -f ./$(DEPDIR)/leveldbwrapper.Po
	-rm -f ./$(DEPDIR)/main.Po
	-rm -f ./$(DEPDIR)/net.Po
	-rm -f ./$(DEPDIR)/netbase.Po
	-rm -f ./$(DEPDIR)/noui.Po
	-rm -f ./$(DEPDIR)/protocol.Po
	-rm -f ./$(DEPDIR)/rpcblockchain.Po
	-rm -f ./$(DEPDIR)/rpcclient.Po
	-rm -f ./$(DEPDIR)/rpcdump.Po
	-rm -f ./$(DEPDIR)/rpcmining.Po
	-rm -f ./$(DEPDIR)/rpcminting.Po
	-rm -f ./$(DEPDIR)/rpcnet.Po
	-rm -f ./$(DEPDIR)/rpcprotocol.Po
	-rm -f ./$(DEPDIR)/rpcrawtransaction.Po
	-rm -f ./$(DEPDIR)/rpcserver.Po
	-rm -f ./$(DEPDIR)/rpcwallet.Po
	-rm -f ./$(DEPDIR)/script.Po
	-rm -f ./$(DEPDIR)/sync.Po
	-rm -f ./$(DEPDIR)/txdb.Po
	-rm -f ./$(DEPDIR)/util.Po
	-rm -f ./$(DEPDIR)/version.Po
	-rm -f ./$(DEPDIR)/wallet.Po
	-rm -f ./$(DEPDIR)/walletdb.Po
	-rm -f qt/$(DEPDIR)/BitcoinAir_qt-bitcoin.Po
	-rm -f qt/$(DEPDIR)/BitcoinAir_qt-macdockiconhandler.Po
	-rm -f qt/$(DEPDIR)/BitcoinAir_qt-macnotificationhandler.Po
	-rm -f qt/$(DEPDIR)/BitcoinAir_qt-qrcodedialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-aboutdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-addressbookpage.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-addresstablemodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-askpassphrasedialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoin.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinaddressvalidator.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinamountfield.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoingui.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinstrings.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinunits.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-clientmodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroldialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroltreewidget.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-csvmodelwriter.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-editaddressdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-guiutil.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-mintingfilterproxy.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-mintingtablemodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-mintingview.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_aboutdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addressbookpage.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addresstablemodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_askpassphrasedialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinamountfield.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoingui.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinunits.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_clientmodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroldialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroltreewidget.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_csvmodelwriter.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_editaddressdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_guiutil.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macdockiconhandler.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macnotificationhandler.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingfilterproxy.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingtablemodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingview.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_monitoreddatamapper.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigaddressentry.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisiginputentry.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_notificator.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsmodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_overviewpage.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_paymentserver.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qrcodedialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvalidatedlineedit.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvaluecombobox.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_rpcconsole.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsentry.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_signverifymessagedialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_splashscreen.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondesc.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondescdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionfilterproxy.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiontablemodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionview.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletframe.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletmodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletstack.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletview.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-monitoreddatamapper.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-multisigaddressentry.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-multisigdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-multisiginputentry.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-notificator.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-optionsdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-optionsmodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-overviewpage.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-paymentserver.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-qrc_bitcoin.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-qvalidatedlineedit.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-qvaluecombobox.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-rpcconsole.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsentry.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-signverifymessagedialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-splashscreen.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondesc.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondescdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-transactionfilterproxy.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-transactionrecord.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-transactiontablemodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-transactionview.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-walletframe.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-walletmodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-walletstack.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-walletview.Po
	-rm -f qt/test/$(DEPDIR)/test_BitcoinAir_qt-moc_uritests.Po
	-rm -f qt/test/$(DEPDIR)/test_BitcoinAir_qt-test_main.Po
	-rm -f qt/test/$(DEPDIR)/test_BitcoinAir_qt-uritests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-Checkpoints_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-DoS_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-accounting_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-allocator_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-base32_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-base58_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-base64_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-bignum_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-canonical_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-checkblock_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-compress_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-getarg_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-key_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-mruset_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-multisig_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-netbase_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-pmt_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-rpc_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-script_P2SH_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-script_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-serialize_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-sigopcount_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-test_bitcoin.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-transaction_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-uint160_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-uint256_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-util_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-wallet_tests.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/addrman.Po
	-rm -f ./$(DEPDIR)/alert.Po
	-rm -f ./$(DEPDIR)/bitcoin-cli.Po
	-rm -f ./$(DEPDIR)/bitcoind.Po
	-rm -f ./$(DEPDIR)/bloom.Po
	-rm -f ./$(DEPDIR)/checkpoints.Po
	-rm -f ./$(DEPDIR)/checkpointsync.Po
	-rm -f ./$(DEPDIR)/crypter.Po
	-rm -f ./$(DEPDIR)/db.Po
	-rm -f ./$(DEPDIR)/hash.Po
	-rm -f ./$(DEPDIR)/init.Po
	-rm -f ./$(DEPDIR)/kernel.Po
	-rm -f ./$(DEPDIR)/kernelrecord.Po
	-rm -f ./$(DEPDIR)/key.Po
	-rm -f ./$(DEPDIR)/keystore.Po
	-rm -f ./$(DEPDIR)/leveldbwrapper.Po
	-rm -f ./$(DEPDIR)/main.Po
	-rm -f ./$(DEPDIR)/net.Po
	-rm -f ./$(DEPDIR)/netbase.Po
	-rm -f ./$(DEPDIR)/noui.Po
	-rm -f ./$(DEPDIR)/protocol.Po
	-rm -f ./$(DEPDIR)/rpcblockchain.Po
	-rm -f ./$(DEPDIR)/rpcclient.Po
	-rm -f ./$(DEPDIR)/rpcdump.Po
	-rm -f ./$(DEPDIR)/rpcmining.Po
	-rm -f ./$(DEPDIR)/rpcminting.Po
	-rm -f ./$(DEPDIR)/rpcnet.Po
	-rm -f ./$(DEPDIR)/rpcprotocol.Po
	-rm -f ./$(DEPDIR)/rpcrawtransaction.Po
	-rm -f ./$(DEPDIR)/rpcserver.Po
	-rm -f ./$(DEPDIR)/rpcwallet.Po
	-rm -f ./$(DEPDIR)/script.Po
	-rm -f ./$(DEPDIR)/sync.Po
	-rm -f ./$(DEPDIR)/txdb.Po
	-rm -f ./$(DEPDIR)/util.Po
	-rm -f ./$(DEPDIR)/version.Po
	-rm -f ./$(DEPDIR)/wallet.Po
	-rm -f ./$(DEPDIR)/walletdb.Po
	-rm -f qt/$(DEPDIR)/BitcoinAir_qt-bitcoin.Po
	-rm -f qt/$(DEPDIR)/BitcoinAir_qt-macdockiconhandler.Po
	-rm -f qt/$(DEPDIR)/BitcoinAir_qt-macnotificationhandler.Po
	-rm -f qt/$(DEPDIR)/BitcoinAir_qt-qrcodedialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-aboutdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-addressbookpage.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-addresstablemodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-askpassphrasedialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoin.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinaddressvalidator.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinamountfield.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoingui.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinstrings.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-bitcoinunits.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-clientmodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroldialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-coincontroltreewidget.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-csvmodelwriter.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-editaddressdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-guiutil.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-mintingfilterproxy.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-mintingtablemodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-mintingview.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_aboutdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addressbookpage.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_addresstablemodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_askpassphrasedialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinaddressvalidator.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinamountfield.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoingui.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_bitcoinunits.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_clientmodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroldialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_coincontroltreewidget.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_csvmodelwriter.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_editaddressdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_guiutil.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macdockiconhandler.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_macnotificationhandler.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingfilterproxy.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingtablemodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_mintingview.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_monitoreddatamapper.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigaddressentry.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisigdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_multisiginputentry.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_notificator.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_optionsmodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_overviewpage.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_paymentserver.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qrcodedialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvalidatedlineedit.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_qvaluecombobox.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_rpcconsole.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_sendcoinsentry.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_signverifymessagedialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_splashscreen.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondesc.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiondescdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionfilterproxy.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactiontablemodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_transactionview.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletframe.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletmodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletstack.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-moc_walletview.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-monitoreddatamapper.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-multisigaddressentry.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-multisigdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-multisiginputentry.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-notificator.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-optionsdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-optionsmodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-overviewpage.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-paymentserver.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-qrc_bitcoin.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-qvalidatedlineedit.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-qvaluecombobox.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-rpcconsole.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-sendcoinsentry.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-signverifymessagedialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-splashscreen.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondesc.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-transactiondescdialog.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-transactionfilterproxy.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-transactionrecord.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-transactiontablemodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-transactionview.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-walletframe.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-walletmodel.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-walletstack.Po
	-rm -f qt/$(DEPDIR)/libBitcoinAirqt_a-walletview.Po
	-rm -f qt/test/$(DEPDIR)/test_BitcoinAir_qt-moc_uritests.Po
	-rm -f qt/test/$(DEPDIR)/test_BitcoinAir_qt-test_main.Po
	-rm -f qt/test/$(DEPDIR)/test_BitcoinAir_qt-uritests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-Checkpoints_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-DoS_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-accounting_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-allocator_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-base32_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-base58_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-base64_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-bignum_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-canonical_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-checkblock_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-compress_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-getarg_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-key_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-mruset_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-multisig_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-netbase_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-pmt_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-rpc_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-script_P2SH_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-script_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-serialize_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-sigopcount_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-test_bitcoin.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-transaction_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-uint160_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-uint256_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-util_tests.Po
	-rm -f test/$(DEPDIR)/test_BitcoinAir-wallet_tests.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-local clean-noinstLIBRARIES cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


# NOTE: This dependency is not strictly necessary, but without it make may try to build both in parallel, which breaks the LevelDB build system in a race
$(LIBLEVELDB): $(LIBMEMENV)

$(LIBLEVELDB) $(LIBMEMENV):
	@echo "Building LevelDB ..." && $(MAKE) -C $(@D) $(@F) CXX="$(CXX)" \
	  CC="$(CC)" PLATFORM=$(TARGET_OS) AR="$(AR)" $(LEVELDB_TARGET_FLAGS) \
          OPT="$(CXXFLAGS) $(CPPFLAGS)"

.PHONY: FORCE

obj/build.h: FORCE
	@$(MKDIR_P) $(abs_top_builddir)/src/obj
	@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \
	  $(abs_top_srcdir)
version.o: obj/build.h

clean-local:
	-$(MAKE) -C leveldb clean
	rm -f leveldb/*/*.gcno leveldb/helpers/memenv/*.gcno

.rc.o:
	@test -f $(WINDRES) && $(WINDRES) -i $< -o $@ || \
	  echo error: could not build $@

.mm.o:
	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<

BitcoinAir_test: $(TEST_BINARY)

BitcoinAir_test_check: $(TEST_BINARY) FORCE
	$(MAKE) check-TESTS TESTS=$^

BitcoinAir_test_clean : FORCE
	rm -f $(CLEANFILES) $(test_test_BitcoinAir_OBJECTS) $(TEST_BINARY)

%.json.h: %.json
	@$(MKDIR_P) $(@D)
	@echo "namespace json_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"

%.raw.h: %.raw
	@$(MKDIR_P) $(@D)
	@echo "namespace alert_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"

# Most files will depend on the forms and moc files as includes. Generate them
# before anything else.
$(QT_MOC): $(QT_FORMS_H)
$(qt_libBitcoinAirqt_a_OBJECTS) $(qt_bBitcoinAir_qt_OBJECTS) : | $(QT_MOC)

#Generating these with a half-written protobuf header leads to wacky results.
#This makes sure it's done.
$(QT_MOC): $(PROTOBUF_H)
$(QT_MOC_CPP): $(PROTOBUF_H)

.SECONDARY: $(QT_QM)

qt/bitcoinstrings.cpp: $(libBitcoinAir_server_a_SOURCES) $(libBitcoinAir_common_a_SOURCES) $(libBitcoinAir_cli_a_SOURCES)
	@test -n $(XGETTEXT) || echo "xgettext is required for updating translations"
	@cd $(top_srcdir); XGETTEXT=$(XGETTEXT) share/qt/extract_strings_qt.py

translate: qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOINAIR_QT_CPP) $(BITCOINAIR_QT_H) $(BITCOINAIR_MM)
	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
	@QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts qt/locale/bitcoin_en.ts

$(QT_QRC_CPP): $(QT_QRC) $(QT_QM) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) 
	@cd $(abs_srcdir); test -f $(RCC) && $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \
	  echo error: could not build $@
	$(SED) -i.bak -e '/^\*\*.*Created:/d' $@ && rm $@.bak
	$(SED) -i.bak -e '/^\*\*.*by:/d' $@ && rm $@.bak

BitcoinAir_qt_clean: FORCE
	rm -f $(CLEAN_QT) $(qt_libBitcoinAirqt_a_OBJECTS) $(qt_BitcoinAir_qt_OBJECTS) qt/BitcoinAir-qt$(EXEEXT) $(LIBBITCOINAIRQT)

BitcoinAir_qt : qt/BitcoinAir-qt$(EXEEXT)

ui_%.h: %.ui
	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
	@test -f $(UIC) && QT_SELECT=$(QT_SELECT) $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@
	$(SED) -e '/^\*\*.*Created:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}
	$(SED) -e '/^\*\*.*by:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}

%.moc: %.cpp
	QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@{.n,}
	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@{.n,}

moc_%.cpp: %.h
	QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@{.n,}
	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@{.n,}

%.qm: %.ts
	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
	@test -f $(LRELEASE) && QT_SELECT=$(QT_SELECT) $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \
	  echo error: could not build $(abs_builddir)/$@

test_BitcoinAir_qt : qt/test/test_BitcoinAir-qt$(EXEEXT)

test_BitcoinAir_qt_check : qt/test/test_BitcoinAir-qt$(EXEEXT) FORCE
	$(MAKE) check-TESTS TESTS=$^

test_BitcoinAir_qt_clean: FORCE
	rm -f $(CLEAN_BITCOINAIR_QT_TEST) $(qt_test_test_BitcoinAir_qt_OBJECTS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
